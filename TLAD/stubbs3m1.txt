void main()
{
    l_U0 = 86.00000000;
    l_U1 = 274.00000000;
    l_U108 = 0;
    l_U109 = 1;
    l_U110 = 3;
    l_U112 = 0;
    l_U113 = -1;
    l_U114 = 0;
    l_U115 = 0;
    l_U116 = 0;
    l_U117 = 0;
    l_U118 = 0;
    l_U119 = 0;
    l_U120 = 0;
    l_U122 = -1;
    l_U136 = 15.00000000;
    l_U137 = 35.00000000;
    l_U138 = 16.00000000;
    l_U139 = 0.00000000;
    l_U145 = 1000.00000000;
    l_U146 = 7500.00000000;
    l_U155 = 1;
    l_U156 = 30.00000000;
    l_U157 = 30.00000000;
    l_U158 = 2.00000000;
    l_U168 = 0.00000000;
    l_U169 = 0.00000000;
    l_U181 = 1;
    l_U182 = 0;
    l_U183 = -1;
    l_U184 = 1;
    l_U185 = -1;
    l_U186 = -1;
    l_U187 = 15.00000000;
    l_U214 = 0;
    l_U215 = -1949702649;
    l_U216 = 2075870698;
    l_U221 = 0.12000000;
    l_U232 = 1;
    l_U233 = 1;
    l_U358 = 2;
    l_U365 = 1000;
    l_U366 = 500;
    l_U367 = 250;
    l_U368 = 999999;
    l_U391 = 266.41450000;
    l_U392 = 171.63420000;
    l_U393 = 52.60600000;
    l_U394 = 175.52880000;
    l_U395 = 180.70330000;
    l_U396 = 221.44180000;
    l_U397 = 194.09770000;
    l_U398 = 161.95240000;
    l_U399 = 0.01000000;
    l_U415 = 183.95180000;
    l_U416 = 0.00000000;
    l_U417 = 0.00000000;
    l_U418 = 0.00000000;
    l_U419 = {-1441.74800000, 391.37280000, 16.90920000};
    l_U422 = {-1286.06500000, 433.15600000, 16.35070000};
    l_U425 = {-1315.80500000, 334.28510000, 13.62230000};
    l_U428 = {-1335.18700000, 328.51400000, 19.03790000};
    l_U431 = {-1344.00000000, 306.21130000, 12.43040000};
    l_U434 = {-1330.68000000, 347.05000000, 14.50000000};
    l_U437 = {-1330.68000000, 347.05000000, 14.50000000};
    l_U440 = {-1323.80400000, 352.99060000, 13.62170000};
    l_U443 = {-1317.82800000, 334.80170000, 13.62230000};
    l_U446 = {-1318.28200000, 328.59270000, 19.74254000};
    l_U449 = {-10.16726000, 0.00000000, -35.84157000};
    l_U452 = {-1351.88700000, 317.10390000, 13.10060000};
    l_U455 = {-1287.61800000, 328.51410000, 13.47370000};
    l_U458 = {-1325.37000000, 335.81000000, 14.53000000};
    l_U461 = {-1321.14000000, 347.50000000, 14.10000000};
    l_U464 = {-1284.86600000, 370.66410000, 13.87300000};
    l_U467 = {-1313.70000000, 347.50000000, 14.28000000};
    l_U470 = {-1341.52800000, 349.54650000, 13.62170000};
    l_U473 = {-1293.08300000, 356.58920000, 13.63170000};
    l_U476 = {-1340.24900000, 349.71740000, 13.62170000};
    l_U479 = {-1312.79900000, 351.17560000, 13.62230000};
    l_U520 = {-1318.58600000, 353.36540000, 14.38770000};
    l_U523 = {-1300.33600000, 317.50800000, 13.81460000};
    l_U526 = {-1323.25800000, 317.50400000, 13.81400000};
    l_U538 = 0;
    l_U539 = 0;
    l_U540 = 0;
    l_U541 = 0;
    l_U542 = 0;
    l_U543 = 0;
    l_U544 = 0;
    l_U545 = 0;
    l_U546 = 0;
    l_U547 = 0;
    l_U548 = 0;
    l_U549 = 0;
    l_U550 = 0;
    l_U551 = 0;
    l_U552 = 0;
    l_U553 = 0;
    l_U554 = 0;
    l_U555 = 0;
    l_U556 = 0;
    l_U557 = -2030171296;
    l_U558 = -2114683549;
    l_U559 = 996267216;
    l_U560 = -1918180705;
    l_U561 = 1349725314;
    l_U562 = 884422927;
    l_U563 = 980990533;
    l_U564 = 1621955848;
    l_U565 = 944388665;
    l_U566 = 207714363;
    l_U567 = "amb@pimps_pros";
    l_U568 = "misscar_sex";
    l_U569 = "amb@hooker";
    l_U570 = "missStubbs3P";
    l_U571 = "f_blowjob_intro";
    l_U572 = "f_blowjob_loop";
    l_U573 = "f_blowjob_outro";
    l_U574 = "m_blowjob_intro";
    l_U575 = "m_blowjob_loop";
    l_U576 = "m_blowjob_outro";
    l_U577 = "lean_in_cognoscenti";
    l_U578 = "lean_in_habanero";
    l_U579 = "lean_in_sentinel";
    l_U622 = 0;
    l_U623 = 0;
    l_U640 = 0;
    l_U641 = 0;
    l_U642 = 0;
    l_U643 = 2;
    l_U644 = 0;
    l_U645 = 0;
    l_U646 = 0;
    l_U647 = 0;
    l_U648 = 0;
    l_U649 = 0;
    l_U650 = 0;
    l_U651 = 0;
    l_U652 = 0;
    l_U653 = 0;
    SET_MISSION_FLAG( 1 );
    if (HAS_DEATHARREST_EXECUTED())
    {
        sub_1632();
        sub_4068( l_U358, l_U370 );
        sub_4125();
    }
    l_U370 = sub_4257( l_U358 );
    sub_4368( "E1S3P1A", 6 );
    sub_4521( "E1S3P1A" );
    sub_4368( "STUB3M1", 0 );
    PRINT_BIG( "HookerMission", 5000, 2 );
    while (true)
    {
        WAIT( 0 );
        sub_4683();
        sub_10299();
        switch (l_U622)
        {
            case 0:
            sub_10446();
            SET_CAR_DENSITY_MULTIPLIER( 0.40000000 );
            g_U10460 = 0;
            GET_GAME_TIMER( ref l_U385 );
            break;
            case 2:
            if (NOT (sub_6544( l_U358 )))
            {
                l_U622 = 1;
            }
            break;
            case 1:
            sub_11324();
            break;
            case 3:
            sub_12064();
            sub_13139();
            break;
            case 4:
            sub_12064();
            sub_13595();
            break;
            case 5:
            sub_13894();
            break;
            case 6:
            sub_14584();
            sub_15326();
            sub_15843();
            sub_16362();
            sub_17166();
            sub_17880();
            sub_19482();
            sub_19632();
            sub_19839();
            sub_26656();
            sub_26926();
            break;
            case 7:
            sub_27733( l_U358, "E1S3p1_GOT", "E1S3p1A", 0 );
            CLEAR_WANTED_LEVEL( sub_1764() );
            CLEAR_PRINTS();
            INCREMENT_INT_STAT( 145, 1 );
            sub_28349();
            g_U38700 = 1;
            g_U24 = 82;
            sub_34813( l_U358, l_U370, 5 );
            sub_4125();
            break;
            case 8:
            if (g_U10991 > 1)
            {
                SET_PLAYER_MOOD_PISSED_OFF( sub_1764(), 150 );
                SAY_AMBIENT_SPEECH( sub_4888(), "MISSION_FAIL_RAGE", 1, 1, 0 );
            }
            if (l_U538 == 1)
            {
                PRINT_NOW( "Hook", 7500, 1 );
                sub_27733( l_U358, "E1S3p1_NO", "E1S3p1A", 0 );
            }
            else if (l_U539 == 1)
            {
                PRINT_NOW( "Polit", 7500, 1 );
                sub_27733( l_U358, "E1S3p1_KILL", "E1S3p1A", 0 );
            }
            else if (l_U540 == 1)
            {
                PRINT_NOW( "Car", 7500, 1 );
                sub_27733( l_U358, "E1S3p1_NO", "E1S3p1A", 0 );
            }
            else if (l_U541 == 1)
            {
                PRINT_NOW( "Timeout", 7500, 1 );
                sub_27733( l_U358, "E1S3p1_NO", "E1S3p1A", 0 );
            }
            else if (l_U544 == 1)
            {
                PRINT_NOW( "spook", 7500, 1 );
                sub_27733( l_U358, "E1S3p1_NO", "E1S3p1A", 0 );
            }
            else if (l_U545 == 1)
            {
                PRINT_NOW( "RunAway", 7500, 1 );
                sub_27733( l_U358, "E1S3p1_NO", "E1S3p1A", 0 );
            }
            else if (l_U546 == 1)
            {
                PRINT_NOW( "policehook", 7500, 1 );
                sub_27733( l_U358, "E1S3p1_COP", "E1S3p1A", 0 );
            };;;;;;;
            sub_1632();
            sub_4068( l_U358, l_U370 );
            sub_4125();
            break;
        }
    }
    return;
}

void sub_1632()
{
    sub_1641();
    return;
}

void sub_1641()
{
    int iVar2;

    iVar2 = 2;
    sub_1655( iVar2 );
    sub_2601( iVar2 );
    return;
}

void sub_1655(unknown uParam0)
{
    if (g_U816)
    {
        sub_1674();
        return;
    }
    SET_PLAYER_MOOD_PISSED_OFF( sub_1764(), 150 );
    switch (uParam0)
    {
        case 2:
        case 8:
        sub_1837( uParam0, 0, 0, -3, 0, 0 );
        break;
        default: sub_2369( "Flow_Proc_Fail_Stats_Update: Need to add stat details for strand" );
    }
    sub_2504();
    return;
}

void sub_1674()
{
    sub_1683();
    return;
}

void sub_1683()
{
    if (g_U0)
    {
        return;
    }
    if (COMPARE_STRING( ref g_U10987, "" ))
    {
        return;
    }
    PLAYSTATS_MISSION_CANCELLED( ref g_U10987 );
    StrCopy( ref g_U10987, "", 16 );
    return;
}

void sub_1764()
{
    return CONVERT_INT_TO_PLAYERINDEX( GET_PLAYER_ID() );
}

void sub_1837(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, int iParam5)
{
    sub_1848( uParam1 );
    sub_2043( uParam0, 0, uParam2 );
    sub_2043( uParam0, 1, uParam3 );
    sub_2043( uParam0, 2, uParam4 );
    ProtectedSet(g_U20902[4], ProtectedGet(g_U20902[4]) + iParam5);
    sub_2236();
    return;
}

void sub_1848(unknown uParam0)
{
    ADD_SCORE( sub_1764(), uParam0 );
    sub_1873( uParam0 );
    return;
}

void sub_1873(int iParam0)
{
    if (g_U0)
    {
        return;
    }
    if (iParam0 < 0)
    {
        sub_1984( "Flow_Achievements_Increase_Cash_From_Missions: negative cash given. Tell Keith." );
    }
    INCREMENT_INT_STAT_NO_MESSAGE( 93, iParam0 );
    return;
}

void sub_1984(unknown uParam0)
{
    SCRIPT_ASSERT( uParam0 );
    return;
}

void sub_2043(unknown uParam0, unknown uParam1, int iParam2)
{
    g_U12306[uParam0]._fU40[uParam1] += iParam2;
    if (g_U12306[uParam0]._fU40[uParam1] < 0)
    {
        g_U12306[uParam0]._fU40[uParam1] = 0;
    }
    if (g_U12306[uParam0]._fU40[uParam1] > 100)
    {
        g_U12306[uParam0]._fU40[uParam1] = 100;
    }
    return;
}

void sub_2236()
{
    int I;

    I = 0;
    for ( I = 0; I < 5; I++ )
    {
        l_U352[I] = 4;
    }
    return;
}

void sub_2369(unknown uParam0)
{
    PRINTSTRING( "FLOW ERROR: " );
    PRINTSTRING( uParam0 );
    PRINTNL();
    SCRIPT_ASSERT( "FLOW ERROR: Press IGNORE button and look at console window for details" );
    return;
}

void sub_2504()
{
    sub_2513();
    return;
}

void sub_2513()
{
    if (g_U0)
    {
        return;
    }
    if (COMPARE_STRING( ref g_U10987, "" ))
    {
        return;
    }
    PLAYSTATS_MISSION_FAILED( ref g_U10987 );
    StrCopy( ref g_U10987, "", 16 );
    return;
}

void sub_2601(unknown uParam0)
{
    int iVar3;
    unknown uVar4;

    if (NOT g_U14838[uParam0]._fU160._fU80)
    {
        PRINTSTRING( "Flow_Quit_Proc_Subpart error - strand = " );
        PRINTINT( uParam0 );
        PRINTNL();
        sub_2369( "Flow_Quit_Proc_Subpart: Proc Mission not loaded" );
    }
    if (NOT g_U14838[uParam0]._fU160._fU96)
    {
        PRINTSTRING( "Flow_Quit_Proc_Subpart error - strand = " );
        PRINTINT( uParam0 );
        PRINTNL();
        sub_2369( "Flow_Quit_Proc_Subpart: Subpart not active" );
    }
    g_U14838[uParam0]._fU160._fU96 = 0;
    iVar3 = 0;
    GET_GAME_TIMER( ref iVar3 );
    if (g_U14838[uParam0]._fU160._fU100 < iVar3)
    {
        g_U14838[uParam0]._fU160._fU100 = iVar3 + 10000;
    }
    g_U12303 = 0;
    g_U12306[uParam0]._fU28 = 1;
    sub_3000();
    sub_3624();
    uVar4 = sub_3659( uParam0 );
    sub_3914( uVar4, 0 );
    sub_3995();
    return;
}

void sub_3000()
{
    int I;

    for ( I = 0; I <= (g_U572 - 1); I++ )
    {
        if ((g_U572[I]._fU20) AND ((sub_3038( 5, g_U572[I] )) == 1))
        {
            if ((sub_3038( 1, g_U572[I] )) != 0)
            {
                sub_3324( I );
            }
        }
    }
    if (NOT sub_3490())
    {
        SET_MESSAGES_WAITING( 0 );
        g_U94._fU404 = 1000;
    }
    if (g_U94._fU0 == 1015)
    {
        g_U94._fU92 = 1;
    }
    return;
}

int sub_3038(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6)
{
    switch (uParam0)
    {
        case 0:
        return GET_BITS_IN_RANGE( uParam1._fU0[1], 14, 23 );
        break;
        case 1:
        return GET_BITS_IN_RANGE( uParam1._fU0[0], 0, 13 );
        break;
        case 2:
        return GET_BITS_IN_RANGE( uParam1._fU0[0], 14, 27 );
        break;
        case 3:
        return GET_BITS_IN_RANGE( uParam1._fU0[1], 0, 13 );
        break;
        case 4:
        return GET_BITS_IN_RANGE( uParam1._fU0[1], 24, 27 );
        break;
        case 5:
        return GET_BITS_IN_RANGE( uParam1._fU0[0], 28, 31 );
        break;
        case 6:
        return uParam1._fU0[2];
        break;
    }
    return -1;
}

void sub_3324(int iParam0)
{
    int I;

    if (iParam0 < (g_U572 - 1))
    {
        for ( I = iParam0 + 1; I <= (g_U572 - 1); I++ )
        {
            g_U572[I - 1] = {g_U572[I]};
        }
    }
    sub_3409( g_U572 - 1 );
    return;
}

void sub_3409(unknown uParam0)
{
    g_U572[uParam0]._fU0[0] = -1;
    g_U572[uParam0]._fU0[1] = -1;
    g_U572[uParam0]._fU0[2] = -1;
    return;
}

int sub_3490()
{
    int I;

    for ( I = 0; I <= (g_U572 - 1); I++ )
    {
        if ((sub_3038( 4, g_U572[I] )) == 0)
        {
            return 1;
        }
    }
    return 0;
}

void sub_3624()
{
    unknown uVar2;

    uVar2 = g_U10986;
    SET_RICH_PRESENCE_TEMPLATESP2( uVar2 );
    return;
}

int sub_3659(unknown uParam0)
{
    switch (uParam0)
    {
        case 0: return 0;
        case 1: return 1;
        case 2: return 2;
        case 3: return 3;
        case 4: return 4;
        case 5: return 5;
        case 6: return 6;
        case 7: return 7;
        case 8: return 8;
    }
    PRINTSTRING( "UNKNOWN STRAND ID: " );
    PRINTINT( uParam0 );
    PRINTNL();
    sub_1984( "Flow_public: Return_Contact_From_Strand(): Unknown strand" );
    return 22;
}

void sub_3914(int iParam0, boolean bParam1)
{
    int iVar4;

    if (NOT (iParam0 < 22))
    {
        return;
    }
    iVar4 = 0;
    GET_GAME_TIMER( ref iVar4 );
    g_U20853[iParam0] = iVar4;
    if (bParam1)
    {
        g_U20853[iParam0] += 30000;
    }
    return;
}

void sub_3995()
{
    int iVar2;

    iVar2 = 0;
    GET_GAME_TIMER( ref iVar2 );
    g_U20912 = iVar2 + 2000;
    return;
}

void sub_4068(unknown uParam0, unknown uParam1)
{
    g_U15862[uParam0]._fU228._fU12[uParam1] = 2;
    g_U15862[uParam0]._fU228._fU0 = 2;
    return;
}

void sub_4125()
{
    SET_CAR_DENSITY_MULTIPLIER( 1.00000000 );
    SWITCH_ROADS_ON( l_U434._fU0 - 40, l_U434._fU4 - 40, l_U434._fU8 - 40, l_U434._fU0 + 40, l_U434._fU4 + 40, l_U434._fU8 + 40 );
    g_U10460 = 1;
    g_U9553 = 0;
    TERMINATE_THIS_SCRIPT();
    return;
}

int sub_4257(unknown uParam0)
{
    int Result;

    for ( Result = 0; Result <= 14; Result++ )
    {
        switch (g_U15862[uParam0]._fU228._fU12[Result])
        {
            case 2:
            case 0:
            return Result;
            break;
        }
    }
    return -1;
}

void sub_4368(unknown uParam0, unknown uParam1)
{
    boolean bVar4;

    bVar4 = true;
    while (bVar4)
    {
        if (NOT (HAS_THIS_ADDITIONAL_TEXT_LOADED( uParam0, uParam1 )))
        {
            if (NOT sub_4404())
            {
                REQUEST_ADDITIONAL_TEXT( uParam0, uParam1 );
            }
            WAIT( 0 );
        }
        else
        {
            bVar4 = false;
        }
    }
    return;
}

int sub_4404()
{
    int I;

    for ( I = 0; I <= (8 - 1); I++ )
    {
        if (IS_STREAMING_ADDITIONAL_TEXT( I ))
        {
            return 1;
        }
    }
    return 0;
}

void sub_4521(unknown uParam0)
{
    StrCopy( ref l_U2._fU0, uParam0, 16 );
    sub_4538();
    return;
}

void sub_4538()
{
    int I;

    for ( I = 0; I <= 8; I++ )
    {
        l_U2._fU16[I]._fU0 = nil;
        StrCopy( ref l_U2._fU16[I]._fU4, "", 32 );
        l_U2._fU344[I] = 0;
    }
    return;
}

void sub_4683()
{
    int I;
    int iVar3;

    if (l_U542 == 0)
    {
        if (DOES_CHAR_EXIST( l_U581 ))
        {
            if (IS_CHAR_INJURED( l_U581 ))
            {
                if (l_U622 != 8)
                {
                    l_U538 = 1;
                    l_U622 = 8;
                }
            }
        }
        if (DOES_CHAR_EXIST( l_U580 ))
        {
            if (IS_CHAR_INJURED( l_U580 ))
            {
                if (l_U622 != 8)
                {
                    l_U539 = 1;
                    l_U622 = 8;
                }
            }
        }
        if (DOES_VEHICLE_EXIST( l_U594 ))
        {
            if (NOT (IS_VEH_DRIVEABLE( l_U594 )))
            {
                if (l_U622 != 8)
                {
                    l_U540 = 1;
                    l_U622 = 8;
                }
            }
        }
        if (sub_4879() == 1)
        {
            sub_5044();
            l_U545 = 1;
            l_U622 = 8;
        }
        if (DOES_CHAR_EXIST( l_U582 ))
        {
            if (NOT (IS_CHAR_INJURED( l_U582 )))
            {
                if (HAS_CHAR_BEEN_DAMAGED_BY_CHAR( l_U582, sub_4888(), 0 ))
                {
                    sub_5044();
                    l_U545 = 1;
                    l_U622 = 8;
                }
            }
            else
            {
                sub_5044();
                l_U545 = 1;
                l_U622 = 8;
            }
        }
        if (DOES_CHAR_EXIST( l_U583 ))
        {
            if (NOT (IS_CHAR_INJURED( l_U583 )))
            {
                if (HAS_CHAR_BEEN_DAMAGED_BY_CHAR( l_U583, sub_4888(), 0 ))
                {
                    sub_5044();
                    l_U545 = 1;
                    l_U622 = 8;
                }
            }
            else
            {
                sub_5044();
                l_U545 = 1;
                l_U622 = 8;
            }
        }
        if (DOES_VEHICLE_EXIST( l_U595 ))
        {
            if (IS_VEH_DRIVEABLE( l_U595 ))
            {
                if (HAS_CAR_BEEN_DAMAGED_BY_CHAR( l_U595, sub_4888() ))
                {
                    sub_5044();
                    l_U545 = 1;
                    l_U622 = 8;
                }
            }
            else
            {
                sub_5044();
                l_U545 = 1;
                l_U622 = 8;
            }
        }
        if (DOES_VEHICLE_EXIST( l_U596 ))
        {
            if (IS_VEH_DRIVEABLE( l_U596 ))
            {
                if (HAS_CAR_BEEN_DAMAGED_BY_CHAR( l_U596, sub_4888() ))
                {
                    sub_5044();
                    l_U545 = 1;
                    l_U622 = 8;
                }
            }
            else
            {
                sub_5044();
                l_U545 = 1;
                l_U622 = 8;
            }
        }
        if (IS_CHAR_IN_ANY_POLICE_VEHICLE( sub_4888() ))
        {
            if (sub_5883())
            {
                sub_5044();
                l_U545 = 1;
                l_U622 = 8;
            }
        }
        for ( I = 0; I <= 5; I++ )
        {
            if (sub_5993())
            {
                sub_5044();
                l_U545 = 1;
                l_U622 = 8;
            }
        }
        STORE_WANTED_LEVEL( sub_1764(), ref iVar3 );
        if (iVar3 > 0)
        {
            if (sub_5883())
            {
                sub_5044();
                l_U546 = 1;
                l_U622 = 8;
            }
            if (sub_6276())
            {
                if (l_U553 == 0)
                {
                    sub_6374( l_U597 );
                    PRINT_NOW( "policewarn", 7500, 1 );
                    l_U553 = 1;
                }
            }
            else
            {
                sub_6455( l_U597 );
                l_U553 = 0;
            }
        }
        else
        {
            sub_6455( l_U597 );
            sub_6455( l_U598 );
            l_U553 = 0;
            l_U554 = 0;
        }
    }
    if (sub_6544( l_U358 ))
    {
        g_U10991--;
        sub_7129( ref l_U657, "E1S3p_NO", ref l_U678 );
        sub_7129( ref l_U657, "E1S3p_NO2", ref l_U678 );
        sub_7282( ref l_U657, "E1S3AUD", 1 );
        sub_10256( "STUBBS" );
        l_U622 = 8;
    }
    return;
}

int sub_4879()
{
    unknown uVar2;
    unknown uVar3;

    if (IS_CHAR_IN_ANY_CAR( sub_4888() ))
    {
        GET_CAR_CHAR_IS_USING( sub_4888(), ref uVar3 );
        GET_CAR_MODEL( uVar3, ref uVar2 );
        if (IS_THIS_MODEL_A_HELI( uVar2 ))
        {
            if (LOCATE_CHAR_ANY_MEANS_3D( sub_4888(), -1319.68300000, 343.47210000, 13.64140000, 100, 100, 150, 0 ))
            {
                return 1;
            }
        }
    }
    return 0;
}

void sub_4888()
{
    unknown Result;

    GET_PLAYER_CHAR( CONVERT_INT_TO_PLAYERINDEX( GET_PLAYER_ID() ), ref Result );
    return Result;
}

void sub_5044()
{
    int I;

    if (DOES_CHAR_EXIST( l_U581 ))
    {
        if (NOT (IS_CHAR_INJURED( l_U581 )))
        {
            TASK_SMART_FLEE_CHAR( l_U581, sub_4888(), 100.00000000, -2 );
        }
    }
    if (DOES_CHAR_EXIST( l_U584 ))
    {
        if (NOT (IS_CHAR_INJURED( l_U584 )))
        {
            TASK_SMART_FLEE_CHAR( l_U584, sub_4888(), 100.00000000, -2 );
        }
    }
    if (DOES_CHAR_EXIST( l_U585 ))
    {
        if (NOT (IS_CHAR_INJURED( l_U585 )))
        {
            TASK_SMART_FLEE_CHAR( l_U585, sub_4888(), 100.00000000, -2 );
        }
    }
    for ( I = 0; I <= 5; I++ )
    {
        if (DOES_CHAR_EXIST( l_U586[I] ))
        {
            if (NOT (IS_CHAR_INJURED( l_U586[I] )))
            {
                TASK_SMART_FLEE_CHAR( l_U586[I], sub_4888(), 100.00000000, -2 );
            }
        }
    }
    if (DOES_CHAR_EXIST( l_U582 ))
    {
        if (NOT (IS_CHAR_INJURED( l_U582 )))
        {
            FORCE_PED_TO_FLEE_WHILST_DRIVING_VEHICLE( l_U582, 1 );
            TASK_SMART_FLEE_CHAR( l_U582, sub_4888(), 100.00000000, -2 );
        }
    }
    if (DOES_CHAR_EXIST( l_U583 ))
    {
        if (NOT (IS_CHAR_INJURED( l_U583 )))
        {
            FORCE_PED_TO_FLEE_WHILST_DRIVING_VEHICLE( l_U583, 1 );
            TASK_SMART_FLEE_CHAR( l_U583, sub_4888(), 100.00000000, -2 );
        }
    }
    return;
}

int sub_5883()
{
    if (LOCATE_CHAR_ANY_MEANS_3D( sub_4888(), l_U434._fU0, l_U434._fU4, l_U434._fU8, 20.00000000, 20.00000000, 20.00000000, 0 ))
    {
        return 1;
    }
    return 0;
}

int sub_5993()
{
    int I;

    if (DOES_CHAR_EXIST( l_U581 ))
    {
        if (IS_CHAR_INJURED( l_U581 ))
        {
            return 1;
        }
    }
    if (DOES_CHAR_EXIST( l_U584 ))
    {
        if (IS_CHAR_INJURED( l_U584 ))
        {
            return 1;
        }
    }
    if (DOES_CHAR_EXIST( l_U585 ))
    {
        if (IS_CHAR_INJURED( l_U585 ))
        {
            return 1;
        }
    }
    for ( I = 0; I <= 5; I++ )
    {
        if (DOES_CHAR_EXIST( l_U586[I] ))
        {
            if (IS_CHAR_INJURED( l_U586[I] ))
            {
                return 1;
            }
        }
    }
    return 0;
}

int sub_6276()
{
    if (LOCATE_CHAR_ANY_MEANS_3D( sub_4888(), l_U434._fU0, l_U434._fU4, l_U434._fU8, 60.00000000, 60.00000000, 60.00000000, 0 ))
    {
        return 1;
    }
    return 0;
}

void sub_6374(unknown uParam0)
{
    if (DOES_BLIP_EXIST( uParam0 ))
    {
        CHANGE_BLIP_DISPLAY( uParam0, 0 );
    }
    return;
}

void sub_6455(unknown uParam0)
{
    if (DOES_BLIP_EXIST( uParam0 ))
    {
        CHANGE_BLIP_DISPLAY( uParam0, 4 );
    }
    return;
}

int sub_6544(unknown uParam0)
{
    if (g_U15862[uParam0]._fU4 == 1)
    {
        if (g_U15862[uParam0]._fU8[1]._fU0[5] == 1)
        {
            g_U15862[uParam0]._fU4 = 0;
            g_U15862[uParam0]._fU8[1]._fU0[5] = 0;
            if (sub_6637())
            {
                return 0;
            }
            if (sub_6767())
            {
                return 0;
            }
            sub_7029();
            return 1;
        }
    }
    return 0;
}

int sub_6637()
{
    if ((GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT( "Brian" )) > 0)
    {
        return 1;
    }
    if ((GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT( "Dave" )) > 0)
    {
        return 1;
    }
    if ((GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT( "Malc1" )) > 0)
    {
        return 1;
    }
    if ((GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT( "Malc2" )) > 0)
    {
        return 1;
    }
    return 0;
}

int sub_6767()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    float fVar8;
    int I;
    int iVar10;

    fVar8 = 0.00000000;
    if (IS_CHAR_DEAD( sub_4888() ))
    {
        return 0;
    }
    GET_CHAR_COORDINATES( sub_4888(), ref uVar5._fU0, ref uVar5._fU4, ref uVar5._fU8 );
    I = 0;
    for ( I = 0; I < 9; I++ )
    {
        if ((g_U18635[I]._fU24) || (g_U18635[I]._fU20))
        {
            return 1;
        }
        if (g_U18635[I]._fU0)
        {
            iVar10 = g_U18635[I]._fU180;
            if (NOT (iVar10 == 16))
            {
                uVar2 = {g_U10789[iVar10]._fU4};
                GET_DISTANCE_BETWEEN_COORDS_3D( uVar5._fU0, uVar5._fU4, uVar5._fU8, uVar2._fU0, uVar2._fU4, uVar2._fU8, ref fVar8 );
                if (fVar8 < 500.00000000)
                {
                    return 1;
                }
            }
        }
    }
    return 0;
}

void sub_7029()
{
    g_U814 = 0;
    MARK_SCRIPT_AS_NO_LONGER_NEEDED( "SPcellphoneEndCall" );
    return;
}

void sub_7129(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if ((uParam2^) < (uParam0^))
    {
        StrCopy( ref (uParam0^)[(uParam2^)], uParam1, 16 );
        (uParam2^)++;
    }
    else
    {
        SCRIPT_ASSERT( "ADD_SPEECH_LABEL - increase the size of your array" );
    }
    return;
}

int sub_7282(unknown uParam0, unknown uParam1, boolean bParam2)
{
    unknown[2] uVar5;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;

    array(ref uVar5, 2);
    uVar14 = g_U94._fU60;
    if (bParam2)
    {
        return sub_7335( uVar14, uParam0, uParam1, 0, ref uVar5, ref uVar5, "", 0, bParam2, 1, 1, 0, 0, 0 );
    }
    if (NOT g_U94._fU368)
    {
        StrCopy( ref g_U94._fU224[0], uParam1, 16 );
        g_U94._fU224[1] = {(uParam0^)[0]};
        sub_9234( uVar14, ref g_U94._fU176 );
        g_U94._fU368 = 1;
        return 1;
    }
    return 0;
}

int sub_7335(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, boolean bParam8, unknown uParam9, unknown uParam10, boolean bParam11, unknown uParam12, unknown uParam13)
{
    int I;

    if (g_U94._fU540)
    {
        return 0;
    }
    sub_7405( "\n SETUP_AUDIO_PHONE_CALL has been called" );
    if (IS_SCRIPTED_CONVERSATION_ONGOING())
    {
        if (g_U8944 >= 6)
        {
            sub_7405( "\n scripted conversation is ongoing and priority is high" );
            return 0;
        }
    }
    if (NOT (IS_PLAYER_PLAYING( sub_1764() )))
    {
        sub_7405( "\n player is not playing" );
        return 0;
    }
    if ((NOT (IS_CHAR_SITTING_IN_ANY_CAR( sub_4888() ))) AND (IS_CHAR_IN_ANY_CAR( sub_4888() )))
    {
        sub_7405( "\n player is in middle of getting in/out of a car" );
        return 0;
    }
    switch (g_U8946)
    {
        case 4:
        case 1:
        case 2:
        sub_7405( "\n speechControlStatus = SPEECH_CONTROL_STREAMING_MOBILE OR speechControlStatus = SPEECH_CONTROL_STREAMING_CONVERSATION" );
        return 0;
        break;
    }
    switch (uParam9)
    {
        case 0:
        if ((NOT bParam11) AND (NOT sub_7862()))
        {
            return 0;
        }
        g_U94._fU60 = uParam0;
        g_U94._fU48 = 1;
        g_U15862[g_U94._fU60]._fU196._fU24 = 0;
        break;
        case 1:
        if (g_U94._fU368)
        {
            if ((NOT bParam8) || (g_U94._fU372))
            {
                sub_7405( "\n cellphone3Dstructure.missionAnsweredPhone OR (NOT missionCall)" );
                return 0;
            }
        }
        if (g_U94._fU60 != -1)
        {
            if ((g_U15862[g_U94._fU60]._fU196._fU24 != 4) AND (g_U15862[g_U94._fU60]._fU196._fU24 != 5))
            {
                g_U15862[g_U94._fU60]._fU196._fU24 = 0;
            }
        }
        g_U94._fU368 = 1;
        g_U94._fU372 = bParam8;
        uParam0 = g_U94._fU60;
        break;
        case 2:
        if ((NOT bParam11) AND (NOT sub_7862()))
        {
            return 0;
        }
        g_U94._fU60 = uParam0;
        g_U94._fU52 = 1;
        g_U94._fU56 = 1;
        g_U94._fU372 = 1;
        g_U94._fU368 = 1;
        g_U15862[g_U94._fU60]._fU196._fU24 = 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING())
    {
        ABORT_SCRIPTED_CONVERSATION( 0 );
    }
    sub_9234( uParam0, ref g_U94._fU176 );
    sub_9630( ref g_U94._fU160 );
    g_U94._fU380 = uParam10;
    g_U94._fU376 = bParam11;
    g_U94._fU420 = uParam12;
    g_U94._fU424 = -1;
    g_U94._fU364 = uParam3;
    StrCopy( ref g_U94._fU144, uParam2, 16 );
    for ( I = 0; I <= (g_U9051 - 1); I++ )
    {
        StrCopy( ref g_U9051[I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        g_U9051[I] = {(uParam1^)[I]};
        sub_9872( "\n Telling phone we want to play these labels ", ref (uParam1^)[I] );
    }
    for ( I = 0; I <= (g_U94._fU260 - 1); I++ )
    {
        if (I < (uParam4^))
        {
            g_U94._fU260[I] = {(uParam4^)[I]};
        }
        else
        {
            StrCopy( ref g_U94._fU260[I], "", 16 );
        }
    }
    for ( I = 0; I <= (g_U94._fU312 - 1); I++ )
    {
        if (I < (uParam5^))
        {
            g_U94._fU312[I] = {(uParam5^)[I]};
        }
        else
        {
            StrCopy( ref g_U94._fU312[I], "", 16 );
        }
    }
    StrCopy( ref g_U94._fU208, uParam6, 16 );
    g_U94._fU80 = uParam7;
    g_U94._fU384 = 0;
    g_U94._fU532 = uParam13;
    g_U8946 = 4;
    return 1;
}

void sub_7405(unknown uParam0)
{
    return;
}

int sub_7862()
{
    if ((g_U94._fU52) || (g_U94._fU48))
    {
        return 0;
    }
    if (g_U94._fU40 == 0)
    {
        return 0;
    }
    if (NOT sub_7919())
    {
        return 0;
    }
    if (g_U558 == 1)
    {
        return 0;
    }
    return 1;
}

int sub_7919()
{
    boolean bVar2;
    unknown uVar3;

    bVar2 = false;
    if (NOT (IS_PLAYER_PLAYING( sub_1764() )))
    {
        sub_7405( "\n PHONE SCREEN CHECK - player is not playing." );
        return 0;
    }
    if (NETWORK_HAVE_SUMMONS())
    {
        sub_7405( "\n PHONE SCREEN CHECK - player has been summoned into another session." );
        return 0;
    }
    if (g_U94._fU376)
    {
        sub_7405( "\n PHONE CHECK - .cellphone3Dstructure.overrideCellphoneChecks is returning TRUE" );
        return 1;
    }
    if ((g_U94._fU104) || (g_U94._fU100))
    {
        sub_7405( "\n PHONE CHECK - .hideCellphone OR .disableCellphone are returning TRUE." );
        return 0;
    }
    if (NOT (IS_PLAYER_FREE_FOR_AMBIENT_TASK( sub_1764() )))
    {
        if (NOT (IS_CHAR_IN_ANY_CAR( sub_4888() )))
        {
            GET_SCRIPT_TASK_STATUS( sub_4888(), 53, ref uVar3 );
            switch (uVar3)
            {
                case 7:
                case 2:
                sub_7405( "\n PHONE CHECK - player is not free for an ambient task and is not in a car)" );
                return 0;
                break;
                default:
                if (NOT (IS_CHAR_IN_WATER( sub_4888() )))
                {
                    bVar2 = true;
                }
                else
                {
                    sub_7405( "\n PHONE CHECK - player is in water" );
                    return 0;
                }
                break;
            }
        }
    }
    if ((NOT bVar2) AND (CODE_WANTS_MOBILE_PHONE_REMOVED()))
    {
        sub_7405( "\n PHONE CHECK - CODE_WANTS_MOBILE_PHONE_REMOVED() is returning TRUE." );
        return 0;
    }
    if (NOT (IS_PLAYER_SCRIPT_CONTROL_ON( sub_1764() )))
    {
        sub_7405( "\n PHONE CHECK - IS_PLAYER_SCRIPT_CONTROL_ON is returning FALSE." );
        return 0;
    }
    return 1;
}

void sub_9234(unknown uParam0, unknown uParam1)
{
    switch (uParam0)
    {
        case 0:
        StrCopy( (uParam1^), "BILLY", 32 );
        break;
        case 1:
        StrCopy( (uParam1^), "JIM", 32 );
        break;
        case 2:
        StrCopy( (uParam1^), "STUBBS", 32 );
        break;
        case 3:
        StrCopy( (uParam1^), "ASHLEY", 32 );
        break;
        case 4:
        StrCopy( (uParam1^), "ELIZABETA", 32 );
        break;
        case 5:
        StrCopy( (uParam1^), "RAY", 32 );
        break;
        case 6:
        StrCopy( (uParam1^), "TERRY", 32 );
        break;
        case 7:
        StrCopy( (uParam1^), "CLAY", 32 );
        break;
        case 8:
        StrCopy( (uParam1^), "ANGUS", 32 );
        break;
        case 13:
        StrCopy( (uParam1^), "BRIAN", 32 );
        break;
        case 15:
        StrCopy( (uParam1^), "MALC", 32 );
        break;
        case 18:
        StrCopy( (uParam1^), "BERNIE", 32 );
        break;
        case 12:
        StrCopy( (uParam1^), "LAZLOW", 32 );
        break;
        case 11:
        StrCopy( (uParam1^), "FED", 32 );
        break;
        default:
        StrCopy( (uParam1^), "", 32 );
        break;
    }
    return;
}

void sub_9630(unknown uParam0)
{
    StrCopy( (uParam0^), "JOHNNY", 16 );
    return;
}

void sub_9872(unknown uParam0, unknown uParam1)
{
    return;
}

void sub_10256(unknown uParam0)
{
    StrCopy( ref g_U94._fU176, uParam0, 32 );
    return;
}

void sub_10299()
{
    if (IS_KEYBOARD_KEY_PRESSED( 31 ))
    {
        l_U622 = 7;
    }
    if (IS_KEYBOARD_KEY_PRESSED( 33 ))
    {
        l_U544 = 1;
        l_U622 = 8;
    }
    return;
}

void sub_10446()
{
    REQUEST_MODEL( l_U557 );
    REQUEST_MODEL( l_U558 );
    REQUEST_MODEL( l_U559 );
    REQUEST_MODEL( l_U560 );
    REQUEST_MODEL( l_U563 );
    REQUEST_MODEL( l_U561 );
    REQUEST_MODEL( l_U564 );
    REQUEST_MODEL( l_U562 );
    REQUEST_MODEL( l_U565 );
    REQUEST_MODEL( l_U566 );
    REQUEST_ANIMS( l_U570 );
    REQUEST_ANIMS( l_U567 );
    REQUEST_ANIMS( l_U568 );
    REQUEST_ANIMS( l_U569 );
    g_U9553 = 1;
    if (HAS_MODEL_LOADED( l_U557 ))
    {
        if (HAS_MODEL_LOADED( l_U558 ))
        {
            if (HAS_MODEL_LOADED( l_U559 ))
            {
                if (HAS_MODEL_LOADED( l_U560 ))
                {
                    if (HAS_MODEL_LOADED( l_U563 ))
                    {
                        if (HAS_MODEL_LOADED( l_U561 ))
                        {
                            if (HAS_MODEL_LOADED( l_U564 ))
                            {
                                if (HAS_MODEL_LOADED( l_U562 ))
                                {
                                    if (HAS_MODEL_LOADED( l_U565 ))
                                    {
                                        if (HAS_MODEL_LOADED( l_U566 ))
                                        {
                                            if (HAVE_ANIMS_LOADED( l_U567 ))
                                            {
                                                if (HAVE_ANIMS_LOADED( l_U568 ))
                                                {
                                                    if (HAVE_ANIMS_LOADED( l_U569 ))
                                                    {
                                                        if (HAVE_ANIMS_LOADED( l_U570 ))
                                                        {
                                                            LOAD_COMBAT_DECISION_MAKER( 2, ref l_U612 );
                                                            SET_CHAR_GESTURE_GROUP( sub_4888(), "Gestures@Niko" );
                                                            l_U622 = 2;
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    l_U482[0] = {-1339.88000000, 351.41980000, 13.62170000};
    l_U400[0] = 238.82110000;
    l_U482[1] = {-1335.62400000, 354.35990000, 13.62170000};
    l_U400[1] = 164.18830000;
    l_U482[2] = {-1320.52200000, 350.52060000, 13.62230000};
    l_U400[2] = 317.41820000;
    l_U482[3] = {-1308.86300000, 351.71530000, 13.62230000};
    l_U400[3] = 210.70760000;
    l_U501[3] = {-1316.78300000, 349.82440000, 13.62230000};
    l_U407[3] = 82.34320000;
    l_U482[4] = {-1300.61400000, 352.04930000, 13.62180000};
    l_U400[4] = 197.63950000;
    l_U501[4] = {-1303.01200000, 351.70390000, 13.62200000};
    l_U407[4] = 135.46520000;
    l_U482[5] = {-1327.12600000, 349.73450000, 13.62170000};
    l_U400[5] = 134.61010000;
    l_U501[5] = {-1321.25600000, 349.46880000, 13.62230000};
    l_U407[5] = 342.38660000;
    return;
}

void sub_11324()
{
    sub_11333();
    if (IS_SCREEN_FADED_OUT())
    {
        DO_SCREEN_FADE_IN( 3000 );
    }
    SET_PLAYER_CONTROL( sub_1764(), 1 );
    PRINT_NOW( "alley", 7500, 1 );
    sub_11736();
    SWITCH_ROADS_OFF( l_U434._fU0 - 40, l_U434._fU4 - 40, l_U434._fU8 - 40, l_U434._fU0 + 40, l_U434._fU4 + 40, l_U434._fU8 + 40 );
    l_U622 = 3;
    return;
}

void sub_11333()
{
    if (DOES_BLIP_EXIST( l_U598 ))
    {
        REMOVE_BLIP( l_U598 );
    }
    if (NOT (DOES_BLIP_EXIST( l_U598 )))
    {
        ADD_BLIP_FOR_COORD( l_U431._fU0, l_U431._fU4, l_U431._fU8, ref l_U598 );
        CHANGE_BLIP_COLOUR( l_U598, 5 );
        CHANGE_BLIP_DISPLAY( l_U598, 4 );
        SET_ROUTE( l_U598, 1 );
    }
    if (DOES_BLIP_EXIST( l_U599 ))
    {
        REMOVE_BLIP( l_U599 );
    }
    if (NOT (IS_CHAR_INJURED( l_U581 )))
    {
        if (NOT (DOES_BLIP_EXIST( l_U599 )))
        {
            ADD_BLIP_FOR_CHAR( l_U581, ref l_U599 );
            CHANGE_BLIP_COLOUR( l_U599, 3 );
            CHANGE_BLIP_DISPLAY( l_U599, 0 );
        }
    }
    if (DOES_BLIP_EXIST( l_U600 ))
    {
        REMOVE_BLIP( l_U600 );
    }
    if (NOT (IS_CHAR_INJURED( l_U580 )))
    {
        if (NOT (DOES_BLIP_EXIST( l_U600 )))
        {
            ADD_BLIP_FOR_CHAR( l_U580, ref l_U600 );
            CHANGE_BLIP_COLOUR( l_U600, 3 );
            CHANGE_BLIP_DISPLAY( l_U600, 0 );
        }
    }
    return;
}

void sub_11736()
{
    if (HAS_MODEL_LOADED( l_U560 ))
    {
        if (NOT (DOES_OBJECT_EXIST( l_U608[0] )))
        {
            CREATE_OBJECT( l_U560, l_U523._fU0, l_U523._fU4, l_U523._fU8, ref l_U608[0], 1 );
            SET_OBJECT_HEADING( l_U608[0], l_U416 );
        }
        if (NOT (DOES_OBJECT_EXIST( l_U608[1] )))
        {
            CREATE_OBJECT( l_U560, l_U526._fU0, l_U526._fU4, l_U526._fU8, ref l_U608[1], 1 );
            SET_OBJECT_HEADING( l_U608[1], l_U417 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Steps Not Created" );
    }
    return;
}

void sub_12064()
{
    unknown uVar2;

    if ((LOCATE_CHAR_ANY_MEANS_3D( sub_4888(), l_U526._fU0, l_U526._fU4, l_U526._fU8, 10.00000000, 10.00000000, 10.00000000, 0 )) || (LOCATE_CHAR_ANY_MEANS_3D( sub_4888(), l_U523._fU0, l_U523._fU4, l_U523._fU8, 10.00000000, 10.00000000, 10.00000000, 0 )))
    {
        sub_12177();
        sub_12321();
        sub_12465();
        sub_12609();
    }
    return;
}

void sub_12177()
{
    if (HAS_MODEL_LOADED( l_U559 ))
    {
        if (NOT (DOES_CHAR_EXIST( l_U581 )))
        {
            CREATE_CHAR( 24, l_U559, l_U425._fU0, l_U425._fU4, l_U425._fU8, ref l_U581, 1 );
            SET_CHAR_HEADING( l_U581, l_U393 );
            TASK_PLAY_ANIM( l_U581, "idle_b", l_U569, 1000.00000000, 0, 0, 0, 0, -2 );
        }
    }
    return;
}

void sub_12321()
{
    if (HAS_MODEL_LOADED( l_U559 ))
    {
        if (NOT (DOES_CHAR_EXIST( l_U584 )))
        {
            CREATE_CHAR( 24, l_U559, l_U470._fU0, l_U470._fU4, l_U470._fU8, ref l_U584, 1 );
            SET_CHAR_HEADING( l_U584, l_U397 );
            TASK_PLAY_ANIM( l_U584, "idle_c", l_U569, 30.00000000, 1, 0, 0, 0, -2 );
        }
    }
    return;
}

void sub_12465()
{
    if (HAS_MODEL_LOADED( l_U559 ))
    {
        if (NOT (DOES_CHAR_EXIST( l_U585 )))
        {
            CREATE_CHAR( 24, l_U559, l_U473._fU0, l_U473._fU4, l_U473._fU8, ref l_U585, 1 );
            SET_CHAR_HEADING( l_U585, l_U398 );
            TASK_PLAY_ANIM( l_U585, "idle_a", l_U569, 30.00000000, 1, 0, 0, 0, -2 );
        }
    }
    return;
}

void sub_12609()
{
    int I;

    if (HAS_MODEL_LOADED( l_U559 ))
    {
        for ( I = 0; I <= 5; I++ )
        {
            if (NOT (DOES_CHAR_EXIST( l_U586[I] )))
            {
                CREATE_CHAR( 24, l_U559, l_U482[I]._fU0, l_U482[I]._fU4, l_U482[I]._fU8, ref l_U586[I], 1 );
                SET_CHAR_HEADING( l_U586[I], l_U400[I] );
                if (I == 0)
                {
                    TASK_PLAY_ANIM( l_U586[I], "idle_a", l_U569, 30.00000000, 1, 0, 0, 0, -2 );
                }
                else if (I == 1)
                {
                    TASK_PLAY_ANIM( l_U586[I], "idle_c", l_U569, 30.00000000, 1, 0, 0, 0, -2 );
                }
                else if (I == 2)
                {
                    TASK_PLAY_ANIM( l_U586[I], "idle_a", l_U569, 30.00000000, 1, 0, 0, 0, -2 );
                }
                else if (I == 3)
                {
                    TASK_PLAY_ANIM( l_U586[I], "idle_b", l_U569, 30.00000000, 1, 0, 0, 0, -2 );
                }
                else if ((I < 6) AND (I >= 4))
                {
                    TASK_PLAY_ANIM( l_U586[I], "idle_c", l_U569, 30.00000000, 0, 0, 0, 0, -2 );
                };;;;;
                if (I == 0)
                {
                    ;
                }
                else if (I == 1)
                {
                    ;
                }
                else if (I == 2)
                {
                    ;
                }
                else if (I == 3)
                {
                    ;
                }
                else if (I == 4)
                {
                    ;
                }
                else if (I == 5)
                {
                    ;
                }
                else if (I == 6)
                {
                    ;
                };;;;;;;
            }
        }
    }
    return;
}

void sub_13139()
{
    switch (l_U645)
    {
        case 0:
        if (NOT IS_MESSAGE_BEING_DISPLAYED())
        {
            if (IS_WANTED_LEVEL_GREATER( sub_1764(), 0 ))
            {
                sub_6374( l_U598 );
                PRINT_NOW( "wanted", 7500, 1 );
                l_U645 = 1;
            }
        }
        if (LOCATE_CHAR_ANY_MEANS_3D( sub_4888(), l_U431._fU0, l_U431._fU4, l_U431._fU8 + 1.60000000, 1.60000000, 1.60000000, 1.60000000, 1 ))
        {
            l_U645 = 2;
        }
        break;
        case 1:
        if (NOT (IS_WANTED_LEVEL_GREATER( sub_1764(), 0 )))
        {
            sub_6455( l_U598 );
            CLEAR_PRINTS();
            l_U645 = 0;
        }
        break;
        case 2:
        if (DOES_BLIP_EXIST( l_U598 ))
        {
            CHANGE_BLIP_DISPLAY( l_U598, 0 );
            REMOVE_BLIP( l_U598 );
        }
        if (DOES_BLIP_EXIST( l_U597 ))
        {
            REMOVE_BLIP( l_U597 );
        }
        if (NOT (DOES_BLIP_EXIST( l_U597 )))
        {
            ADD_BLIP_FOR_COORD( l_U428._fU0, l_U428._fU4, l_U428._fU8, ref l_U597 );
            CHANGE_BLIP_COLOUR( l_U597, 5 );
            CHANGE_BLIP_DISPLAY( l_U597, 4 );
            SET_ROUTE( l_U597, 1 );
        }
        PRINT_NOW( "Dest", 7500, 1 );
        l_U645 = 3;
        break;
        case 3:
        l_U622 = 4;
        break;
    }
    return;
}

void sub_13595()
{
    switch (l_U644)
    {
        case 0:
        if (LOCATE_CHAR_ANY_MEANS_3D( sub_4888(), l_U428._fU0, l_U428._fU4, l_U428._fU8 + 1.60000000, 1.60000000, 1.60000000, 1.60000000, 1 ))
        {
            if (sub_13728( l_U358, "E1S3p1_ARR", "E1S3p1A" ))
            {
                l_U644 = 2;
            }
        }
        break;
        case 2:
        CLEAR_AREA_OF_CARS( l_U434._fU0, l_U434._fU4, l_U434._fU8, 20.00000000 );
        GET_GAME_TIMER( ref l_U375 );
        l_U644 = 3;
        break;
        case 3:
        l_U622 = 5;
        break;
    }
    return;
}

void sub_13728(unknown uParam0, unknown uParam1, unknown uParam2)
{
    char[12] cVar5;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown[2] uVar14;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;

    array(ref cVar5, 2);
    StrCopy( ref cVar5[0], uParam1, 16 );
    StrCopy( ref cVar5[1], "END", 16 );
    array(ref uVar14, 2);
    return sub_7335( uParam0, ref cVar5, uParam2, 0, ref uVar14, ref uVar14, "", 0, 1, 2, 1, 0, 0, 0 );
}

void sub_13894()
{
    switch (l_U640)
    {
        case 0:
        l_U640 = 1;
        break;
        case 1:
        l_U640 = 2;
        break;
        case 2:
        l_U640 = 3;
        break;
        case 3:
        l_U640 = 4;
        break;
        case 4:
        l_U640 = 5;
        break;
        case 5:
        l_U640 = 6;
        break;
        case 6:
        sub_14069();
        if (DOES_CHAR_EXIST( l_U593 ))
        {
            l_U640 = 7;
        }
        break;
        case 7:
        sub_14205();
        if (DOES_VEHICLE_EXIST( l_U596 ))
        {
            l_U640 = 8;
        }
        break;
        case 8:
        sub_14369();
        if (DOES_CHAR_EXIST( l_U583 ))
        {
            l_U640 = 9;
        }
        break;
        case 9:
        l_U640 = 10;
        break;
        case 10:
        l_U622 = 6;
        break;
    }
    return;
}

void sub_14069()
{
    if (HAS_MODEL_LOADED( l_U566 ))
    {
        if (NOT (DOES_CHAR_EXIST( l_U593 )))
        {
            CREATE_CHAR( 19, l_U566, l_U520._fU0, l_U520._fU4, l_U520._fU8, ref l_U593, 1 );
            SET_CHAR_HEADING( l_U593, l_U415 );
        }
    }
    return;
}

void sub_14205()
{
    if (HAS_MODEL_LOADED( l_U562 ))
    {
        if (NOT (DOES_VEHICLE_EXIST( l_U596 )))
        {
            CREATE_CAR( l_U562, l_U464._fU0, l_U464._fU4, l_U464._fU8, ref l_U596, 1 );
            SET_CAR_HEADING( l_U596, l_U396 );
            CHANGE_CAR_COLOUR( l_U596, 63, 0 );
            SET_CAR_ON_GROUND_PROPERLY( l_U596 );
        }
    }
    return;
}

void sub_14369()
{
    if (HAS_MODEL_LOADED( l_U564 ))
    {
        if (IS_VEH_DRIVEABLE( l_U596 ))
        {
            if (NOT (DOES_CHAR_EXIST( l_U583 )))
            {
                CREATE_CHAR_INSIDE_CAR( l_U596, 4, l_U564, ref l_U583 );
                sub_14457( l_U583 );
            }
        }
    }
    return;
}

void sub_14457(unknown uParam0)
{
    if (NOT (IS_CHAR_INJURED( uParam0 )))
    {
        SET_CHAR_WILL_LEAVE_CAR_IN_COMBAT( uParam0, 0 );
        SET_COMBAT_DECISION_MAKER( uParam0, l_U612 );
    }
    return;
}

void sub_14584()
{
    if (NOT (IS_CHAR_INJURED( l_U581 )))
    {
        if (l_U548 == 0)
        {
            switch (l_U647)
            {
                case 0:
                GET_SCRIPT_TASK_STATUS( l_U581, 80, ref l_U617 );
                if (l_U617 == 7)
                {
                    TASK_FOLLOW_NAV_MESH_TO_COORD( l_U581, -1309.08200000, 334.29340000, 13.62230000, 2, -2, 1.00000000 );
                    l_U647 = 1;
                }
                break;
                case 1:
                GET_SCRIPT_TASK_STATUS( l_U581, 27, ref l_U617 );
                if (l_U617 == 7)
                {
                    l_U647 = 2;
                }
                break;
                case 2:
                TASK_PLAY_ANIM( l_U581, "Smoke_light_up", l_U567, 3.00000000, 0, 1, 1, 0, -2 );
                l_U647 = 3;
                break;
                case 3:
                GET_SCRIPT_TASK_STATUS( l_U581, 80, ref l_U617 );
                if (l_U617 == 7)
                {
                    l_U647 = 4;
                }
                break;
                case 4:
                TASK_PLAY_ANIM( l_U581, "Smoke_stand_b", l_U567, 1000.00000000, 0, 1, 1, 0, -2 );
                l_U647 = 5;
                break;
                case 5:
                GET_SCRIPT_TASK_STATUS( l_U581, 80, ref l_U617 );
                if (l_U617 == 7)
                {
                    l_U647 = 6;
                }
                break;
                case 6:
                TASK_PLAY_ANIM( l_U581, "Smoke_stub_out", l_U567, 1000.00000000, 0, 1, 1, 0, -2 );
                l_U647 = 7;
                break;
                case 7:
                GET_SCRIPT_TASK_STATUS( l_U581, 80, ref l_U617 );
                if (l_U617 == 7)
                {
                    l_U647 = 8;
                }
                break;
                case 8:
                TASK_FOLLOW_NAV_MESH_TO_COORD( l_U581, l_U425._fU0, l_U425._fU4, l_U425._fU8, 2, -2, 1.00000000 );
                l_U647 = 9;
                break;
                case 9:
                GET_SCRIPT_TASK_STATUS( l_U581, 27, ref l_U617 );
                if (l_U617 == 7)
                {
                    l_U647 = 10;
                }
                break;
                case 10:
                TASK_PLAY_ANIM( l_U581, "idle_a", l_U569, 3.00000000, 0, 0, 0, 0, -2 );
                l_U647 = 11;
                break;
                case 11:
                GET_SCRIPT_TASK_STATUS( l_U581, 80, ref l_U617 );
                if (l_U617 == 7)
                {
                    l_U647 = 0;
                }
                break;
            }
        }
    }
    return;
}

void sub_15326()
{
    if (NOT (IS_CHAR_INJURED( l_U586[1] )))
    {
        switch (l_U648)
        {
            case 0:
            TASK_PLAY_ANIM( l_U586[1], "Smoke_light_up", l_U567, 8.00000000, 0, 1, 1, 0, -2 );
            l_U648 = 1;
            break;
            case 1:
            GET_SCRIPT_TASK_STATUS( l_U586[1], 80, ref l_U619 );
            if (l_U619 == 7)
            {
                l_U648 = 4;
            }
            break;
            case 4:
            TASK_PLAY_ANIM( l_U586[1], "Smoke_stand_b", l_U567, 8.00000000, 0, 1, 1, 0, -2 );
            l_U648 = 5;
            break;
            case 5:
            GET_SCRIPT_TASK_STATUS( l_U586[1], 80, ref l_U619 );
            if (l_U619 == 7)
            {
                l_U648 = 8;
            }
            break;
            case 8:
            TASK_PLAY_ANIM( l_U586[1], "Smoke_stub_out", l_U567, 8.00000000, 0, 1, 1, 0, -2 );
            l_U648 = 9;
            break;
            case 9:
            GET_SCRIPT_TASK_STATUS( l_U586[1], 80, ref l_U619 );
            if (l_U619 == 7)
            {
                l_U648 = 0;
            }
            break;
            case 10:
            TASK_PLAY_ANIM( l_U586[3], "idle_a", l_U569, 1000.00000000, 0, 0, 0, 0, -2 );
            l_U648 = 11;
            break;
            case 11:
            GET_SCRIPT_TASK_STATUS( l_U586[3], 80, ref l_U619 );
            if (l_U619 == 7)
            {
                l_U648 = 0;
            }
            break;
        }
    }
    return;
}

void sub_15843()
{
    if (NOT (IS_CHAR_INJURED( l_U586[3] )))
    {
        switch (l_U650)
        {
            case 0:
            TASK_FOLLOW_NAV_MESH_TO_COORD( l_U586[3], l_U501[3]._fU0, l_U501[3]._fU4, l_U501[3]._fU8, 2, -2, 1.00000000 );
            l_U650 = 1;
            break;
            case 1:
            GET_SCRIPT_TASK_STATUS( l_U586[3], 27, ref l_U620 );
            if (l_U620 == 7)
            {
                l_U650 = 4;
            }
            break;
            case 4:
            TASK_PLAY_ANIM( l_U586[3], "rejection", l_U567, 8.00000000, 0, 1, 1, 0, -2 );
            l_U650 = 5;
            break;
            case 5:
            GET_SCRIPT_TASK_STATUS( l_U586[3], 80, ref l_U620 );
            if (l_U620 == 7)
            {
                l_U650 = 8;
            }
            break;
            case 8:
            TASK_FOLLOW_NAV_MESH_TO_COORD( l_U586[3], l_U482[3]._fU0, l_U482[3]._fU4, l_U482[3]._fU8, 2, -2, 1.00000000 );
            l_U650 = 9;
            break;
            case 9:
            GET_SCRIPT_TASK_STATUS( l_U586[3], 27, ref l_U620 );
            if (l_U620 == 7)
            {
                l_U650 = 0;
            }
            break;
            case 10:
            TASK_PLAY_ANIM( l_U586[3], "idle_a", l_U569, 1000.00000000, 0, 0, 0, 0, -2 );
            l_U650 = 11;
            break;
            case 11:
            GET_SCRIPT_TASK_STATUS( l_U586[3], 80, ref l_U620 );
            if (l_U620 == 7)
            {
                l_U650 = 0;
            }
            break;
        }
    }
    return;
}

void sub_16362()
{
    if (NOT (IS_CHAR_INJURED( l_U581 )))
    {
        if (l_U548 == 0)
        {
            switch (l_U651)
            {
                case 0:
                GET_SCRIPT_TASK_STATUS( l_U586[4], 80, ref l_U617 );
                if (l_U617 == 7)
                {
                    TASK_FOLLOW_NAV_MESH_TO_COORD( l_U586[4], l_U501[4]._fU0, l_U501[4]._fU4, l_U501[4]._fU8, 2, -2, 1.00000000 );
                    l_U651 = 1;
                }
                break;
                case 1:
                GET_SCRIPT_TASK_STATUS( l_U586[4], 27, ref l_U617 );
                if (l_U617 == 7)
                {
                    l_U651 = 2;
                }
                break;
                case 2:
                TASK_PLAY_ANIM( l_U586[4], "Smoke_light_up", l_U567, 3.00000000, 0, 1, 1, 0, -2 );
                l_U651 = 3;
                break;
                case 3:
                GET_SCRIPT_TASK_STATUS( l_U586[4], 80, ref l_U617 );
                if (l_U617 == 7)
                {
                    l_U651 = 4;
                }
                break;
                case 4:
                TASK_PLAY_ANIM( l_U586[4], "Smoke_stand_b", l_U567, 1000.00000000, 0, 1, 1, 0, -2 );
                l_U651 = 5;
                break;
                case 5:
                GET_SCRIPT_TASK_STATUS( l_U586[4], 80, ref l_U617 );
                if (l_U617 == 7)
                {
                    l_U651 = 6;
                }
                break;
                case 6:
                TASK_PLAY_ANIM( l_U586[4], "Smoke_stub_out", l_U567, 1000.00000000, 0, 1, 1, 0, -2 );
                l_U651 = 7;
                break;
                case 7:
                GET_SCRIPT_TASK_STATUS( l_U586[4], 80, ref l_U617 );
                if (l_U617 == 7)
                {
                    l_U651 = 8;
                }
                break;
                case 8:
                TASK_FOLLOW_NAV_MESH_TO_COORD( l_U586[4], l_U482[4]._fU0, l_U482[4]._fU4, l_U482[4]._fU8, 2, -2, 1.00000000 );
                l_U651 = 9;
                break;
                case 9:
                GET_SCRIPT_TASK_STATUS( l_U586[4], 27, ref l_U617 );
                if (l_U617 == 7)
                {
                    l_U651 = 10;
                }
                break;
                case 10:
                TASK_PLAY_ANIM( l_U586[4], "idle_a", l_U569, 3.00000000, 0, 0, 0, 0, -2 );
                l_U651 = 11;
                break;
                case 11:
                GET_SCRIPT_TASK_STATUS( l_U586[4], 80, ref l_U617 );
                if (l_U617 == 7)
                {
                    l_U651 = 0;
                }
                break;
            }
        }
    }
    return;
}

void sub_17166()
{
    if (NOT (IS_CHAR_INJURED( l_U586[5] )))
    {
        if (NOT (IS_CHAR_INJURED( l_U586[2] )))
        {
            switch (l_U652)
            {
                case 0:
                TASK_FOLLOW_NAV_MESH_TO_COORD( l_U586[5], l_U501[5]._fU0, l_U501[5]._fU4, l_U501[5]._fU8, 2, -2, 1.00000000 );
                l_U652 = 1;
                break;
                case 1:
                GET_SCRIPT_TASK_STATUS( l_U586[5], 27, ref l_U621 );
                if (l_U621 == 7)
                {
                    TASK_TURN_CHAR_TO_FACE_CHAR( l_U586[5], l_U586[2] );
                    TASK_TURN_CHAR_TO_FACE_CHAR( l_U586[2], l_U586[5] );
                    l_U652 = 4;
                }
                break;
                case 4:
                GET_SCRIPT_TASK_STATUS( l_U586[5], 34, ref l_U621 );
                if (l_U621 == 7)
                {
                    TASK_PLAY_ANIM( l_U586[5], "Street_argue_f_a", l_U567, 30.00000000, 0, 0, 0, 0, -2 );
                    TASK_PLAY_ANIM( l_U586[2], "Street_argue_f_b", l_U567, 30.00000000, 0, 0, 0, 0, -2 );
                    l_U652 = 5;
                }
                break;
                case 5:
                GET_SCRIPT_TASK_STATUS( l_U586[5], 80, ref l_U621 );
                if (l_U621 == 7)
                {
                    l_U652 = 8;
                }
                break;
                case 8:
                if (NOT (IS_CHAR_INJURED( l_U593 )))
                {
                    TASK_TURN_CHAR_TO_FACE_CHAR( l_U586[2], l_U593 );
                }
                TASK_FOLLOW_NAV_MESH_TO_COORD( l_U586[5], l_U482[5]._fU0, l_U482[5]._fU4, l_U482[5]._fU8, 2, -2, 1.00000000 );
                l_U652 = 9;
                break;
                case 9:
                GET_SCRIPT_TASK_STATUS( l_U586[5], 27, ref l_U621 );
                if (l_U621 == 7)
                {
                    l_U652 = 10;
                }
                break;
                case 10:
                TASK_PLAY_ANIM( l_U586[5], "idle_a", l_U569, 1000.00000000, 0, 0, 0, 0, -2 );
                l_U652 = 11;
                break;
                case 11:
                GET_SCRIPT_TASK_STATUS( l_U586[5], 80, ref l_U621 );
                if (l_U621 == 7)
                {
                    l_U652 = 0;
                }
                break;
            }
        }
    }
    return;
}

void sub_17880()
{
    int iVar2;

    switch (l_U623)
    {
        case 0:
        GET_GAME_TIMER( ref l_U624 );
        if (sub_17936())
        {
            sub_18002();
        }
        l_U623 = 1;
        break;
        case 1:
        GENERATE_RANDOM_INT_IN_RANGE( 0, 31, ref iVar2 );
        if (iVar2 < 3)
        {
            if (l_U628[0] == 0)
            {
                l_U639 = "Jeering_Resp";
                l_U628[0] = 1;
                l_U623 = 2;
            }
        }
        else if ((iVar2 < 7) AND (iVar2 >= 3))
        {
            if (l_U628[1] == 0)
            {
                l_U639 = "Drugs_Reject";
                l_U628[1] = 1;
                l_U623 = 2;
            }
        }
        else if ((iVar2 < 10) AND (iVar2 >= 7))
        {
            if (l_U628[2] == 0)
            {
                l_U639 = "Conv_Hooker_Resp_B";
                l_U628[2] = 1;
                l_U623 = 2;
            }
        }
        else if ((iVar2 < 13) AND (iVar2 >= 10))
        {
            if (l_U628[3] == 0)
            {
                l_U639 = "Generic_Yes_Please";
                l_U628[3] = 1;
                l_U623 = 2;
            }
        }
        else if ((iVar2 < 17) AND (iVar2 >= 13))
        {
            if (l_U628[4] == 0)
            {
                l_U639 = "Conv_Smoke_State";
                l_U628[4] = 1;
                l_U623 = 2;
            }
        }
        else if ((iVar2 < 19) AND (iVar2 >= 17))
        {
            if (l_U628[5] == 0)
            {
                l_U639 = "Conv_Hooker_Resp_A";
                l_U628[5] = 1;
                l_U623 = 2;
            }
        }
        else if ((iVar2 < 22) AND (iVar2 >= 19))
        {
            if (l_U628[6] == 0)
            {
                l_U639 = "Solicit";
                l_U628[6] = 1;
                l_U623 = 2;
            }
        }
        else if ((iVar2 < 25) AND (iVar2 >= 22))
        {
            if (l_U628[7] == 0)
            {
                l_U639 = "Conv_Smoke_Resp";
                l_U628[7] = 1;
                l_U623 = 2;
            }
        }
        else if ((iVar2 < 28) AND (iVar2 >= 25))
        {
            if (l_U628[8] == 0)
            {
                l_U639 = "Conv_Hooker_State_A";
                l_U628[8] = 1;
                l_U623 = 2;
            }
        }
        else if (l_U628[9] == 0)
        {
            l_U639 = "Conv_Hooker_State_C";
            l_U628[9] = 1;
            l_U623 = 2;
        };;;;;;;;;;
        break;
        case 2:
        GET_GAME_TIMER( ref l_U625 );
        l_U626 = l_U625 - l_U624;
        if (l_U626 > 1500)
        {
            GENERATE_RANDOM_INT_IN_RANGE( 0, 10, ref iVar2 );
            if (iVar2 == 0)
            {
                if (NOT (IS_CHAR_INJURED( l_U581 )))
                {
                    SAY_AMBIENT_SPEECH_WITH_VOICE( l_U581, l_U639, "F_Y_Hooker_03", 1, 1, 0 );
                }
            }
            else if (iVar2 == 1)
            {
                if (NOT (IS_CHAR_INJURED( l_U584 )))
                {
                    SAY_AMBIENT_SPEECH_WITH_VOICE( l_U584, l_U639, "F_Y_Hooker_03", 1, 1, 0 );
                }
            }
            else if (iVar2 == 2)
            {
                if (NOT (IS_CHAR_INJURED( l_U585 )))
                {
                    SAY_AMBIENT_SPEECH_WITH_VOICE( l_U585, l_U639, "F_Y_Hooker_03", 1, 1, 0 );
                }
            }
            else if (iVar2 == 3)
            {
                if (NOT (IS_CHAR_INJURED( l_U586[0] )))
                {
                    SAY_AMBIENT_SPEECH_WITH_VOICE( l_U586[0], l_U639, "F_Y_Hooker_03", 1, 1, 0 );
                }
            }
            else if (iVar2 == 4)
            {
                if (NOT (IS_CHAR_INJURED( l_U586[1] )))
                {
                    SAY_AMBIENT_SPEECH_WITH_VOICE( l_U586[1], l_U639, "F_Y_Hooker_03", 1, 1, 0 );
                }
            }
            else if (iVar2 == 5)
            {
                if (NOT (IS_CHAR_INJURED( l_U586[2] )))
                {
                    SAY_AMBIENT_SPEECH_WITH_VOICE( l_U586[2], l_U639, "F_Y_Hooker_03", 1, 1, 0 );
                }
            }
            else if (iVar2 == 6)
            {
                if (NOT (IS_CHAR_INJURED( l_U586[3] )))
                {
                    SAY_AMBIENT_SPEECH_WITH_VOICE( l_U586[3], l_U639, "F_Y_Hooker_03", 1, 1, 0 );
                }
            }
            else if (iVar2 == 7)
            {
                if (NOT (IS_CHAR_INJURED( l_U586[4] )))
                {
                    SAY_AMBIENT_SPEECH_WITH_VOICE( l_U586[4], l_U639, "F_Y_Hooker_03", 1, 1, 0 );
                }
            }
            else if (NOT (IS_CHAR_INJURED( l_U586[5] )))
            {
                SAY_AMBIENT_SPEECH_WITH_VOICE( l_U586[5], l_U639, "F_Y_Hooker_03", 1, 1, 0 );
            };;;;;;;;;
            l_U623 = 0;
        }
        break;
    }
    return;
}

int sub_17936()
{
    int I;

    for ( I = 0; I <= 9; I++ )
    {
        if (l_U628[I] == 0)
        {
            return 0;
        }
    }
    return 1;
}

void sub_18002()
{
    int I;

    for ( I = 0; I <= 9; I++ )
    {
        l_U628[I] = 0;
    }
    return;
}

void sub_19482()
{
    if (l_U552 == 0)
    {
        GET_GAME_TIMER( ref l_U376 );
        l_U377 = l_U376 - l_U375;
        if (l_U377 > 4000)
        {
            if (NOT IS_MESSAGE_BEING_DISPLAYED())
            {
                if (NOT sub_19557())
                {
                    PRINT_NOW( "descrip", 7500, 1 );
                    l_U552 = 1;
                }
            }
        }
    }
    return;
}

int sub_19557()
{
    if (g_U558 == 9)
    {
        return 0;
    }
    return 1;
}

void sub_19632()
{
    if (l_U542 == 0)
    {
        if (NOT (LOCATE_CHAR_ANY_MEANS_3D( sub_4888(), l_U428._fU0, l_U428._fU4, l_U428._fU8, 10.00000000, 10.00000000, 2.00000000, 0 )))
        {
            LOCATE_CHAR_ANY_MEANS_3D( sub_4888(), l_U428._fU0, l_U428._fU4, l_U428._fU8 + 2, 10.00000000, 10.00000000, 2.00000000, 1 );
        }
        else if (DOES_BLIP_EXIST( l_U597 ))
        {
            CHANGE_BLIP_DISPLAY( l_U597, 0 );
        }
    }
    else if (DOES_BLIP_EXIST( l_U597 ))
    {
        CHANGE_BLIP_DISPLAY( l_U597, 0 );
    }
    return;
}

void sub_19839()
{
    switch (l_U653)
    {
        case 0:
        if ((l_U654) || ((sub_19899() == 1) || (l_U642 > 10)))
        {
            GET_GAME_TIMER( ref l_U383 );
            l_U384 = l_U383 - l_U382;
            if ((l_U654 == 1) || (l_U384 > 5000))
            {
                if (sub_20292() == 1)
                {
                    sub_20576();
                    l_U622 = 7;
                }
                sub_20811();
            }
        }
        if ((l_U655) || ((sub_23582() == 1) || (l_U643 > 9)))
        {
            sub_23834();
        }
        sub_25470();
        break;
        case 1:
        if (l_U542 == 1)
        {
            l_U622 = 7;
        }
        else if (l_U543 == 0)
        {
            l_U541 = 1;
            l_U622 = 8;
        }
        else
        {
            l_U653 = 2;
        }
        break;
        case 2:
        GET_GAME_TIMER( ref l_U388 );
        PRINT_NOW( "QuickSend", 7500, 1 );
        l_U653 = 3;
        break;
        case 3:
        if (l_U542 == 0)
        {
            GET_GAME_TIMER( ref l_U389 );
            l_U390 = l_U389 - l_U388;
            if ((l_U543 == 0) || (l_U390 > 12000))
            {
                l_U541 = 1;
                l_U622 = 8;
            }
        }
        break;
    }
    return;
}

int sub_19899()
{
    if (DOES_CHAR_EXIST( l_U584 ))
    {
        if (DOES_CHAR_EXIST( l_U582 ))
        {
            if (NOT (IS_CHAR_INJURED( l_U584 )))
            {
                if (NOT (IS_CHAR_INJURED( l_U582 )))
                {
                    if ((IS_PLAYER_TARGETTING_CHAR( sub_1764(), l_U584 )) || (HAS_CHAR_BEEN_DAMAGED_BY_CHAR( l_U584, sub_4888(), 0 )))
                    {
                        sub_20029( l_U582, l_U584 );
                        l_U654 = 1;
                        return 1;
                    }
                    if ((IS_PLAYER_TARGETTING_CHAR( sub_1764(), l_U582 )) || (HAS_CHAR_BEEN_DAMAGED_BY_CHAR( l_U582, sub_4888(), 0 )))
                    {
                        sub_20029( l_U582, l_U584 );
                        l_U654 = 1;
                        return 1;
                    }
                }
                else
                {
                    return 1;
                }
            }
            else
            {
                return 1;
            }
        }
    }
    return 0;
}

void sub_20029(unknown uParam0, unknown uParam1)
{
    if (NOT (IS_CHAR_INJURED( uParam0 )))
    {
        FORCE_PED_TO_FLEE_WHILST_DRIVING_VEHICLE( uParam0, 1 );
        TASK_SMART_FLEE_CHAR( uParam0, sub_4888(), 100.00000000, -2 );
    }
    if (NOT (IS_CHAR_INJURED( uParam1 )))
    {
        TASK_SMART_FLEE_CHAR( uParam1, sub_4888(), 100.00000000, -2 );
    }
    return;
}

int sub_20292()
{
    if (l_U542 == 1)
    {
        if (sub_20313())
        {
            return 1;
        }
    }
    return 0;
}

int sub_20313()
{
    if (DOES_CHAR_EXIST( l_U581 ))
    {
        if (DOES_CHAR_EXIST( l_U580 ))
        {
            if (NOT (IS_CHAR_INJURED( l_U581 )))
            {
                if (NOT (IS_CHAR_INJURED( l_U580 )))
                {
                    if ((IS_PLAYER_TARGETTING_CHAR( sub_1764(), l_U581 )) || (HAS_CHAR_BEEN_DAMAGED_BY_CHAR( l_U581, sub_4888(), 0 )))
                    {
                        sub_20029( l_U580, l_U581 );
                        l_U656 = 1;
                        return 1;
                    }
                    if ((IS_PLAYER_TARGETTING_CHAR( sub_1764(), l_U580 )) || (HAS_CHAR_BEEN_DAMAGED_BY_CHAR( l_U580, sub_4888(), 0 )))
                    {
                        sub_20029( l_U580, l_U581 );
                        l_U656 = 1;
                        return 1;
                    }
                }
                else
                {
                    return 1;
                }
            }
            else
            {
                return 1;
            }
        }
    }
    return 0;
}

void sub_20576()
{
    if (NOT (IS_CHAR_INJURED( l_U581 )))
    {
        CLEAR_CHAR_TASKS( l_U581 );
        TASK_SMART_FLEE_CHAR( l_U581, sub_4888(), 100.00000000, -2 );
    }
    if (NOT (IS_CHAR_INJURED( l_U580 )))
    {
        if (IS_VEH_DRIVEABLE( l_U594 ))
        {
            CLEAR_CHAR_TASKS( l_U580 );
            OPEN_SEQUENCE_TASK( ref l_U604 );
            if (l_U544 == 1)
            {
                TASK_CAR_MISSION_PED_TARGET( 0, l_U594, sub_4888(), 8, 25, 2, 5, 10 );
            }
            else
            {
                TASK_CAR_DRIVE_WANDER( 0, l_U594, 10.00000000, 2 );
            }
            CLOSE_SEQUENCE_TASK( l_U604 );
            TASK_PERFORM_SEQUENCE( l_U580, l_U604 );
            CLEAR_SEQUENCE_TASK( l_U604 );
        }
    }
    return;
}

void sub_20811()
{
    float fVar2;

    if (NOT (IS_CHAR_INJURED( l_U581 )))
    {
        switch (l_U641)
        {
            case 0:
            sub_20946();
            if (DOES_VEHICLE_EXIST( l_U594 ))
            {
                l_U641 = 1;
            }
            break;
            case 1:
            sub_21118();
            if (DOES_CHAR_EXIST( l_U580 ))
            {
                l_U641 = 2;
            }
            break;
            case 2:
            if (IS_VEH_DRIVEABLE( l_U594 ))
            {
                if (NOT (IS_CHAR_INJURED( l_U580 )))
                {
                    if (l_U556 == 0)
                    {
                        TASK_CAR_DRIVE_TO_COORD( l_U580, l_U594, l_U434._fU0, l_U434._fU4, l_U434._fU8, 7.00000000, 0, l_U557, 2, 0.00000000, 7 );
                    }
                    else
                    {
                        TASK_CAR_DRIVE_TO_COORD( l_U580, l_U594, l_U437._fU0, l_U437._fU4, l_U437._fU8, 7.00000000, 0, l_U557, 2, 0.00000000, 7 );
                    }
                    TASK_FOLLOW_NAV_MESH_TO_COORD( l_U581, l_U443._fU0, l_U443._fU4, l_U443._fU8, 2, -2, 10.00000000 );
                    l_U641 = 3;
                }
            }
            break;
            case 3:
            if (IS_VEH_DRIVEABLE( l_U594 ))
            {
                if (NOT (IS_CHAR_INJURED( l_U580 )))
                {
                    GET_CAR_SPEED( l_U594, ref fVar2 );
                    if ((LOCATE_CAR_2D( l_U594, l_U437._fU0, l_U437._fU4, 12.00000000, 12.00000000, 0 )) || (LOCATE_CAR_2D( l_U594, l_U434._fU0, l_U434._fU4, 12.00000000, 12.00000000, 0 )))
                    {
                        if (fVar2 < 1.00000000)
                        {
                            TASK_CAR_MISSION( l_U580, l_U594, 0, 5, 0.00000000, 6, 2, 5 );
                            l_U641 = 4;
                        }
                    }
                }
            }
            break;
            case 4:
            if (IS_VEH_DRIVEABLE( l_U594 ))
            {
                if (NOT (IS_CHAR_INJURED( l_U580 )))
                {
                    GET_CAR_SPEED( l_U594, ref fVar2 );
                    if (fVar2 < 1.00000000)
                    {
                        l_U641 = 5;
                    }
                }
            }
            break;
            case 5:
            if (IS_VEH_DRIVEABLE( l_U594 ))
            {
                if (NOT (IS_CHAR_INJURED( l_U580 )))
                {
                    GET_INTERIOR_FROM_CHAR( sub_4888(), ref l_U613 );
                    if (l_U613 == nil)
                    {
                        PRINT_NOW( "There", 7500, 1 );
                    }
                    SOUND_CAR_HORN( l_U594, 2000 );
                    TASK_LOOK_AT_CHAR( l_U580, l_U581, 20000, 0 );
                    l_U548 = 1;
                    l_U641 = 6;
                }
            }
            break;
            case 6:
            sub_21864( l_U580, l_U594, l_U581 );
            break;
            case 7:
            if (IS_VEH_DRIVEABLE( l_U594 ))
            {
                if (NOT (IS_CHAR_INJURED( l_U580 )))
                {
                    if (NOT (IS_CHAR_INJURED( l_U581 )))
                    {
                        GET_CAR_SPEED( l_U594, ref fVar2 );
                        if (fVar2 <= 2.00000000)
                        {
                            if (LOCATE_CHAR_ANY_MEANS_2D( l_U581, l_U529._fU0, l_U529._fU4, 2.00000000, 2.00000000, 0 ))
                            {
                                OPEN_SEQUENCE_TASK( ref l_U607 );
                                TASK_FOLLOW_NAV_MESH_TO_COORD( 0, l_U529._fU0, l_U529._fU4, l_U529._fU8, 2, -2, 0.00000000 );
                                TASK_TURN_CHAR_TO_FACE_CHAR( 0, l_U580 );
                                TASK_PLAY_ANIM( 0, l_U577, l_U570, 4.00000000, 0, 0, 0, 0, -1 );
                                CLOSE_SEQUENCE_TASK( l_U607 );
                                TASK_PERFORM_SEQUENCE( l_U581, l_U607 );
                                CLEAR_SEQUENCE_TASK( l_U607 );
                                TASK_LOOK_AT_CHAR( l_U580, l_U581, 20000, 0 );
                                l_U641 = 8;
                            }
                        }
                    }
                }
            }
            break;
            case 8:
            if (IS_VEH_DRIVEABLE( l_U594 ))
            {
                if (NOT (IS_CHAR_INJURED( l_U580 )))
                {
                    if (NOT (IS_CHAR_INJURED( l_U581 )))
                    {
                        GET_SCRIPT_TASK_STATUS( l_U581, 29, ref l_U616 );
                        if (l_U616 == 7)
                        {
                            TASK_PLAY_ANIM( l_U581, l_U577, l_U570, 1000.00000000, 0, 0, 0, 0, -1 );
                            l_U641 = 9;
                        }
                    }
                }
            }
            break;
            case 9:
            if (IS_VEH_DRIVEABLE( l_U594 ))
            {
                if (NOT (IS_CHAR_INJURED( l_U580 )))
                {
                    if (NOT (IS_CHAR_INJURED( l_U581 )))
                    {
                        GET_SCRIPT_TASK_STATUS( l_U581, 80, ref l_U616 );
                        if (l_U616 == 7)
                        {
                            SET_CHAR_KEEP_TASK( l_U581, 1 );
                            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U581, 1 );
                            SET_NEXT_DESIRED_MOVE_STATE( 2 );
                            TASK_ENTER_CAR_AS_PASSENGER( l_U581, l_U594, -2, 0 );
                            l_U641 = 10;
                        }
                    }
                }
            }
            break;
            case 10:
            if (IS_VEH_DRIVEABLE( l_U594 ))
            {
                if (NOT (IS_CHAR_INJURED( l_U580 )))
                {
                    if (NOT (IS_CHAR_INJURED( l_U581 )))
                    {
                        if (IS_CHAR_IN_CAR( l_U581, l_U594 ))
                        {
                            SET_CHAR_KEEP_TASK( l_U581, 1 );
                            TASK_CAR_DRIVE_WANDER( l_U580, l_U594, 10.00000000, 2 );
                            l_U641 = 11;
                        }
                    }
                }
            }
            break;
            case 11:
            if (IS_VEH_DRIVEABLE( l_U594 ))
            {
                if (NOT (IS_CHAR_INJURED( l_U580 )))
                {
                    if (NOT (LOCATE_CAR_3D( l_U594, l_U434._fU0, l_U434._fU4, l_U434._fU8, 20.00000000, 20.00000000, 20.00000000, 0 )))
                    {
                        l_U653 = 1;
                    }
                }
            }
            break;
        }
    }
    return;
}

void sub_20946()
{
    if (HAS_MODEL_LOADED( l_U557 ))
    {
        if (NOT (DOES_VEHICLE_EXIST( l_U594 )))
        {
            l_U556 = 1;
            CREATE_CAR( l_U557, l_U422._fU0, l_U422._fU4, l_U422._fU8, ref l_U594, 1 );
            SET_CAR_HEADING( l_U594, l_U392 );
            CHANGE_CAR_COLOUR( l_U594, 35, 35 );
            SET_CAR_ON_GROUND_PROPERLY( l_U594 );
        }
    }
    return;
}

void sub_21118()
{
    if (HAS_MODEL_LOADED( l_U558 ))
    {
        if (IS_VEH_DRIVEABLE( l_U594 ))
        {
            if (NOT (DOES_CHAR_EXIST( l_U580 )))
            {
                CREATE_CHAR_INSIDE_CAR( l_U594, 4, l_U558, ref l_U580 );
                sub_14457( l_U580 );
            }
        }
    }
    return;
}

void sub_21864(unknown uParam0, int iParam1, int iParam2)
{
    float fVar5;
    vector vVar6;
    vector vVar9;
    vector vVar12;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;

    if (NOT (IS_CHAR_INJURED( uParam0 )))
    {
        if (IS_VEH_DRIVEABLE( iParam1 ))
        {
            if (IS_CHAR_IN_CAR( uParam0, iParam1 ))
            {
                GET_CAR_SPEED( iParam1, ref fVar5 );
                GET_SCRIPT_TASK_STATUS( uParam0, 29, ref l_U616 );
                if ((fVar5 <= 0.10000000) AND (l_U616 == 7))
                {
                    if (iParam2 == l_U581)
                    {
                        GET_MODEL_DIMENSIONS( l_U557, ref vVar9, ref vVar6 );
                    }
                    else if (iParam2 == l_U584)
                    {
                        GET_MODEL_DIMENSIONS( l_U561, ref vVar9, ref vVar6 );
                    }
                    else if (iParam2 == l_U585)
                    {
                        GET_MODEL_DIMENSIONS( l_U562, ref vVar9, ref vVar6 );
                    };;;
                    vVar12 = {vVar6 - vVar9};
                    vVar12 = {vVar12 / 2.00000000};
                    if (iParam1 == l_U596)
                    {
                        GET_OFFSET_FROM_CAR_IN_WORLD_COORDS( iParam1, -vVar12.x - 2.30000000, vVar12.y - 2.46000000, 0.00000000, ref uVar15._fU0, ref uVar15._fU4, ref uVar15._fU8 );
                        GET_OFFSET_FROM_CAR_IN_WORLD_COORDS( iParam1, vVar12.x - 2.30000000, vVar12.y - 2.46000000, 0.00000000, ref uVar18._fU0, ref uVar18._fU4, ref uVar18._fU8 );
                    }
                    else if (iParam1 == l_U595)
                    {
                        GET_OFFSET_FROM_CAR_IN_WORLD_COORDS( iParam1, -vVar12.x - 2.11000000, vVar12.y - 2.25000000, 0.00000000, ref uVar15._fU0, ref uVar15._fU4, ref uVar15._fU8 );
                        GET_OFFSET_FROM_CAR_IN_WORLD_COORDS( iParam1, vVar12.x - 2.11000000, vVar12.y - 2.25000000, 0.00000000, ref uVar18._fU0, ref uVar18._fU4, ref uVar18._fU8 );
                    }
                    else if (iParam1 == l_U594)
                    {
                        GET_OFFSET_FROM_CAR_IN_WORLD_COORDS( iParam1, -vVar12.x + 0.57000000, vVar12.y - 2.89000000, 0.00000000, ref uVar15._fU0, ref uVar15._fU4, ref uVar15._fU8 );
                        GET_OFFSET_FROM_CAR_IN_WORLD_COORDS( iParam1, vVar12.x + 0.57000000, vVar12.y - 2.89000000, 0.00000000, ref uVar18._fU0, ref uVar18._fU4, ref uVar18._fU8 );
                    };;;
                    GET_CHAR_COORDINATES( iParam2, ref uVar21._fU0, ref uVar21._fU4, ref uVar21._fU8 );
                    if ((VDIST( uVar21, uVar18 )) < (VDIST( uVar21, uVar15 )))
                    {
                        uVar15 = {uVar18};
                        GET_CAR_HEADING( iParam1, ref l_U418 );
                        l_U418 += 90;
                    }
                    else
                    {
                        GET_CAR_HEADING( iParam1, ref l_U418 );
                        l_U418 -= 90;
                    }
                    OPEN_SEQUENCE_TASK( ref uVar24 );
                    TASK_FOLLOW_NAV_MESH_TO_COORD( 0, uVar15._fU0, uVar15._fU4, uVar15._fU8, 2, -1, 0.50000000 );
                    TASK_TURN_CHAR_TO_FACE_CHAR( 0, uParam0 );
                    TASK_STAND_STILL( 0, -2 );
                    CLOSE_SEQUENCE_TASK( uVar24 );
                    TASK_PERFORM_SEQUENCE( iParam2, uVar24 );
                    CLEAR_SEQUENCE_TASK( uVar24 );
                    if (iParam2 == l_U581)
                    {
                        l_U529 = {uVar15};
                        l_U641 = 7;
                    }
                    else if (iParam2 == l_U584)
                    {
                        l_U532 = {uVar15};
                        l_U642 = 7;
                    }
                    else if (iParam2 == l_U585)
                    {
                        l_U535 = {uVar15};
                        l_U643 = 7;
                    }
                    else
                    {
                        SCRIPT_ASSERT( "No hooker index line 770" );
                    };;;
                }
            }
        }
    }
    return;
}

int sub_23582()
{
    if (DOES_CHAR_EXIST( l_U585 ))
    {
        if (DOES_CHAR_EXIST( l_U583 ))
        {
            if (NOT (IS_CHAR_INJURED( l_U585 )))
            {
                if (NOT (IS_CHAR_INJURED( l_U583 )))
                {
                    if ((IS_PLAYER_TARGETTING_CHAR( sub_1764(), l_U585 )) || (HAS_CHAR_BEEN_DAMAGED_BY_CHAR( l_U585, sub_4888(), 0 )))
                    {
                        sub_20029( l_U583, l_U585 );
                        l_U655 = 1;
                        return 1;
                    }
                    if ((IS_PLAYER_TARGETTING_CHAR( sub_1764(), l_U583 )) || (HAS_CHAR_BEEN_DAMAGED_BY_CHAR( l_U583, sub_4888(), 0 )))
                    {
                        sub_20029( l_U583, l_U585 );
                        l_U655 = 1;
                        return 1;
                    }
                }
                else
                {
                    return 1;
                }
            }
            else
            {
                return 1;
            }
        }
    }
    return 0;
}

void sub_23834()
{
    float fVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (NOT (IS_CHAR_INJURED( l_U584 )))
    {
        switch (l_U642)
        {
            case 0:
            sub_23969();
            if (DOES_VEHICLE_EXIST( l_U595 ))
            {
                l_U642 = 1;
            }
            break;
            case 1:
            sub_24133();
            if (DOES_CHAR_EXIST( l_U582 ))
            {
                l_U642 = 2;
            }
            break;
            case 2:
            if (IS_VEH_DRIVEABLE( l_U595 ))
            {
                if (NOT (IS_CHAR_INJURED( l_U582 )))
                {
                    TASK_CAR_DRIVE_TO_COORD( l_U582, l_U595, l_U458._fU0, l_U458._fU4, l_U458._fU8, 7.00000000, 0, l_U557, 2, 0, 7 );
                    TASK_FOLLOW_NAV_MESH_TO_COORD( l_U584, l_U476._fU0, l_U476._fU4, l_U476._fU8, 2, -2, 10.00000000 );
                    l_U642 = 3;
                }
            }
            break;
            case 3:
            if (IS_VEH_DRIVEABLE( l_U595 ))
            {
                if (NOT (IS_CHAR_INJURED( l_U582 )))
                {
                    if (LOCATE_CAR_2D( l_U595, l_U458._fU0, l_U458._fU4, 3.00000000, 3.00000000, 0 ))
                    {
                        TASK_CAR_MISSION( l_U582, l_U595, 0, 21, 0.00000000, 6, 2, 5 );
                        l_U642 = 4;
                    }
                }
            }
            break;
            case 4:
            if (IS_VEH_DRIVEABLE( l_U595 ))
            {
                if (NOT (IS_CHAR_INJURED( l_U582 )))
                {
                    GET_CAR_SPEED( l_U595, ref fVar2 );
                    if (fVar2 < 1.00000000)
                    {
                        l_U642 = 5;
                    }
                }
            }
            break;
            case 5:
            if (IS_VEH_DRIVEABLE( l_U595 ))
            {
                if (NOT (IS_CHAR_INJURED( l_U582 )))
                {
                    SOUND_CAR_HORN( l_U595, 2000 );
                    TASK_LOOK_AT_CHAR( l_U582, l_U584, 20000, 0 );
                    l_U642 = 6;
                }
            }
            break;
            case 6:
            sub_21864( l_U582, l_U595, l_U584 );
            break;
            case 7:
            if (IS_VEH_DRIVEABLE( l_U595 ))
            {
                if (NOT (IS_CHAR_INJURED( l_U582 )))
                {
                    if (NOT (IS_CHAR_INJURED( l_U584 )))
                    {
                        GET_CAR_SPEED( l_U595, ref fVar2 );
                        if (fVar2 <= 2.00000000)
                        {
                            if (LOCATE_CHAR_ANY_MEANS_2D( l_U584, l_U532._fU0, l_U532._fU4, 2.00000000, 2.00000000, 0 ))
                            {
                                TASK_LOOK_AT_CHAR( l_U582, l_U584, 20000, 0 );
                                OPEN_SEQUENCE_TASK( ref l_U607 );
                                TASK_FOLLOW_NAV_MESH_TO_COORD( 0, l_U532._fU0, l_U532._fU4, l_U532._fU8, 2, -2, 0.00000000 );
                                TASK_TURN_CHAR_TO_FACE_CHAR( 0, l_U582 );
                                TASK_PLAY_ANIM( 0, l_U579, l_U570, 4.00000000, 0, 0, 0, 0, -1 );
                                CLOSE_SEQUENCE_TASK( l_U607 );
                                TASK_PERFORM_SEQUENCE( l_U584, l_U607 );
                                CLEAR_SEQUENCE_TASK( l_U607 );
                                l_U642 = 9;
                            }
                        }
                    }
                }
            }
            break;
            case 8:
            if (IS_VEH_DRIVEABLE( l_U595 ))
            {
                if (NOT (IS_CHAR_INJURED( l_U582 )))
                {
                    if (NOT (IS_CHAR_INJURED( l_U584 )))
                    {
                        GET_SCRIPT_TASK_STATUS( l_U584, 29, ref l_U618 );
                        if (l_U618 == 7)
                        {
                            TASK_PLAY_ANIM( l_U584, l_U579, l_U570, 1000.00000000, 0, 0, 0, 0, -1 );
                            l_U642 = 9;
                        }
                    }
                }
            }
            break;
            case 9:
            if (IS_VEH_DRIVEABLE( l_U595 ))
            {
                if (NOT (IS_CHAR_INJURED( l_U582 )))
                {
                    if (NOT (IS_CHAR_INJURED( l_U584 )))
                    {
                        GET_SCRIPT_TASK_STATUS( l_U584, 29, ref l_U618 );
                        if (l_U618 == 7)
                        {
                            GET_OFFSET_FROM_CAR_IN_WORLD_COORDS( l_U595, -1, -2, 0, ref uVar3._fU0, ref uVar3._fU4, ref uVar3._fU8 );
                            OPEN_SEQUENCE_TASK( ref l_U607 );
                            TASK_FOLLOW_NAV_MESH_TO_COORD( 0, uVar3._fU0, uVar3._fU4, uVar3._fU8, 2, -2, 0.50000000 );
                            TASK_ENTER_CAR_AS_PASSENGER( 0, l_U595, -2, 0 );
                            CLOSE_SEQUENCE_TASK( l_U607 );
                            SET_NEXT_DESIRED_MOVE_STATE( 2 );
                            TASK_PERFORM_SEQUENCE( l_U584, l_U607 );
                            CLEAR_SEQUENCE_TASK( l_U607 );
                            l_U642 = 10;
                        }
                    }
                }
            }
            break;
            case 10:
            if (IS_VEH_DRIVEABLE( l_U595 ))
            {
                if (NOT (IS_CHAR_INJURED( l_U582 )))
                {
                    if (NOT (IS_CHAR_INJURED( l_U584 )))
                    {
                        if (IS_CHAR_IN_CAR( l_U584, l_U595 ))
                        {
                            SET_CHAR_KEEP_TASK( l_U584, 1 );
                            TASK_CAR_DRIVE_WANDER( l_U582, l_U595, 10.00000000, 2 );
                            GET_GAME_TIMER( ref l_U382 );
                            l_U642 = 11;
                        }
                    }
                }
            }
            break;
            case 11: break;
        }
    }
    return;
}

void sub_23969()
{
    if (HAS_MODEL_LOADED( l_U561 ))
    {
        if (NOT (DOES_VEHICLE_EXIST( l_U595 )))
        {
            CREATE_CAR( l_U561, l_U452._fU0, l_U452._fU4, l_U452._fU8, ref l_U595, 1 );
            SET_CAR_HEADING( l_U595, l_U394 );
            CHANGE_CAR_COLOUR( l_U595, 112, 0 );
            SET_CAR_ON_GROUND_PROPERLY( l_U595 );
        }
    }
    return;
}

void sub_24133()
{
    if (HAS_MODEL_LOADED( l_U563 ))
    {
        if (IS_VEH_DRIVEABLE( l_U595 ))
        {
            if (NOT (DOES_CHAR_EXIST( l_U582 )))
            {
                CREATE_CHAR_INSIDE_CAR( l_U595, 4, l_U563, ref l_U582 );
                sub_14457( l_U582 );
            }
        }
    }
    return;
}

void sub_25470()
{
    float fVar2;

    if (IS_VEH_DRIVEABLE( l_U596 ))
    {
        if (NOT (IS_CHAR_INJURED( l_U583 )))
        {
            if (NOT (IS_CHAR_INJURED( l_U585 )))
            {
                switch (l_U643)
                {
                    case 2:
                    TASK_CAR_DRIVE_TO_COORD( l_U583, l_U596, l_U467._fU0, l_U467._fU4, l_U467._fU8, 7.00000000, 0, l_U557, 2, 0, 7 );
                    TASK_FOLLOW_NAV_MESH_TO_COORD( l_U585, l_U479._fU0, l_U479._fU4, l_U479._fU8, 2, -2, 10.00000000 );
                    l_U643 = 3;
                    break;
                    case 3:
                    if (LOCATE_CAR_2D( l_U596, l_U467._fU0, l_U467._fU4, 3.00000000, 3.00000000, 0 ))
                    {
                        TASK_CAR_MISSION( l_U583, l_U596, 0, 21, 0.00000000, 6, 2, 5 );
                        l_U643 = 4;
                    }
                    break;
                    case 4:
                    GET_CAR_SPEED( l_U596, ref fVar2 );
                    if (fVar2 < 1.00000000)
                    {
                        l_U643 = 5;
                    }
                    break;
                    case 5:
                    SOUND_CAR_HORN( l_U596, 2000 );
                    TASK_LOOK_AT_CHAR( l_U583, l_U585, 20000, 0 );
                    l_U643 = 6;
                    break;
                    case 6:
                    sub_21864( l_U583, l_U596, l_U585 );
                    break;
                    case 7:
                    if (NOT (IS_CHAR_INJURED( l_U585 )))
                    {
                        if (NOT (IS_CHAR_INJURED( l_U583 )))
                        {
                            GET_CAR_SPEED( l_U596, ref fVar2 );
                            if (fVar2 <= 2.00000000)
                            {
                                if (LOCATE_CHAR_ANY_MEANS_2D( l_U585, l_U535._fU0, l_U535._fU4, 2.00000000, 2.00000000, 0 ))
                                {
                                    TASK_LOOK_AT_CHAR( l_U583, l_U585, 20000, 0 );
                                    OPEN_SEQUENCE_TASK( ref l_U607 );
                                    TASK_FOLLOW_NAV_MESH_TO_COORD( 0, l_U535._fU0, l_U535._fU4, l_U535._fU8, 2, -2, 0.00000000 );
                                    TASK_TURN_CHAR_TO_FACE_CHAR( 0, l_U583 );
                                    TASK_PLAY_ANIM( 0, l_U578, l_U570, 4.00000000, 0, 0, 0, 0, -1 );
                                    CLOSE_SEQUENCE_TASK( l_U607 );
                                    TASK_PERFORM_SEQUENCE( l_U585, l_U607 );
                                    CLEAR_SEQUENCE_TASK( l_U607 );
                                    l_U643 = 9;
                                }
                            }
                        }
                    }
                    break;
                    case 8:
                    if (NOT (IS_CHAR_INJURED( l_U585 )))
                    {
                        GET_SCRIPT_TASK_STATUS( l_U585, 29, ref l_U616 );
                        if (l_U616 == 7)
                        {
                            TASK_PLAY_ANIM( l_U585, l_U578, l_U570, 1000.00000000, 0, 0, 0, 0, -1 );
                            l_U643 = 9;
                        }
                    }
                    break;
                    case 9:
                    if (NOT (IS_CHAR_INJURED( l_U585 )))
                    {
                        GET_SCRIPT_TASK_STATUS( l_U585, 29, ref l_U616 );
                        if (l_U616 == 7)
                        {
                            SET_NEXT_DESIRED_MOVE_STATE( 2 );
                            TASK_ENTER_CAR_AS_PASSENGER( l_U585, l_U596, -2, 0 );
                            l_U643 = 10;
                        }
                    }
                    break;
                    case 10:
                    if (NOT (IS_CHAR_INJURED( l_U585 )))
                    {
                        if (IS_CHAR_IN_CAR( l_U585, l_U596 ))
                        {
                            SET_CHAR_KEEP_TASK( l_U585, 1 );
                            TASK_CAR_DRIVE_WANDER( l_U583, l_U596, 10.00000000, 2 );
                            l_U643 = 11;
                        }
                    }
                    break;
                    case 11: break;
                }
            }
        }
    }
    return;
}

void sub_26656()
{
    if (l_U622 == 6)
    {
        if (IS_VEH_DRIVEABLE( l_U594 ))
        {
            if (LOCATE_CHAR_ANY_MEANS_CAR_3D( sub_4888(), l_U594, 15.00000000, 15.00000000, 5.00000000, 0 ))
            {
                if (l_U542 == 0)
                {
                    if ((LOCATE_CHAR_ANY_MEANS_CAR_3D( sub_4888(), l_U594, 8.00000000, 8.00000000, 20.00000000, 0 )) || (sub_26744()))
                    {
                        l_U544 = 1;
                        sub_20576();
                        l_U622 = 8;
                    }
                }
                else
                {
                    sub_20576();
                    l_U622 = 7;
                }
            }
        }
        if (NOT (LOCATE_CHAR_ANY_MEANS_3D( sub_4888(), l_U428._fU0, l_U428._fU4, l_U428._fU8, 150, 150, 150, 0 )))
        {
            l_U541 = 1;
            l_U622 = 8;
        }
    }
    return;
}

int sub_26744()
{
    if (g_U94._fU0 == 1021)
    {
        return 1;
    }
    return 0;
}

void sub_26926()
{
    if (l_U542 == 0)
    {
        if ((l_U654 == 1) || (l_U642 > 10))
        {
            if (l_U543 == 0)
            {
                if (NOT (IS_CHAR_INJURED( l_U580 )))
                {
                    if (sub_27002( l_U580 ))
                    {
                        if (sub_27002( l_U581 ))
                        {
                            if (l_U641 > 5)
                            {
                                l_U543 = 1;
                                sub_27106( l_U358 );
                                l_U547 = 0;
                                PRINT_NOW( "Send", 7500, 1 );
                            }
                        }
                        else
                        {
                            sub_27207();
                            PRINT_NOW( "Inph1", 7500, 1 );
                        }
                    }
                    if (sub_27253())
                    {
                        if (NOT (sub_27002( l_U580 )))
                        {
                            sub_27207();
                            PRINT_NOW( "Inph", 7500, 1 );
                        }
                    }
                }
            }
            else if (sub_26744())
            {
                sub_27207();
                if (l_U653 < 2)
                {
                    PRINT_NOW( "photo", 7500, 1 );
                }
                l_U543 = 0;
            }
            if (sub_27397( l_U358 ))
            {
                if (sub_27456( l_U358 ))
                {
                    l_U542 = 1;
                }
            }
        }
        else if (NOT (IS_CHAR_INJURED( l_U582 )))
        {
            if (NOT (IS_CHAR_INJURED( l_U584 )))
            {
                if (sub_27002( l_U582 ))
                {
                    if (sub_27002( l_U584 ))
                    {
                        PRINT_NOW( "good", 7500, 1 );
                    }
                }
            }
        }
        if (NOT (IS_CHAR_INJURED( l_U583 )))
        {
            if (NOT (IS_CHAR_INJURED( l_U585 )))
            {
                if (sub_27002( l_U583 ))
                {
                    if (sub_27002( l_U585 ))
                    {
                        PRINT_NOW( "good", 7500, 1 );
                    }
                }
            }
        }
    }
    return;
}

int sub_27002(unknown uParam0)
{
    if (g_U94._fU0 == 1023)
    {
        if (NOT (IS_CHAR_INJURED( uParam0 )))
        {
            return CELL_CAM_IS_CHAR_VISIBLE_NO_FACE_CHECK( uParam0 );
        }
    }
    return 0;
}

int sub_27106(unknown uParam0)
{
    if ((g_U94._fU0 == 1024) || (g_U94._fU0 == 1023))
    {
        g_U94._fU88 = 1;
        g_U94._fU60 = uParam0;
        return 1;
    }
    return 0;
}

void sub_27207()
{
    g_U94._fU88 = 0;
    return;
}

int sub_27253()
{
    if (g_U94._fU0 == 1023)
    {
        return 1;
    }
    return 0;
}

int sub_27397(int iParam0)
{
    if ((iParam0 == g_U94._fU60) AND (g_U94._fU88))
    {
        return 1;
    }
    return 0;
}

int sub_27456(int iParam0)
{
    if ((iParam0 == g_U94._fU60) AND (g_U94._fU0 == 1025))
    {
        return 1;
    }
    return 0;
}

void sub_27733(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    char[12] cVar6;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;

    array(ref cVar6, 2);
    StrCopy( ref cVar6[0], uParam1, 16 );
    StrCopy( ref cVar6[1], "END", 16 );
    sub_27777( uParam0, ref cVar6, uParam2, 10000, uParam3, 0 );
    return;
}

void sub_27777(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5)
{
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;
    unknown uVar36;
    int I;
    int iVar38;

    array(ref uVar8._fU32, 5);
    ref uVar8;
    iVar38 = uVar8._fU32;
    if (NOT (IS_THREAD_ACTIVE( g_U815 )))
    {
        uVar8._fU12 = uParam0;
        if ((uParam1^) > iVar38)
        {
            SCRIPT_ASSERT( "TELL SIMON END CALL ARRAY SIZE NEEDS INCREASING" );
            return;
        }
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            uVar8._fU32[I] = {(uParam1^)[I]};
        }
        if ((uParam1^) < iVar38)
        {
            StrCopy( ref uVar8._fU32[(uParam1^)], "END", 16 );
        }
        StrCopy( ref uVar8._fU16, uParam2, 16 );
        uVar8._fU0 = uParam3;
        uVar8._fU4 = uParam4;
        uVar8._fU8 = uParam5;
        REQUEST_SCRIPT( "SPcellphoneEndCall" );
        while (NOT (HAS_SCRIPT_LOADED( "SPcellphoneEndCall" )))
        {
            REQUEST_SCRIPT( "SPcellphoneEndCall" );
            WAIT( 0 );
        }
        g_U814 = 1;
        g_U815 = START_NEW_SCRIPT_WITH_ARGS( "SPcellphoneEndCall", ref uVar8, 29, 1024 );
        MARK_SCRIPT_AS_NO_LONGER_NEEDED( "SPcellphoneEndCall" );
    }
    else
    {
        SCRIPT_ASSERT( "MAKE_END_OF_MISSION_CALL() has been called more than once, might be in a loop" );
    }
    return;
}

void sub_28349()
{
    sub_28358();
    return;
}

void sub_28358()
{
    int iVar2;
    int iVar3;
    int iVar4;
    int iVar5;

    iVar2 = 2;
    iVar3 = 0;
    iVar4 = 1;
    iVar5 = 0;
    sub_28385( iVar3, iVar4, iVar5 );
    sub_2601( iVar2 );
    return;
}

void sub_28385(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = 2;
    sub_28417( iVar5, uParam0, uParam1, uParam2, "Contact_3" );
    return;
}

void sub_28417(unknown uParam0, boolean bParam1, boolean bParam2, boolean bParam3, unknown uParam4)
{
    int iVar7;
    int iVar8;
    char[64] cVar9;
    int iVar25;
    int I;
    int iVar27;
    boolean bVar28;
    unknown uVar29;
    unknown uVar30;
    int iVar31;
    boolean bVar32;

    iVar7 = -1;
    iVar8 = -1;
    StrCopy( ref cVar9, "", 64 );
    if (bParam3)
    {
        if (g_U14838[uParam0]._fU80._fU0 == 0)
        {
            StrCopy( ref cVar9, uParam4, 64 );
            ConcatString(ref cVar9, " Pass_Stats: friend mission", 64);
            sub_28513( ref cVar9 );
            return;
        }
        if (g_U14838[uParam0]._fU80._fU4 == -1)
        {
            StrCopy( ref cVar9, uParam4, 64 );
            ConcatString(ref cVar9, " Pass_Stats: friend missionID", 64);
            sub_28513( ref cVar9 );
            return;
        }
        iVar7 = g_U14838[uParam0]._fU80._fU4;
    }
    else if (bParam2)
    {
        if (NOT g_U14838[uParam0]._fU160._fU80)
        {
            StrCopy( ref cVar9, uParam4, 64 );
            ConcatString(ref cVar9, " Pass_Stats: proc mission", 64);
            sub_28513( ref cVar9 );
            return;
        }
        if (g_U14838[uParam0]._fU160._fU76 == -1)
        {
            StrCopy( ref cVar9, uParam4, 64 );
            ConcatString(ref cVar9, " Pass_Stats: proc missionID", 64);
            sub_28513( ref cVar9 );
            return;
        }
        iVar7 = g_U14838[uParam0]._fU160._fU76;
    }
    else if (g_U14838[uParam0]._fU0._fU0 == 0)
    {
        StrCopy( ref cVar9, uParam4, 64 );
        ConcatString(ref cVar9, " Pass_Stats: mission", 64);
        sub_28513( ref cVar9 );
        return;
    }
    if (g_U14838[uParam0]._fU0._fU4 == -1)
    {
        StrCopy( ref cVar9, uParam4, 64 );
        ConcatString(ref cVar9, " Pass_Stats: missionID", 64);
        sub_28513( ref cVar9 );
        return;
    }
    iVar7 = g_U14838[uParam0]._fU0._fU4;
    iVar8 = sub_29090( uParam0, iVar7 );;;
    iVar25 = 0;
    if (bParam1)
    {
        g_U12306[uParam0]._fU24 = iVar7;
    }
    if (bParam2)
    {
        iVar25 = g_U14838[uParam0]._fU160._fU84;
    }
    if (bParam3)
    {
        I = 0;
        for ( I = 0; I < 5; I++ )
        {
            g_U12306[uParam0]._fU144[I]._fU8++;
            if ((g_U12306[uParam0]._fU144[I]._fU8 >= g_U12306[uParam0]._fU144[I]._fU4) AND (NOT g_U12306[uParam0]._fU144[I]._fU12))
            {
                iVar27 = 0;
                GET_GAME_TIMER( ref iVar27 );
                g_U12306[uParam0]._fU144[I]._fU16 = iVar27 + 90000;
            }
        }
    }
    if (NOT (sub_29538( uParam0, iVar7, iVar25, bParam1, bParam2, bParam3 )))
    {
        return;
    }
    if (bParam2)
    {
        g_U14838[uParam0]._fU160._fU84++;
    }
    SET_PLAYER_MOOD_NORMAL( sub_1764() );
    sub_3000();
    bVar28 = true;
    uVar29 = sub_29090( uParam0, iVar7 );
    uVar30 = sub_3659( uParam0 );
    if (bParam1)
    {
        iVar31 = g_U14838[uParam0]._fU0._fU56;
        if ((iVar31 == 6) || (iVar31 == 5))
        {
            bVar28 = false;
        }
        if (NOT g_U0)
        {
            bVar32 = true;
            if (IS_BIT_SET( g_U20913[uVar29]._fU108, 2 ))
            {
                REGISTER_MISSION_PASSED( ref g_U10982 );
                sub_33476( 9, ref g_U14838[uParam0]._fU0._fU24 );
                if ((g_U12303) AND (NOT bVar28))
                {
                    bVar32 = false;
                }
                if (bVar32)
                {
                    sub_33910();
                    g_U10974._fU8 = 1;
                    g_U10974._fU20 = sub_33995( uParam0, iVar7 );
                }
            }
            if (bVar28)
            {
                sub_34074( uParam0 );
                sub_34247( 0 );
                sub_3914( uVar30, 0 );
                g_U11093 = 1;
                g_U39101 = 1;
                g_U11108 = 0;
            }
            g_U12306[uParam0]._fU12 = 1;
        }
        if (bVar28)
        {
            sub_34436();
        }
    }
    if (bParam2)
    {
        sub_33910();
        sub_34535();
        sub_34247( 0 );
        g_U11094 = 1;
        g_U11108 = 0;
    }
    if (bParam3)
    {
        sub_33910();
        sub_34587();
        sub_34247( 0 );
        sub_3914( uVar30, 0 );
    }
    sub_34638();
    return;
}

void sub_28513(unknown uParam0)
{
    PRINTSTRING( "FLOW WARNING: " );
    PRINTSTRING( uParam0 );
    PRINTNL();
    SCRIPT_ASSERT( "FLOW WARNING: Press IGNORE button and look at console window for details" );
    return;
}

int sub_29090(int iParam0, int iParam1)
{
    unknown uVar4;
    int iVar5;
    int Result;

    if ((iParam0 >= 11) || (iParam0 < 0))
    {
        sub_1984( "Main_Missions: Find_Trigger(): Illegal Strand ID" );
    }
    uVar4 = g_U26515[iParam0]._fU0;
    iVar5 = g_U26515[iParam0]._fU4;
    for ( Result = uVar4; Result <= iVar5; Result++ )
    {
        if (g_U20913[Result]._fU4 == iParam1)
        {
            return Result;
        }
    }
    return -1;
}

int sub_29538(unknown uParam0, unknown uParam1, unknown uParam2, boolean bParam3, unknown uParam4, unknown uParam5)
{
    boolean bVar8;
    unknown uVar9;

    bVar8 = false;
    switch (uParam0)
    {
        case 0:
        bVar8 = sub_29634( uParam1 );
        break;
        case 1:
        bVar8 = sub_29943( uParam1 );
        break;
        case 2:
        bVar8 = sub_30546( uParam1 );
        break;
        case 3:
        bVar8 = sub_30783( uParam1 );
        break;
        case 4:
        bVar8 = sub_30949( uParam1 );
        break;
        case 5:
        bVar8 = sub_31148( uParam1 );
        break;
        case 6:
        bVar8 = sub_31343( uParam1 );
        break;
        case 7:
        bVar8 = sub_31548( uParam1 );
        break;
        case 8:
        bVar8 = sub_31753( uParam1 );
        break;
        default:
        PRINTSTRING( "Strand ID: " );
        PRINTINT( uParam0 );
        PRINTNL();
        sub_2369( "Flow_Pass_Stats: Flow_Pass_Strand_Mission(): Unknown strand ID." );
    }
    if (NOT bVar8)
    {
        return 0;
    }
    uVar9 = sub_29090( uParam0, uParam1 );
    if (bParam3)
    {
        sub_32039( uVar9, uParam0 );
    }
    return 1;
}

int sub_29634(unknown uParam0)
{
    int iVar3;
    boolean bVar4;

    iVar3 = 0;
    bVar4 = false;
    switch (uParam0)
    {
        case 1:
        sub_1837( iVar3, 750, 5, 2, 0, 0 );
        break;
        case 2:
        sub_1837( iVar3, 750, 5, 2, 0, 0 );
        break;
        case 3:
        sub_1837( iVar3, 750, 5, 2, 0, 0 );
        break;
        case 4:
        sub_1837( iVar3, 1000, 5, 2, 0, 0 );
        break;
        case 5:
        sub_1837( iVar3, 0, 5, 2, 0, 0 );
        break;
        case 6:
        sub_1837( iVar3, 0, 5, 2, 0, 0 );
        break;
        case 0:
        case 10: break;
        default:
        sub_29850( "Contact 1", 1 );
        sub_1837( iVar3, 10, 0, 0, 0, 0 );
        return 0;
    }
    if (bVar4)
    {
        sub_29850( "Contact 1", 0 );
        sub_1837( iVar3, 10, 0, 0, 0, 0 );
        return 0;
    }
    return 1;
}

void sub_29850(unknown uParam0, unknown uParam1)
{
    return;
}

int sub_29943(unknown uParam0)
{
    int iVar3;
    boolean bVar4;

    iVar3 = 1;
    bVar4 = false;
    switch (uParam0)
    {
        case 0:
        sub_1837( iVar3, 1000, 5, 2, 0, 0 );
        break;
        case 1:
        sub_1837( iVar3, 2000, 5, 2, 0, 0 );
        break;
        case 3:
        sub_1837( iVar3, 2000, 5, 2, 0, 0 );
        break;
        case 2:
        sub_1837( iVar3, 2000, 5, 2, 0, 0 );
        break;
        case 4:
        sub_1837( iVar3, 2000, 5, 2, 0, 0 );
        break;
        case 5:
        case 6:
        case 7:
        case 8:
        case 9:
        case 10:
        case 11:
        case 12:
        sub_1837( iVar3, 0, sub_30169(), sub_30305(), 0, 0 );
        break;
        default:
        sub_29850( "Contact 2", 1 );
        sub_1837( iVar3, 10, 0, 0, 0, 0 );
        return 0;
    }
    if (bVar4)
    {
        sub_29850( "Contact 2", 0 );
        sub_1837( iVar3, 10, 0, 0, 0, 0 );
        return 0;
    }
    return 1;
}

int sub_30169()
{
    switch (l_U352[0])
    {
        case 0: return 14;
        case 1: return 8;
        case 2: return 6;
        case 3: return 1;
        case 4: return 0;
    }
    sub_2369( "Get_TRUST(): Unknown Friend Pass ID" );
    return 0;
}

int sub_30305()
{
    switch (l_U352[1])
    {
        case 0: return 10;
        case 1: return 6;
        case 2: return 3;
        case 3: return 1;
        case 4: return 0;
    }
    sub_2369( "Get_LIKE(): Unknown Friend Pass ID" );
    return 0;
}

int sub_30546(unknown uParam0)
{
    int iVar3;
    boolean bVar4;

    iVar3 = 2;
    bVar4 = false;
    switch (uParam0)
    {
        case 0:
        sub_1837( iVar3, 0, 5, 2, 0, 0 );
        break;
        case 1:
        sub_1837( iVar3, 5000, 5, 2, 0, 0 );
        break;
        case 3:
        sub_1837( iVar3, 7000, 5, 2, 0, 0 );
        break;
        case 2:
        sub_1837( iVar3, 1000, 3, 1, 0, 0 );
        break;
        case 4: break;
        default:
        sub_29850( "Contact 3", 1 );
        sub_1837( iVar3, 10, 0, 0, 0, 0 );
        return 0;
    }
    if (bVar4)
    {
        sub_29850( "Contact 3", 0 );
        sub_1837( iVar3, 10, 0, 0, 0, 0 );
        return 0;
    }
    return 1;
}

int sub_30783(unknown uParam0)
{
    int iVar3;
    boolean bVar4;

    iVar3 = 3;
    bVar4 = false;
    switch (uParam0)
    {
        case 0:
        sub_1837( iVar3, 0, 5, 2, 0, 0 );
        break;
        case 1:
        sub_1837( iVar3, 0, 5, 2, 0, 0 );
        break;
        default:
        sub_29850( "Friend 4", 1 );
        sub_1837( iVar3, 10, 0, 0, 0, 0 );
        return 0;
    }
    if (bVar4)
    {
        sub_29850( "Friend 4", 0 );
        sub_1837( iVar3, 10, 0, 0, 0, 0 );
        return 0;
    }
    return 1;
}

int sub_30949(unknown uParam0)
{
    int iVar3;
    boolean bVar4;

    iVar3 = 4;
    bVar4 = false;
    switch (uParam0)
    {
        case 0:
        sub_1837( iVar3, 1000, 5, 2, 0, 0 );
        break;
        case 1:
        sub_1837( iVar3, 2000, 5, 2, 0, 0 );
        break;
        case 2:
        sub_1837( iVar3, 3000, 5, 2, 0, 0 );
        break;
        default:
        sub_29850( "Contact 5", 1 );
        sub_1837( iVar3, 10, 0, 0, 0, 0 );
        return 0;
    }
    if (bVar4)
    {
        sub_29850( "Contact 5", 0 );
        sub_1837( iVar3, 10, 0, 0, 0, 0 );
        return 0;
    }
    return 1;
}

int sub_31148(unknown uParam0)
{
    int iVar3;
    boolean bVar4;

    iVar3 = 5;
    bVar4 = false;
    switch (uParam0)
    {
        case 0:
        sub_1837( iVar3, 0, 5, 2, 0, 0 );
        break;
        case 1:
        sub_1837( iVar3, 10000, 5, 2, 0, 0 );
        break;
        case 2:
        sub_1837( iVar3, 0, 5, 2, 0, 0 );
        break;
        default:
        sub_29850( "Contact 6", 1 );
        sub_1837( iVar3, 10, 0, 0, 0, 0 );
        return 0;
    }
    if (bVar4)
    {
        sub_29850( "Contact 6", 0 );
        sub_1837( iVar3, 10, 0, 0, 0, 0 );
        return 0;
    }
    return 1;
}

int sub_31343(unknown uParam0)
{
    int iVar3;
    boolean bVar4;

    iVar3 = 6;
    bVar4 = false;
    switch (uParam0)
    {
        case 0:
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
        case 7:
        sub_1837( iVar3, 0, sub_30169(), sub_30305(), 0, 0 );
        break;
        default:
        sub_29850( "Friend 7", 1 );
        sub_1837( iVar3, 10, 0, 0, 0, 0 );
        return 0;
    }
    if (bVar4)
    {
        sub_29850( "Friend 7", 0 );
        sub_1837( iVar3, 10, 0, 0, 0, 0 );
        return 0;
    }
    return 1;
}

int sub_31548(unknown uParam0)
{
    int iVar3;
    boolean bVar4;

    iVar3 = 7;
    bVar4 = false;
    switch (uParam0)
    {
        case 0:
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
        case 7:
        sub_1837( iVar3, 0, sub_30169(), sub_30305(), 0, 0 );
        break;
        default:
        sub_29850( "Friend 8", 1 );
        sub_1837( iVar3, 10, 0, 0, 0, 0 );
        return 0;
    }
    if (bVar4)
    {
        sub_29850( "Friend 8", 0 );
        sub_1837( iVar3, 10, 0, 0, 0, 0 );
        return 0;
    }
    return 1;
}

int sub_31753(unknown uParam0)
{
    int iVar3;
    boolean bVar4;

    iVar3 = 8;
    bVar4 = false;
    switch (uParam0)
    {
        case 0:
        sub_1837( iVar3, 0, 3, 1, 0, 0 );
        break;
        default:
        sub_29850( "Contact 9", 1 );
        sub_1837( iVar3, 10, 0, 0, 0, 0 );
        return 0;
    }
    if (bVar4)
    {
        sub_29850( "Contact 9", 0 );
        sub_1837( iVar3, 10, 0, 0, 0, 0 );
        return 0;
    }
    return 1;
}

void sub_32039(int iParam0, int iParam1)
{
    if (g_U0)
    {
        return;
    }
    if (iParam0 == -1)
    {
        return;
    }
    if (iParam1 == -1)
    {
        return;
    }
    if (g_U10993)
    {
        return;
    }
    if (sub_32100( iParam0, iParam1 ))
    {
        INCREMENT_INT_STAT_NO_MESSAGE( 253, 1 );
        sub_32818( iParam1 );
    }
    return;
}

int sub_32100(int iParam0, int iParam1)
{
    int iVar4;
    boolean bVar5;
    int iVar6;

    if (g_U0)
    {
        return 0;
    }
    if (iParam0 == -1)
    {
        return 0;
    }
    if (iParam1 == -1)
    {
        return 0;
    }
    iVar4 = g_U14838[iParam1]._fU0._fU56;
    bVar5 = iVar4 == 6;
    if (bVar5)
    {
        return 0;
    }
    iVar6 = 0;
    if (NOT (IS_BIT_SET( g_U20913[iParam0]._fU108, 3 )))
    {
        iVar6 = g_U20913[iParam0]._fU104;
        if (iVar6 > 0)
        {
            sub_32240( 0, iVar6 );
            g_U14815[iParam1]._fU4 += iVar6;
        }
        SET_BIT( ref g_U20913[iParam0]._fU108, 3 );
        return 1;
    }
    return 0;
}

void sub_32240(unknown uParam0, int iParam1)
{
    g_U26712[uParam0]._fU4 += iParam1;
    if (g_U26712[uParam0]._fU4 > g_U26712[uParam0]._fU0)
    {
        SCRIPT_ASSERT( "Flow_Achievements_Game_Progress_Made: Current Category is over target value" );
        g_U26712[uParam0]._fU4 = g_U26712[uParam0]._fU0;
    }
    sub_32410( 0 );
    return;
}

void sub_32410(boolean bParam0)
{
    float fVar3;
    float fVar4;
    float fVar5;
    float fVar6;
    boolean bVar7;
    int I;

    fVar3 = 0.00000000;
    fVar4 = 0.00000000;
    fVar5 = 0.00000000;
    fVar6 = 0.00000000;
    bVar7 = true;
    I = 0;
    for ( I = 0; I < 8; I++ )
    {
        if (g_U26712[I]._fU4 == g_U26712[I]._fU0)
        {
            fVar4 = g_U26712[I]._fU8;
        }
        else
        {
            bVar7 = false;
            fVar5 = TO_FLOAT( g_U26712[I]._fU0 );
            fVar6 = TO_FLOAT( g_U26712[I]._fU4 );
            fVar4 = (fVar6 / fVar5) * g_U26712[I]._fU8;
        }
        fVar3 += fVar4;
    }
    if (fVar3 > 100.00000000)
    {
        fVar3 = 99.99000000;
    }
    if (bVar7)
    {
        fVar3 = 100.00000000;
    }
    SET_FLOAT_STAT( 133, fVar3 );
    if (bVar7)
    {
        sub_32655();
    }
    if ((NOT (# -NULL-0xc27c84())) AND ((NOT bParam0) AND (bVar7)))
    {
        PRINT_HELP( "GAME100" );
    }
    return;
}

void sub_32655()
{
    ENABLE_MAX_AMMO_CAP( 0 );
    g_U15728[5] = 1;
    return;
}

void sub_32818(int iParam0)
{
    float fVar3;
    float fVar4;
    float fVar5;

    if (g_U0)
    {
        return;
    }
    if (iParam0 == -1)
    {
        return;
    }
    if (g_U14815[iParam0]._fU0 == 0)
    {
        return;
    }
    fVar3 = 0.00000000;
    fVar4 = 0.00000000;
    fVar5 = 0.00000000;
    if (g_U14815[iParam0]._fU4 == g_U14815[iParam0]._fU0)
    {
        fVar3 = 100.00000000;
    }
    else
    {
        fVar4 = TO_FLOAT( g_U14815[iParam0]._fU0 );
        fVar5 = TO_FLOAT( g_U14815[iParam0]._fU4 );
        fVar3 = fVar5 / fVar4;
        fVar3 *= 100.00000000;
    }
    switch (iParam0)
    {
        case 0:
        sub_33049( 121 );
        SET_FLOAT_STAT( 121, fVar3 );
        break;
        case 1:
        sub_33049( 122 );
        SET_FLOAT_STAT( 122, fVar3 );
        break;
        case 2:
        sub_33049( 125 );
        SET_FLOAT_STAT( 125, fVar3 );
        break;
        case 3:
        sub_33049( 126 );
        SET_FLOAT_STAT( 126, fVar3 );
        break;
        case 4:
        sub_33049( 127 );
        SET_FLOAT_STAT( 127, fVar3 );
        break;
        case 5:
        sub_33049( 128 );
        SET_FLOAT_STAT( 128, fVar3 );
        break;
        default: return;
    }
    return;
}

void sub_33049(unknown uParam0)
{
    if ((GET_STAT_FRONTEND_VISIBILITY( uParam0 )) == 0)
    {
        SET_STAT_FRONTEND_VISIBILITY( uParam0, 1 );
    }
    return;
}

void sub_33476(unknown uParam0, unknown uParam1)
{
    sub_33495( uParam0, 0, 0.00000000, uParam1 );
    return;
}

void sub_33495(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;

    switch (uParam0)
    {
        case 0:
        PLAYSTATS_INT( "SPRUNK_BOUGHT", uParam1 );
        break;
        case 1:
        PLAYSTATS_INT( "HOTDOG_BOUGHT", uParam1 );
        break;
        case 2:
        PLAYSTATS_INT( "NUTS_BOUGHT", uParam1 );
        break;
        case 3:
        PLAYSTATS_INT( "BURGERS_BOUGHT", uParam1 );
        break;
        case 7:
        PLAYSTATS_INT( "DONATE_BEGGAR", uParam1 );
        break;
        case 8:
        PLAYSTATS_INT( "DONATE_BUSKER", uParam1 );
        break;
        case 4:
        PLAYSTATS_INT( "BSHOT_BOUGHT", uParam1 );
        break;
        case 5:
        PLAYSTATS_INT( "CBELL_BOUGHT", uParam1 );
        break;
        case 6:
        PLAYSTATS_INT( "CAFE_BOUGHT", uParam1 );
        break;
        case 9: break;
    }
    return;
}

void sub_33910()
{
    g_U10974._fU0 = 1;
    g_U10974._fU4 = 0;
    g_U10974._fU8 = 0;
    g_U10974._fU12 = 0;
    g_U10974._fU16 = 0;
    g_U10974._fU20 = 0;
    g_U10974._fU28 = 6;
    return;
}

int sub_33995(int iParam0, int iParam1)
{
    if (iParam0 == 2)
    {
        if (iParam1 == 3)
        {
            return 1;
        }
    }
    if (iParam0 == 0)
    {
        if (iParam1 == 0)
        {
            return 1;
        }
    }
    return 0;
}

void sub_34074(unknown uParam0)
{
    sub_34083();
    g_U12306[uParam0]._fU116 = 0;
    return;
}

void sub_34083()
{
    int J;
    int I;

    J = 0;
    for ( J = 0; J < 11; J++ )
    {
        I = 0;
        for ( I = 0; I < 5; I++ )
        {
            if (g_U12306[J]._fU144[I]._fU36)
            {
                g_U12306[J]._fU28 = 1;
            }
            g_U12306[J]._fU144[I]._fU36 = 0;
        }
    }
    return;
}

void sub_34247(unknown uParam0)
{
    if (g_U10684)
    {
        g_U10684 = 0;
        return;
    }
    SET_BIT( ref g_U10681._fU0, 1 );
    sub_34298( ref g_U10681._fU0, 2, uParam0 );
    CLEAR_BIT( ref g_U10681._fU0, 3 );
    g_U10681._fU4 = 0;
    g_U10681._fU8 = 0;
    return;
}

void sub_34298(unknown uParam0, unknown uParam1, boolean bParam2)
{
    if (bParam2)
    {
        SET_BIT( uParam0, uParam1 );
        return;
    }
    CLEAR_BIT( uParam0, uParam1 );
    return;
}

void sub_34436()
{
    sub_34445();
    return;
}

void sub_34445()
{
    if (g_U0)
    {
        return;
    }
    if (COMPARE_STRING( ref g_U10987, "" ))
    {
        return;
    }
    PLAYSTATS_MISSION_PASSED( ref g_U10987 );
    StrCopy( ref g_U10987, "", 16 );
    return;
}

void sub_34535()
{
    sub_34445();
    return;
}

void sub_34587()
{
    sub_34445();
    StrCopy( ref g_U10987, "FPASS", 16 );
    return;
}

void sub_34638()
{
    int iVar2;
    int iVar3;

    iVar2 = 0;
    GET_GAME_TIMER( ref iVar2 );
    iVar3 = iVar2 + sub_34660();
    if (iVar3 > g_U38472._fU4)
    {
        g_U38472._fU4 = iVar3;
        g_U38472._fU8 = iVar2;
    }
    return;
}

int sub_34660()
{
    if (g_U15728[0])
    {
        return 27000;
    }
    return 15000;
}

void sub_34813(unknown uParam0, unknown uParam1, unknown uParam2)
{
    g_U15862[uParam0]._fU228._fU12[uParam1] = 1;
    g_U15862[uParam0]._fU228._fU0 = 1;
    return sub_34866( uParam0, uParam2 );
}

int sub_34866(unknown uParam0, int iParam1)
{
    int I;

    for ( I = 0; I <= (iParam1 - 1); I++ )
    {
        if (g_U15862[uParam0]._fU228._fU12[I] != 1)
        {
            return 0;
        }
    }
    return 1;
}

