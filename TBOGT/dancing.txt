void main()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;

    l_U5 = 1;
    l_U38 = 1;
    l_U55 = 1;
    l_U56 = 1;
    l_U63 = 1;
    l_U65 = 1;
    l_U69 = 0;
    l_U70 = 1;
    l_U82 = 1;
    l_U83 = 1;
    l_U84 = 1;
    l_U93 = 1;
    l_U94 = 1;
    l_U95 = 0;
    l_U96 = 1;
    l_U99 = 0;
    l_U100 = 0;
    l_U101 = 0;
    l_U103 = 1;
    l_U109 = 0;
    l_U111 = 0;
    l_U112 = 0;
    l_U121 = 4;
    l_U122 = 87;
    l_U123 = 131;
    l_U124 = 133;
    l_U125 = 132;
    l_U126 = 130;
    l_U137 = 0.20000000;
    l_U138 = 0.90000000;
    l_U139 = 0.90000000;
    l_U140 = 0.18400000;
    l_U141 = 0.94100000;
    l_U142 = 0.01900000;
    l_U143 = 0.00800000;
    l_U144 = 0.00300000;
    l_U148 = 0.01000000;
    l_U149 = 0.05000000;
    l_U150 = 0.50000000;
    l_U156 = 0.05000000;
    l_U157 = 0.02500000;
    l_U158 = 0.40000000;
    l_U159 = -0.30000000;
    l_U168 = 0.30000000;
    l_U169 = 0.99000000;
    l_U170 = 6.00000000;
    l_U171 = 1000.00000000;
    l_U172 = 0.29200000;
    l_U173 = 0.50000000;
    l_U174 = 0.28900000;
    l_U175 = 0.86600000;
    l_U176 = 0.03600000;
    l_U177 = 1.00000000;
    l_U178 = 0.95000000;
    l_U179 = 0.50000000;
    l_U180 = 1.00000000;
    l_U182 = 0.50000000;
    l_U183 = 0.23400000;
    l_U184 = 0.74000000;
    l_U185 = 0.14800000;
    l_U186 = 0.57000000;
    l_U187 = 0.04500000;
    l_U188 = 0.63000000;
    l_U189 = 0.69500000;
    l_U190 = 0.72200000;
    l_U191 = 1.00000000;
    l_U192 = 0.00000000;
    l_U193 = 0.70000000;
    l_U194 = 0.70000000;
    l_U195 = 1.00000000;
    l_U204 = 0.25000000;
    l_U207 = 10.00000000;
    l_U208 = 8.00000000;
    l_U210 = 0.90000000;
    l_U211 = 1.00000000;
    l_U224 = 2.00000000;
    l_U225 = 4.00000000;
    l_U228 = 4.00000000;
    l_U231 = -0.50000000;
    l_U232 = 0.20000000;
    l_U233 = 2.00000000;
    l_U234 = 0.00000000;
    l_U235 = 0.10800000;
    l_U236 = 0.00000000;
    l_U237 = 0.00000000;
    l_U242 = 1.01000000;
    l_U246 = 270.00000000;
    l_U247 = -0.07700000;
    l_U248 = -0.09100000;
    l_U249 = -0.06000000;
    l_U250 = 0.23000000;
    l_U251 = 0.85000000;
    l_U252 = 0.10000000;
    l_U272 = -1;
    l_U273 = 16;
    l_U274 = 255;
    l_U275 = 113.00000000;
    l_U283 = 100;
    l_U291 = 100;
    l_U298 = 150;
    l_U314 = -1;
    l_U315 = -1;
    l_U316 = -1;
    l_U317 = -1;
    l_U318 = -1;
    l_U319 = -1;
    l_U328 = -1;
    l_U336 = 250;
    l_U343 = 1;
    l_U344 = 118;
    l_U345 = 1;
    l_U346 = 118;
    l_U347 = 1;
    l_U348 = 118;
    l_U351 = 4;
    l_U352 = 7;
    l_U355 = 1;
    l_U356 = 255;
    l_U361 = 12;
    l_U369 = 0;
    l_U370 = 0;
    l_U371 = -1;
    l_U389 = 1000;
    l_U390 = 0;
    l_U395 = 0.21200000;
    l_U396 = 0.20000000;
    l_U397 = 0;
    l_U398 = 0;
    l_U399 = 128;
    l_U400 = 128;
    l_U401 = 255;
    l_U402 = 0;
    l_U411 = 0;
    l_U412 = 0;
    l_U426 = 0;
    l_U427 = 3000;
    l_U465 = {-430.74400000, 352.31900000, 10.73800000};
    l_U472 = -1;
    l_U486 = 0;
    l_U588 = 0;
    l_U589 = 0;
    l_U590 = "missdanceoff";
    l_U594 = "alpha_idle";
    l_U595 = "alpha_stage_return";
    l_U596 = "frustration_loop";
    l_U597 = "challenge_2";
    l_U598 = "challenge_3";
    l_U599 = "luis_arm_cross";
    l_U600 = "luis_dance_1";
    l_U601 = "luis_dance_2";
    l_U602 = "luis_dance_3";
    l_U603 = "luis_fail_react";
    l_U604 = "luis_stage_return";
    l_U605 = "female_stage_return";
    l_U606 = "female_idle";
    l_U607 = 0.00000000;
    l_U608 = 0;
    l_U659 = 0;
    l_U660 = 0;
    l_U661 = 0.03000000;
    l_U662 = 0;
    if (IS_PLAYER_PLAYING( sub_1530() ))
    {
        SET_PLAYER_CONTROL( sub_1530(), 0 );
    }
    PRINTSTRING( "dancing.sc - started" );
    PRINTNL();
    if (HAS_DEATHARREST_EXECUTED())
    {
        sub_1635();
    }
    if (g_U30190 == 2)
    {
        g_U30204++;
        if (g_U30204 >= 3)
        {
            l_U101 = 1;
            g_U30204 = 0;
        }
    }
    BEGIN_CAM_COMMANDS( ref l_U258 );
    LOAD_ADDITIONAL_TEXT( "DANCING", 3 );
    l_U1 = 1;
    l_U151 = 1.00000000;
    g_U30196 = 0;
    GET_GAME_TIMER( ref l_U279 );
    SET_DEBUG_TEXT_VISIBLE( 0 );
    if (# -NULL-0xc27c84())
    {
        l_U439 = LOAD_TXD( "e2:/xbox360/textures/dancing" );
    }
    else
    {
        l_U439 = LOAD_TXD( "e2:/pc/textures/dancing" );
    }
    l_U440 = GET_TEXTURE( l_U439, "radarDanceRing_vr2" );
    l_U441 = GET_TEXTURE( l_U439, "radarDanceRingGlow" );
    l_U444 = GET_TEXTURE( l_U439, "radarSpeakerCone" );
    l_U445 = GET_TEXTURE( l_U439, "radarSpeakerConeCentre" );
    l_U442 = GET_TEXTURE( l_U439, "RingPart01" );
    l_U443 = GET_TEXTURE( l_U439, "ThickRingPart" );
    l_U446[0] = GET_TEXTURE( l_U439, "e2_dancenumber_1" );
    l_U446[1] = GET_TEXTURE( l_U439, "e2_dancenumber_2" );
    l_U446[2] = GET_TEXTURE( l_U439, "e2_dancenumber_3" );
    l_U446[3] = GET_TEXTURE( l_U439, "e2_dancenumber_4" );
    l_U446[4] = GET_TEXTURE( l_U439, "e2_dancenumber_5" );
    l_U446[5] = GET_TEXTURE( l_U439, "e2_dancenumber_6" );
    l_U446[6] = GET_TEXTURE( l_U439, "e2_dancenumber_7" );
    l_U446[7] = GET_TEXTURE( l_U439, "e2_dancenumber_8" );
    l_U446[8] = GET_TEXTURE( l_U439, "e2_dancenumber_9" );
    l_U446[9] = GET_TEXTURE( l_U439, "e2_dancenumber_10" );
    l_U446[10] = GET_TEXTURE( l_U439, "e2_dancenumber_11" );
    l_U446[11] = GET_TEXTURE( l_U439, "e2_dancenumber_12" );
    l_U459 = GET_TEXTURE( l_U439, "radarDanceRingStar1" );
    l_U460 = GET_TEXTURE( l_U439, "LT_butt" );
    l_U461 = GET_TEXTURE( l_U439, "RT_butt" );
    l_U359 = g_U30190;
    l_U360 = l_U359;
    switch (l_U360)
    {
        case 0:
        REQUEST_ANIMS( "missdance_bama_solo_" );
        REQUEST_ANIMS( "missdance_bama_pair_" );
        while ((NOT (HAVE_ANIMS_LOADED( "missdance_bama_pair_" ))) || (NOT (HAVE_ANIMS_LOADED( "missdance_bama_solo_" ))))
        {
            WAIT( 0 );
        }
        break;
        case 1:
        REQUEST_ANIMS( "missdance_m9_solo_" );
        REQUEST_ANIMS( "missdance_m9_pair_" );
        while ((NOT (HAVE_ANIMS_LOADED( "missdance_m9_pair_" ))) || (NOT (HAVE_ANIMS_LOADED( "missdance_m9_solo_" ))))
        {
            WAIT( 0 );
        }
        break;
        case 2:
        if (NOT l_U101)
        {
            REQUEST_ANIMS( "missdance_herc_solo_" );
            REQUEST_ANIMS( "missdance_herc_pair_" );
            while ((NOT (HAVE_ANIMS_LOADED( "missdance_herc_pair_" ))) || (NOT (HAVE_ANIMS_LOADED( "missdance_herc_solo_" ))))
            {
                WAIT( 0 );
            }
        }
        else
        {
            REQUEST_ANIMS( "missdance_herc_solo_" );
            REQUEST_ANIMS( "missdance_herc_pair_" );
            REQUEST_ANIMS( "missdanceoff" );
            while ((NOT (HAVE_ANIMS_LOADED( "missdanceoff" ))) || ((NOT (HAVE_ANIMS_LOADED( "missdance_herc_pair_" ))) || (NOT (HAVE_ANIMS_LOADED( "missdance_herc_solo_" )))))
            {
                WAIT( 0 );
            }
        }
        break;
    }
    l_U239 = 0.06870000;
    l_U240 = 0.23650000;
    l_U245 = 5.75000000;
    l_U241 = -0.50000000;
    l_U473[0]._fU0 = 0.00000000;
    l_U473[0]._fU4 = 0.00000000;
    l_U473[0]._fU8 = 0.00000000;
    l_U473[0]._fU12 = 0.00000000;
    l_U473[0]._fU16 = 1.00000000;
    l_U473[0]._fU20 = 1.00000000;
    l_U473[0]._fU24 = 0.00000000;
    l_U473[0]._fU28 = 360.00000000;
    l_U473[0]._fU32 = 0.00000000;
    l_U473[0]._fU36 = 1.00000000;
    l_U473[0]._fU40 = 0.00000000;
    l_U473[0]._fU44 = 1.00000000;
    g_U30207 = g_U30206;
    if (g_U30190 == 0)
    {
        if (IS_PLAYER_PLAYING( sub_1530() ))
        {
            GET_CHAR_COORDINATES( sub_1661(), ref uVar2._fU0, ref uVar2._fU4, ref uVar2._fU8 );
            sub_5921( uVar2, 1.00000000, g_U30190 );
        }
    }
    sub_2585( 0 );
    if ((g_U30190 == 1) || (g_U30190 == 0))
    {
        l_U158 = 0.49000000;
    }
    while (true)
    {
        l_U102 = 0;
        if (IS_KEYBOARD_KEY_JUST_PRESSED( 2 ))
        {
            l_U292 = 0;
        }
        if (IS_KEYBOARD_KEY_JUST_PRESSED( 3 ))
        {
            l_U292 = 1;
        }
        if (IS_KEYBOARD_KEY_JUST_PRESSED( 4 ))
        {
            l_U292 = 2;
        }
        l_U296 = GET_STREAM_PLAYTIME();
        if (IS_PLAYER_PLAYING( sub_1530() ))
        {
            if (NOT (l_U254 == 10))
            {
                sub_6361();
            }
            sub_41233();
        }
        else
        {
            sub_1635();
        }
        if (l_U63)
        {
            HIDE_HUD_AND_RADAR_THIS_FRAME();
        }
        if (NOT (l_U360 == l_U359))
        {
            switch (l_U359)
            {
                case 0:
                REMOVE_ANIMS( "missdance_bama_solo_" );
                REMOVE_ANIMS( "missdance_bama_pair_" );
                break;
                case 1:
                REMOVE_ANIMS( "missdance_bama_solo_" );
                REMOVE_ANIMS( "missdance_bama_pair_" );
                break;
                case 2:
                REMOVE_ANIMS( "missdance_herc_solo_" );
                REMOVE_ANIMS( "missdance_herc_pair_" );
                break;
            }
            switch (l_U360)
            {
                case 0:
                REQUEST_ANIMS( "missdance_bama_solo_" );
                REQUEST_ANIMS( "missdance_bama_pair_" );
                while ((NOT (HAVE_ANIMS_LOADED( "missdance_bama_pair_" ))) || (NOT (HAVE_ANIMS_LOADED( "missdance_bama_solo_" ))))
                {
                    WAIT( 0 );
                }
                break;
                case 1:
                REQUEST_ANIMS( "missdance_bama_solo_" );
                REQUEST_ANIMS( "missdance_bama_pair_" );
                while ((NOT (HAVE_ANIMS_LOADED( "missdance_bama_pair_" ))) || (NOT (HAVE_ANIMS_LOADED( "missdance_bama_solo_" ))))
                {
                    WAIT( 0 );
                }
                break;
                case 2:
                REQUEST_ANIMS( "missdance_herc_solo_" );
                REQUEST_ANIMS( "missdance_herc_pair_" );
                while ((NOT (HAVE_ANIMS_LOADED( "missdance_herc_pair_" ))) || (NOT (HAVE_ANIMS_LOADED( "missdance_herc_solo_" ))))
                {
                    WAIT( 0 );
                }
                break;
            }
            l_U359 = l_U360;
        }
        WAIT( 0 );
    }
    return;
}

void sub_1530()
{
    return CONVERT_INT_TO_PLAYERINDEX( GET_PLAYER_ID() );
}

void sub_1635()
{
    unknown uVar2;

    if (IS_PLAYER_PLAYING( sub_1530() ))
    {
        CLEAR_CHAR_TASKS_IMMEDIATELY( sub_1661() );
        if ((g_U30190 == 2) || (NOT g_U30106))
        {
            SET_PLAYER_CONTROL( sub_1530(), 1 );
        }
        if ((g_U30190 == 1) || ((g_U30190 == 2) || (NOT g_U30106)))
        {
            SET_PLAYER_CONTROL( sub_1530(), 1 );
        }
        if (l_U96)
        {
            SET_CHAR_COLLISION( sub_1661(), 1 );
            FREEZE_CHAR_POSITION( sub_1661(), 0 );
        }
    }
    if (g_U30106)
    {
        INCREMENT_INT_STAT( 206, 1 );
    }
    if ((NOT g_U30107) AND (NOT g_U30106))
    {
        if (IS_PLAYER_PLAYING( sub_1530() ))
        {
            SAY_AMBIENT_SPEECH( sub_1661(), "DANCING_GAME_QUIT", 1, 1, 2 );
        }
    }
    if (l_U80)
    {
        if (DOES_CHAR_EXIST( g_U30207 ))
        {
            MARK_CHAR_AS_NO_LONGER_NEEDED( ref g_U30207 );
        }
    }
    CLEAR_HELP();
    l_U1 = 1;
    g_U30108 = 0;
    if (NOT (IS_CHAR_INJURED( g_U30207 )))
    {
        CLEAR_CHAR_TASKS_IMMEDIATELY( g_U30207 );
        if (l_U96)
        {
            SET_CHAR_COLLISION( g_U30207, 1 );
            FREEZE_CHAR_POSITION( g_U30207, 0 );
        }
        sub_2029();
    }
    g_U30207 = nil;
    sub_2239();
    if (l_U60)
    {
        ;
    }
    sub_2524( 0 );
    sub_2585( 1 );
    DELETE_WIDGET( l_U468 );
    DELETE_WIDGET( l_U469 );
    if (DOES_WIDGET_GROUP_EXIST( l_U471 ))
    {
        DELETE_WIDGET_GROUP( l_U471 );
    }
    sub_2772();
    if ((g_U30168[1]) AND ((g_U30168[0]) AND (g_U30168[2])))
    {
        sub_3132( 5 );
    }
    sub_3737( 0 );
    WAIT( 0 );
    RELEASE_TEXTURE( l_U440 );
    RELEASE_TEXTURE( l_U441 );
    RELEASE_TEXTURE( l_U442 );
    RELEASE_TEXTURE( l_U443 );
    RELEASE_TEXTURE( l_U444 );
    RELEASE_TEXTURE( l_U445 );
    RELEASE_TEXTURE( l_U459 );
    RELEASE_TEXTURE( l_U460 );
    RELEASE_TEXTURE( l_U461 );
    REMOVE_TXD( l_U439 );
    TERMINATE_THIS_SCRIPT();
    return;
}

void sub_1661()
{
    unknown Result;

    GET_PLAYER_CHAR( CONVERT_INT_TO_PLAYERINDEX( GET_PLAYER_ID() ), ref Result );
    return Result;
}

void sub_2029()
{
    switch (g_U30190)
    {
        case 0:
        SET_CHAR_COORDINATES( g_U30207, -393.97600000, 425.97700000, 5.16940000 );
        SET_CHAR_HEADING( g_U30207, 180.00000000 );
        break;
        case 1:
        SET_CHAR_COORDINATES( g_U30207, -486.39500000, 147.74300000, 6.55090000 );
        SET_CHAR_HEADING( g_U30207, 307.80000000 );
        break;
        case 2:
        SET_CHAR_COORDINATES( g_U30207, -428.33090000, 352.75670000, 10.71170000 );
        SET_CHAR_HEADING( g_U30207, 101.80000000 );
        break;
    }
    return;
}

void sub_2239()
{
    SET_INTERP_FROM_SCRIPT_TO_GAME( 0, 0 );
    sub_2257();
    ACTIVATE_SCRIPTED_CAMS( 0, 0 );
    if (IS_PLAYER_PLAYING( sub_1530() ))
    {
        SET_CAM_BEHIND_PED( sub_1661() );
    }
    END_CAM_COMMANDS( ref l_U258 );
    return;
}

void sub_2257()
{
    int I;

    for ( I = 0; I < l_U129; I++ )
    {
        if (DOES_CAM_EXIST( l_U129[I] ))
        {
            SET_CAM_ACTIVE( l_U129[I], 0 );
            SET_CAM_PROPAGATE( l_U129[I], 0 );
            DESTROY_CAM( l_U129[I] );
        }
    }
    if (DOES_CAM_EXIST( l_U128 ))
    {
        SET_CAM_ACTIVE( l_U128, 0 );
        SET_CAM_PROPAGATE( l_U128, 0 );
        DESTROY_CAM( l_U128 );
    }
    if (DOES_CAM_EXIST( l_U127 ))
    {
        DESTROY_CAM( l_U127 );
    }
    return;
}

void sub_2524(boolean bParam0)
{
    if (bParam0)
    {
        g_U30166 = 1;
        g_U30234 = GET_ID_OF_THIS_THREAD();
    }
    else
    {
        g_U30166 = 0;
        g_U30234 = nil;
    }
    return;
}

void sub_2585(unknown uParam0)
{
    int I;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;

    if (DOES_GROUP_EXIST( sub_2594() ))
    {
        for ( I = 0; I < 7; I++ )
        {
            GET_GROUP_MEMBER( sub_2594(), I, ref uVar6 );
            if (NOT (IS_CHAR_INJURED( uVar6 )))
            {
                SET_CHAR_VISIBLE( uVar6, uParam0 );
            }
        }
    }
    return;
}

void sub_2594()
{
    unknown Result;

    GET_PLAYER_GROUP( CONVERT_INT_TO_PLAYERINDEX( GET_PLAYER_ID() ), ref Result );
    return Result;
}

void sub_2772()
{
    if (NOT (g_U30203 == -1))
    {
        if (l_U118)
        {
            if (NOT (IS_CHAR_INJURED( g_U29971[g_U30203]._fU12 )))
            {
                CLEAR_CHAR_TASKS_IMMEDIATELY( g_U29971[g_U30203]._fU12 );
                SET_CHAR_COORDINATES( g_U29971[g_U30203]._fU12, g_U29971[g_U30203]._fU16._fU0, g_U29971[g_U30203]._fU16._fU4, g_U29971[g_U30203]._fU16._fU8 );
                SET_CHAR_HEADING( g_U29971[g_U30203]._fU12, g_U29971[g_U30203]._fU28 );
                l_U118 = 0;
            }
        }
        sub_2968( g_U30203, 0 );
    }
    return;
}

void sub_2968(int iParam0, unknown uParam1)
{
    if (NOT (iParam0 == -1))
    {
        g_U30132[iParam0] = uParam1;
    }
    else
    {
        SCRIPT_ASSERT( "SET_GLOBAL_CLUBPED_SLOT_AS_SCRIPT_CONTROLLED - invalid slot number (-1)" );
    }
    return;
}

void sub_3132(unknown uParam0)
{
    int iVar3;

    if (g_U0)
    {
        return;
    }
    iVar3 = 0;
    if (NOT g_U43030[uParam0]._fU0)
    {
        iVar3 = g_U43030[uParam0]._fU8;
        if (iVar3 > 0)
        {
            sub_3201( 2, iVar3 );
            g_U43030[uParam0]._fU0 = 1;
            return;
        }
    }
    return;
}

void sub_3201(unknown uParam0, int iParam1)
{
    g_U28780[uParam0]._fU4 += iParam1;
    if (g_U28780[uParam0]._fU4 > g_U28780[uParam0]._fU0)
    {
        SCRIPT_ASSERT( "Flow_Achievements_Game_Progress_Made: Current Category is over target value" );
        g_U28780[uParam0]._fU4 = g_U28780[uParam0]._fU0;
    }
    sub_3371( 0 );
    return;
}

void sub_3371(boolean bParam0)
{
    float fVar3;
    float fVar4;
    float fVar5;
    float fVar6;
    boolean bVar7;
    int I;

    fVar3 = 0.00000000;
    fVar4 = 0.00000000;
    fVar5 = 0.00000000;
    fVar6 = 0.00000000;
    bVar7 = true;
    I = 0;
    for ( I = 0; I < 8; I++ )
    {
        if (g_U28780[I]._fU4 == g_U28780[I]._fU0)
        {
            fVar4 = g_U28780[I]._fU8;
        }
        else
        {
            bVar7 = false;
            fVar5 = TO_FLOAT( g_U28780[I]._fU0 );
            fVar6 = TO_FLOAT( g_U28780[I]._fU4 );
            fVar4 = (fVar6 / fVar5) * g_U28780[I]._fU8;
        }
        fVar3 += fVar4;
    }
    if (fVar3 > 100.00000000)
    {
        fVar3 = 99.99000000;
    }
    if (bVar7)
    {
        fVar3 = 100.00000000;
    }
    SET_FLOAT_STAT( 187, fVar3 );
    if (bVar7)
    {
        sub_3616();
    }
    if ((NOT ((# -NULL-0xc27bfa()) || (# -NULL-0xc27c84()))) AND ((NOT bParam0) AND (bVar7)))
    {
        PRINT_HELP( "GAME100" );
    }
    return;
}

void sub_3616()
{
    ENABLE_MAX_AMMO_CAP( 0 );
    g_U15811[5] = 1;
    return;
}

void sub_3737(boolean bParam0)
{
    g_U30177 = bParam0;
    if (bParam0)
    {
        g_U30248 = GET_ID_OF_THIS_THREAD();
    }
    else
    {
        g_U30248 = nil;
    }
    return;
}

void sub_5921(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    sub_5974( uParam0._fU0 - uParam3, uParam0._fU4 - uParam3, uParam0._fU8 - uParam3, uParam0._fU0 + uParam3, uParam0._fU4 + uParam3, uParam0._fU8 + uParam3, uParam4 );
    return;
}

void sub_5974(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6)
{
    g_U30158[uParam6] = 1;
    if (uParam0._fU0 < uParam3._fU0)
    {
        g_U30251._fU0 = uParam0._fU0;
        g_U30254._fU0 = uParam3._fU0;
    }
    else
    {
        g_U30251._fU0 = uParam3._fU0;
        g_U30254._fU0 = uParam0._fU0;
    }
    if (uParam0._fU4 < uParam3._fU4)
    {
        g_U30251._fU4 = uParam0._fU4;
        g_U30254._fU4 = uParam3._fU4;
    }
    else
    {
        g_U30251._fU4 = uParam3._fU4;
        g_U30254._fU4 = uParam0._fU4;
    }
    if (uParam0._fU8 < uParam3._fU8)
    {
        g_U30251._fU8 = uParam0._fU8;
        g_U30254._fU8 = uParam3._fU8;
    }
    else
    {
        g_U30251._fU8 = uParam3._fU8;
        g_U30254._fU8 = uParam0._fU8;
    }
    g_U30230[uParam6] = GET_ID_OF_THIS_THREAD();
    return;
}

void sub_6361()
{
    if (l_U99)
    {
        return;
    }
    switch (l_U256)
    {
        case 0:
        switch (l_U257)
        {
            case 0:
            ACTIVATE_SCRIPTED_CAMS( 0, 0 );
            sub_2257();
            l_U257++;
            break;
            default:
        }
        break;
        case 7:
        case 1:
        switch (l_U257)
        {
            case 0:
            ACTIVATE_SCRIPTED_CAMS( 0, 0 );
            sub_2257();
            sub_6589();
            ACTIVATE_SCRIPTED_CAMS( 1, 1 );
            l_U257++;
            break;
            case 1:
            if ((IS_KEYBOARD_KEY_JUST_PRESSED( 49 )) || (NOT (IS_SPECIFIC_CAM_INTERPOLATING( l_U128 ))))
            {
                sub_2257();
                sub_6589();
            }
            break;
        }
        break;
        case 4:
        switch (l_U257)
        {
            case 0:
            ACTIVATE_SCRIPTED_CAMS( 0, 0 );
            sub_2257();
            sub_23923();
            ACTIVATE_SCRIPTED_CAMS( 1, 1 );
            l_U257++;
            break;
            case 1:
            if (NOT (IS_SPECIFIC_CAM_INTERPOLATING( l_U128 )))
            {
                sub_2257();
                sub_23923();
            }
            break;
        }
        break;
        case 2:
        switch (l_U257)
        {
            case 0:
            ACTIVATE_SCRIPTED_CAMS( 0, 0 );
            sub_2257();
            CREATE_CAM( 6, ref l_U127 );
            switch (g_U30190)
            {
                case 0:
                SET_CAM_POS( l_U127, -392.72900000, 427.24380000, 5.71939200 );
                SET_CAM_ROT( l_U127, 7.50499800, -17.05086000, 150.41600000 );
                SET_CAM_FOV( l_U127, 35.10003000 );
                break;
                case 1:
                SET_CAM_POS( l_U127, -485.95250000, 144.19000000, 8.43567700 );
                SET_CAM_ROT( l_U127, -13.89560000, -15.08103000, 4.50554800 );
                SET_CAM_FOV( l_U127, 27.60004000 );
                break;
                case 2:
                SET_CAM_POS( l_U127, -426.97270000, 354.99890000, 11.64035000 );
                SET_CAM_ROT( l_U127, -0.85383700, -13.92950000, 139.18520000 );
                SET_CAM_FOV( l_U127, 34.80003000 );
                break;
            }
            SET_CAM_ACTIVE( l_U127, 1 );
            SET_CAM_PROPAGATE( l_U127, 1 );
            ACTIVATE_SCRIPTED_CAMS( 1, 1 );
            l_U257++;
            break;
            default:
        }
        break;
        case 3:
        switch (l_U257)
        {
            case 0:
            ACTIVATE_SCRIPTED_CAMS( 0, 0 );
            sub_2257();
            CREATE_CAM( 6, ref l_U127 );
            switch (g_U30190)
            {
                case 0:
                SET_CAM_POS( l_U127, -392.68080000, 423.06170000, 6.05131100 );
                SET_CAM_ROT( l_U127, 13.67381000, 13.29170000, 44.31904000 );
                SET_CAM_FOV( l_U127, 45.00000000 );
                break;
                case 1:
                SET_CAM_POS( l_U127, -485.69550000, 147.70160000, 7.43705800 );
                SET_CAM_ROT( l_U127, 11.10494000, -12.16586000, -25.12617000 );
                SET_CAM_FOV( l_U127, 52.19998000 );
                break;
                case 2:
                SET_CAM_POS( l_U127, -430.91440000, 354.32400000, 11.85510000 );
                SET_CAM_ROT( l_U127, 0.64850800, -16.49529000, -148.07560000 );
                SET_CAM_FOV( l_U127, 38.10002000 );
                break;
            }
            SET_CAM_ACTIVE( l_U127, 1 );
            SET_CAM_PROPAGATE( l_U127, 1 );
            ACTIVATE_SCRIPTED_CAMS( 1, 1 );
            l_U257++;
            break;
            default:
        }
        break;
        case 5:
        switch (l_U257)
        {
            case 0:
            ACTIVATE_SCRIPTED_CAMS( 0, 0 );
            sub_2257();
            sub_38081( sub_1661() );
            ACTIVATE_SCRIPTED_CAMS( 1, 1 );
            l_U257++;
            break;
            case 1:
            if (DOES_CAM_EXIST( l_U128 ))
            {
                if (NOT (IS_SPECIFIC_CAM_INTERPOLATING( l_U128 )))
                {
                    sub_2257();
                }
            }
            break;
        }
        break;
        case 8:
        switch (l_U257)
        {
            case 0:
            ACTIVATE_SCRIPTED_CAMS( 0, 0 );
            sub_2257();
            CREATE_CAM( 6, ref l_U127 );
            switch (g_U30190)
            {
                case 0:
                SET_CAM_POS( l_U127, -396.09910000, 422.00390000, 7.12134900 );
                SET_CAM_ROT( l_U127, -14.51262000, 0.00000000, -41.55739000 );
                SET_CAM_FOV( l_U127, 31.56539000 );
                break;
                case 1:
                SET_CAM_POS( l_U127, -484.41720000, 152.78860000, 7.73748400 );
                SET_CAM_ROT( l_U127, 8.82773100, -0.00000000, 179.95550000 );
                SET_CAM_FOV( l_U127, 45.00000000 );
                break;
                case 2:
                SET_CAM_POS( l_U127, -431.66180000, 356.08690000, 11.73748000 );
                SET_CAM_ROT( l_U127, 0.05396800, 0.00000000, -148.80000000 );
                SET_CAM_FOV( l_U127, 30.60004000 );
                break;
            }
            SET_CAM_ACTIVE( l_U127, 1 );
            SET_CAM_PROPAGATE( l_U127, 1 );
            ACTIVATE_SCRIPTED_CAMS( 1, 1 );
            l_U257++;
            break;
            default:
        }
        break;
        case 9:
        switch (l_U257)
        {
            case 0:
            ACTIVATE_SCRIPTED_CAMS( 0, 0 );
            sub_2257();
            CREATE_CAM( 6, ref l_U127 );
            switch (g_U30190)
            {
                case 0:
                SET_CAM_POS( l_U127, -397.04070000, 424.47010000, 5.56913300 );
                SET_CAM_ROT( l_U127, 13.04438000, 0.00000000, -85.06641000 );
                SET_CAM_FOV( l_U127, 35.46538000 );
                break;
                case 1:
                SET_CAM_POS( l_U127, -486.61540000, 145.76600000, 7.46106300 );
                SET_CAM_ROT( l_U127, 9.35969700, -0.00000000, -10.89397000 );
                SET_CAM_FOV( l_U127, 44.10000000 );
                break;
                case 2:
                GENERATE_RANDOM_INT_IN_RANGE( 0, 3, ref l_U370 );
                switch (l_U370)
                {
                    case 0:
                    SET_CAM_POS( l_U127, -434.11050000, 348.57110000, 13.74648000 );
                    SET_CAM_ROT( l_U127, -17.63015000, -0.00000000, -48.65577000 );
                    SET_CAM_FOV( l_U127, 24.30008000 );
                    break;
                    case 1:
                    SET_CAM_POS( l_U127, -428.03700000, 351.26400000, 11.60838000 );
                    SET_CAM_ROT( l_U127, 1.20179900, -0.00000000, 45.17618000 );
                    SET_CAM_FOV( l_U127, 39.60004000 );
                    break;
                    case 2:
                    SET_CAM_POS( l_U127, -427.11300000, 354.06450000, 11.05452000 );
                    SET_CAM_ROT( l_U127, 15.72723000, -0.00000100, 122.29760000 );
                    SET_CAM_FOV( l_U127, 37.20002000 );
                    break;
                }
                break;
            }
            SET_CAM_ACTIVE( l_U127, 1 );
            SET_CAM_PROPAGATE( l_U127, 1 );
            ACTIVATE_SCRIPTED_CAMS( 1, 1 );
            l_U257++;
            break;
            default:
        }
        break;
        case 10:
        switch (l_U257)
        {
            case 0:
            ACTIVATE_SCRIPTED_CAMS( 0, 0 );
            sub_2257();
            CREATE_CAM( 6, ref l_U127 );
            switch (g_U30190)
            {
                case 0:
                SET_CAM_POS( l_U127, -392.33760000, 426.85800000, 5.71518900 );
                SET_CAM_ROT( l_U127, 13.80405000, -0.00000000, 154.21670000 );
                SET_CAM_FOV( l_U127, 35.46538000 );
                break;
                case 1:
                SET_CAM_POS( l_U127, -485.81850000, 147.00130000, 7.32809600 );
                SET_CAM_ROT( l_U127, 16.05046000, -0.00000000, -12.39312000 );
                SET_CAM_FOV( l_U127, 42.00001000 );
                break;
                case 2:
                SET_CAM_POS( l_U127, -428.98630000, 355.78060000, 11.59775000 );
                SET_CAM_ROT( l_U127, 5.64820100, -0.00000000, 155.62790000 );
                SET_CAM_FOV( l_U127, 38.10002000 );
                break;
            }
            SET_CAM_ACTIVE( l_U127, 1 );
            SET_CAM_PROPAGATE( l_U127, 1 );
            ACTIVATE_SCRIPTED_CAMS( 1, 1 );
            l_U257++;
            break;
            default:
        }
        break;
        case 13:
        switch (l_U257)
        {
            case 0:
            ACTIVATE_SCRIPTED_CAMS( 0, 0 );
            sub_2257();
            CREATE_CAM( 6, ref l_U127 );
            switch (g_U30190)
            {
                case 0:
                SCRIPT_ASSERT( "NO SHOWDOWN CAM FOR CLUB_BAHAMA_MAMAS" );
                break;
                case 1:
                SCRIPT_ASSERT( "NO SHOWDOWN CAM FOR CLUB_MAISONETTE_9" );
                break;
                case 2:
                SET_CAM_POS( l_U127, -433.13300000, 352.42980000, 12.66899000 );
                SET_CAM_ROT( l_U127, -12.04102000, -0.00000000, -102.08570000 );
                SET_CAM_FOV( l_U127, 45.00000000 );
                break;
            }
            SET_CAM_ACTIVE( l_U127, 1 );
            SET_CAM_PROPAGATE( l_U127, 1 );
            ACTIVATE_SCRIPTED_CAMS( 1, 1 );
            l_U257++;
            break;
            default:
        }
        break;
        case 14:
        switch (l_U257)
        {
            case 0:
            ACTIVATE_SCRIPTED_CAMS( 0, 0 );
            sub_2257();
            CREATE_CAM( 6, ref l_U127 );
            switch (g_U30190)
            {
                case 0:
                SCRIPT_ASSERT( "NO SHOWDOWN CAM FOR CLUB_BAHAMA_MAMAS" );
                break;
                case 1:
                SCRIPT_ASSERT( "NO SHOWDOWN CAM FOR CLUB_MAISONETTE_9" );
                break;
                case 2:
                SET_CAM_POS( l_U127, -431.36980000, 351.78210000, 12.51989000 );
                SET_CAM_ROT( l_U127, -16.23682000, 0.00000000, -86.57131000 );
                SET_CAM_FOV( l_U127, 45.00000000 );
                break;
            }
            SET_CAM_ACTIVE( l_U127, 1 );
            SET_CAM_PROPAGATE( l_U127, 1 );
            ACTIVATE_SCRIPTED_CAMS( 1, 1 );
            l_U257++;
            break;
            default:
        }
        break;
    }
    return;
}

void sub_6589()
{
    switch (g_U30190)
    {
        case 2:
        sub_6634();
        break;
        case 0:
        sub_11835();
        break;
        case 1:
        sub_19391();
        break;
    }
    return;
}

void sub_6634()
{
    sub_6644( 8 );
    switch (l_U364)
    {
        case 0:
        CREATE_CAM( 14, ref l_U129[0] );
        SET_CAM_POS( l_U129[0], -431.41200000, 352.04200000, 12.12430000 );
        SET_CAM_ROT( l_U129[0], -9.43780000, 0.00000000, -67.99370000 );
        SET_CAM_FOV( l_U129[0], 45.00000000 );
        SET_CAM_ACTIVE( l_U129[0], 1 );
        CREATE_CAM( 14, ref l_U129[1] );
        SET_CAM_POS( l_U129[1], -431.25380000, 351.95670000, 12.09830000 );
        SET_CAM_ROT( l_U129[1], -7.87980000, 0.00000000, -64.14141000 );
        SET_CAM_FOV( l_U129[1], 45.00000000 );
        SET_CAM_ACTIVE( l_U129[1], 1 );
        CREATE_CAM( 14, ref l_U129[2] );
        SET_CAM_POS( l_U129[2], -431.09570000, 351.87140000, 12.07230000 );
        SET_CAM_ROT( l_U129[2], -6.32180000, 0.00000000, -60.28900000 );
        SET_CAM_FOV( l_U129[2], 45.00000000 );
        SET_CAM_ACTIVE( l_U129[2], 1 );
        CREATE_CAM( 14, ref l_U129[3] );
        SET_CAM_POS( l_U129[3], -430.93750000, 351.78610000, 12.04620000 );
        SET_CAM_ROT( l_U129[3], -4.76380000, 0.00000000, -56.43670000 );
        SET_CAM_FOV( l_U129[3], 45.00000000 );
        SET_CAM_ACTIVE( l_U129[3], 1 );
        CREATE_CAM( 25, ref l_U128 );
        SET_CAM_SPLINE_DURATION( l_U128, 10500 );
        SET_CAM_SPLINE_SPEED_GRAPH( l_U128, 0 );
        SET_CAM_SPLINE_SPEED_CONSTANT( l_U128, 0 );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[0] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[1] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[2] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[3] );
        SET_CAM_ACTIVE( l_U128, 1 );
        SET_CAM_PROPAGATE( l_U128, 1 );
        break;
        case 1:
        CREATE_CAM( 14, ref l_U129[0] );
        SET_CAM_POS( l_U129[0], -430.92550000, 354.04640000, 11.47090000 );
        SET_CAM_ROT( l_U129[0], 7.01250000, 0.00000000, -120.09960000 );
        SET_CAM_FOV( l_U129[0], 57.00000000 );
        SET_CAM_ACTIVE( l_U129[0], 1 );
        CREATE_CAM( 14, ref l_U129[1] );
        SET_CAM_POS( l_U129[1], -431.10600000, 353.24560000, 11.83660000 );
        SET_CAM_ROT( l_U129[1], 0.96390010, 0.00000000, -96.77189000 );
        SET_CAM_FOV( l_U129[1], 57.00000000 );
        SET_CAM_ACTIVE( l_U129[1], 1 );
        CREATE_CAM( 14, ref l_U129[2] );
        SET_CAM_POS( l_U129[2], -430.83650000, 352.44490000, 12.20230000 );
        SET_CAM_ROT( l_U129[2], -5.08470000, 0.00000000, -73.44420000 );
        SET_CAM_FOV( l_U129[2], 57.00000000 );
        SET_CAM_ACTIVE( l_U129[2], 1 );
        CREATE_CAM( 14, ref l_U129[3] );
        SET_CAM_POS( l_U129[3], -430.29200000, 351.64410000, 12.56800000 );
        SET_CAM_ROT( l_U129[3], -11.13330000, 0.00000000, -50.11650000 );
        SET_CAM_FOV( l_U129[3], 57.00000000 );
        SET_CAM_ACTIVE( l_U129[3], 1 );
        CREATE_CAM( 25, ref l_U128 );
        SET_CAM_SPLINE_DURATION( l_U128, 10000 );
        SET_CAM_SPLINE_SPEED_GRAPH( l_U128, 0 );
        SET_CAM_SPLINE_SPEED_CONSTANT( l_U128, 0 );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[0] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[1] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[2] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[3] );
        SET_CAM_ACTIVE( l_U128, 1 );
        SET_CAM_PROPAGATE( l_U128, 1 );
        break;
        case 2:
        CREATE_CAM( 14, ref l_U129[0] );
        SET_CAM_POS( l_U129[0], -430.98720000, 351.86670000, 12.16320000 );
        SET_CAM_ROT( l_U129[0], -6.46280000, 0.00000000, -61.60520000 );
        SET_CAM_FOV( l_U129[0], 33.30000000 );
        SET_CAM_ACTIVE( l_U129[0], 1 );
        CREATE_CAM( 14, ref l_U129[1] );
        SET_CAM_POS( l_U129[1], -431.37360000, 351.63840000, 12.21400000 );
        SET_CAM_ROT( l_U129[1], -7.22120000, 0.00000000, -61.60520000 );
        SET_CAM_FOV( l_U129[1], 33.30000000 );
        SET_CAM_ACTIVE( l_U129[1], 1 );
        CREATE_CAM( 14, ref l_U129[2] );
        SET_CAM_POS( l_U129[2], -431.76000000, 351.41020000, 12.26480000 );
        SET_CAM_ROT( l_U129[2], -7.97970000, 0.00000000, -61.60520000 );
        SET_CAM_FOV( l_U129[2], 33.30000000 );
        SET_CAM_ACTIVE( l_U129[2], 1 );
        CREATE_CAM( 14, ref l_U129[3] );
        SET_CAM_POS( l_U129[3], -432.14640000, 351.18190000, 12.31560000 );
        SET_CAM_ROT( l_U129[3], -8.73810000, 0.00000000, -61.60520000 );
        SET_CAM_FOV( l_U129[3], 33.30000000 );
        SET_CAM_ACTIVE( l_U129[3], 1 );
        CREATE_CAM( 25, ref l_U128 );
        SET_CAM_SPLINE_DURATION( l_U128, 10000 );
        SET_CAM_SPLINE_SPEED_GRAPH( l_U128, 0 );
        SET_CAM_SPLINE_SPEED_CONSTANT( l_U128, 0 );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[0] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[1] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[2] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[3] );
        SET_CAM_ACTIVE( l_U128, 1 );
        SET_CAM_PROPAGATE( l_U128, 1 );
        break;
        case 3:
        CREATE_CAM( 14, ref l_U129[0] );
        SET_CAM_POS( l_U129[0], -430.97350000, 353.64900000, 11.92280000 );
        SET_CAM_ROT( l_U129[0], -1.23290000, 0.00000000, -122.23620000 );
        SET_CAM_FOV( l_U129[0], 43.80000000 );
        SET_CAM_ACTIVE( l_U129[0], 1 );
        CREATE_CAM( 14, ref l_U129[1] );
        SET_CAM_POS( l_U129[1], -431.40850000, 354.16080000, 11.93660000 );
        SET_CAM_ROT( l_U129[1], -1.23290000, 0.00000000, -122.23620000 );
        SET_CAM_FOV( l_U129[1], 43.10000000 );
        SET_CAM_ACTIVE( l_U129[1], 1 );
        CREATE_CAM( 14, ref l_U129[2] );
        SET_CAM_POS( l_U129[2], -431.84350000, 354.67250000, 11.95040000 );
        SET_CAM_ROT( l_U129[2], -1.23290000, 0.00000000, -122.23620000 );
        SET_CAM_FOV( l_U129[2], 42.40000000 );
        SET_CAM_ACTIVE( l_U129[2], 1 );
        CREATE_CAM( 14, ref l_U129[3] );
        SET_CAM_POS( l_U129[3], -432.27850000, 355.18430000, 11.96420000 );
        SET_CAM_ROT( l_U129[3], -1.23290000, 0.00000000, -122.23620000 );
        SET_CAM_FOV( l_U129[3], 41.70000000 );
        SET_CAM_ACTIVE( l_U129[3], 1 );
        CREATE_CAM( 25, ref l_U128 );
        SET_CAM_SPLINE_DURATION( l_U128, 10000 );
        SET_CAM_SPLINE_SPEED_GRAPH( l_U128, 0 );
        SET_CAM_SPLINE_SPEED_CONSTANT( l_U128, 0 );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[0] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[1] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[2] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[3] );
        SET_CAM_ACTIVE( l_U128, 1 );
        SET_CAM_PROPAGATE( l_U128, 1 );
        break;
        case 4:
        CREATE_CAM( 14, ref l_U129[0] );
        SET_CAM_POS( l_U129[0], -432.32680000, 354.05120000, 12.90820000 );
        SET_CAM_ROT( l_U129[0], -17.72970000, 0.00000000, -97.20690000 );
        SET_CAM_FOV( l_U129[0], 42.00000000 );
        SET_CAM_ACTIVE( l_U129[0], 1 );
        CREATE_CAM( 14, ref l_U129[1] );
        SET_CAM_POS( l_U129[1], -432.45500000, 353.03680000, 12.90820000 );
        SET_CAM_ROT( l_U129[1], -17.57100000, 0.00000000, -82.77900000 );
        SET_CAM_FOV( l_U129[1], 42.00000000 );
        SET_CAM_ACTIVE( l_U129[1], 1 );
        CREATE_CAM( 14, ref l_U129[2] );
        SET_CAM_POS( l_U129[2], -432.58330000, 352.02250000, 12.90820000 );
        SET_CAM_ROT( l_U129[2], -17.41240000, 0.00000000, -68.35110000 );
        SET_CAM_FOV( l_U129[2], 42.00000000 );
        SET_CAM_ACTIVE( l_U129[2], 1 );
        CREATE_CAM( 14, ref l_U129[3] );
        SET_CAM_POS( l_U129[3], -432.71150000, 351.00820000, 12.90820000 );
        SET_CAM_ROT( l_U129[3], -17.25370000, 0.00000000, -53.92320000 );
        SET_CAM_FOV( l_U129[3], 42.00000000 );
        SET_CAM_ACTIVE( l_U129[3], 1 );
        CREATE_CAM( 25, ref l_U128 );
        SET_CAM_SPLINE_DURATION( l_U128, 10000 );
        SET_CAM_SPLINE_SPEED_GRAPH( l_U128, 0 );
        SET_CAM_SPLINE_SPEED_CONSTANT( l_U128, 0 );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[0] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[1] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[2] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[3] );
        SET_CAM_ACTIVE( l_U128, 1 );
        SET_CAM_PROPAGATE( l_U128, 1 );
        break;
        case 5:
        CREATE_CAM( 14, ref l_U129[0] );
        SET_CAM_POS( l_U129[0], -431.75320000, 350.87990000, 12.98840000 );
        SET_CAM_ROT( l_U129[0], -17.00150000, 0.00000000, -59.28410000 );
        SET_CAM_FOV( l_U129[0], 41.70000000 );
        SET_CAM_ACTIVE( l_U129[0], 1 );
        CREATE_CAM( 14, ref l_U129[1] );
        SET_CAM_POS( l_U129[1], -431.78980000, 352.11180000, 12.92670000 );
        SET_CAM_ROT( l_U129[1], -17.00150000, 0.00000000, -85.50000000 );
        SET_CAM_FOV( l_U129[1], 41.70000000 );
        SET_CAM_ACTIVE( l_U129[1], 1 );
        CREATE_CAM( 14, ref l_U129[2] );
        SET_CAM_POS( l_U129[2], -431.60130000, 353.34360000, 12.86490000 );
        SET_CAM_ROT( l_U129[2], -17.00150000, 0.00000000, -111.71580000 );
        SET_CAM_FOV( l_U129[2], 41.70000000 );
        SET_CAM_ACTIVE( l_U129[2], 1 );
        CREATE_CAM( 14, ref l_U129[3] );
        SET_CAM_POS( l_U129[3], -431.03780000, 354.57550000, 12.80320000 );
        SET_CAM_ROT( l_U129[3], -17.00150000, 0.00000000, -137.93160000 );
        SET_CAM_FOV( l_U129[3], 41.70000000 );
        SET_CAM_ACTIVE( l_U129[3], 1 );
        CREATE_CAM( 25, ref l_U128 );
        SET_CAM_SPLINE_DURATION( l_U128, 10000 );
        SET_CAM_SPLINE_SPEED_GRAPH( l_U128, 0 );
        SET_CAM_SPLINE_SPEED_CONSTANT( l_U128, 0 );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[0] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[1] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[2] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[3] );
        SET_CAM_ACTIVE( l_U128, 1 );
        SET_CAM_PROPAGATE( l_U128, 1 );
        break;
        case 6:
        CREATE_CAM( 14, ref l_U129[0] );
        SET_CAM_POS( l_U129[0], -432.26790000, 355.63190000, 12.63940000 );
        SET_CAM_ROT( l_U129[0], -13.41200000, 0.00000000, -134.49170000 );
        SET_CAM_FOV( l_U129[0], 39.60000000 );
        SET_CAM_ACTIVE( l_U129[0], 1 );
        CREATE_CAM( 14, ref l_U129[1] );
        SET_CAM_POS( l_U129[1], -432.00860000, 355.32580000, 12.54520000 );
        SET_CAM_ROT( l_U129[1], -13.41200000, 0.00000000, -132.28060000 );
        SET_CAM_FOV( l_U129[1], 39.60000000 );
        SET_CAM_ACTIVE( l_U129[1], 1 );
        CREATE_CAM( 14, ref l_U129[2] );
        SET_CAM_POS( l_U129[2], -431.74930000, 355.01970000, 12.45090000 );
        SET_CAM_ROT( l_U129[2], -13.41200000, 0.00000000, -130.06950000 );
        SET_CAM_FOV( l_U129[2], 39.60000000 );
        SET_CAM_ACTIVE( l_U129[2], 1 );
        CREATE_CAM( 14, ref l_U129[3] );
        SET_CAM_POS( l_U129[3], -431.49000000, 354.71370000, 12.35670000 );
        SET_CAM_ROT( l_U129[3], -13.41200000, 0.00000000, -127.85830000 );
        SET_CAM_FOV( l_U129[3], 39.60000000 );
        SET_CAM_ACTIVE( l_U129[3], 1 );
        CREATE_CAM( 25, ref l_U128 );
        SET_CAM_SPLINE_DURATION( l_U128, 10000 );
        SET_CAM_SPLINE_SPEED_GRAPH( l_U128, 0 );
        SET_CAM_SPLINE_SPEED_CONSTANT( l_U128, 0 );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[0] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[1] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[2] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[3] );
        SET_CAM_ACTIVE( l_U128, 1 );
        SET_CAM_PROPAGATE( l_U128, 1 );
        break;
        case 7:
        CREATE_CAM( 14, ref l_U129[0] );
        SET_CAM_POS( l_U129[0], -432.68720000, 353.90240000, 13.14720000 );
        SET_CAM_ROT( l_U129[0], -22.45240000, 0.00000000, -121.50360000 );
        SET_CAM_FOV( l_U129[0], 38.10000000 );
        SET_CAM_ACTIVE( l_U129[0], 1 );
        CREATE_CAM( 14, ref l_U129[1] );
        SET_CAM_POS( l_U129[1], -432.30270000, 353.16170000, 12.91910000 );
        SET_CAM_ROT( l_U129[1], -20.43330000, 0.00000000, -106.03960000 );
        SET_CAM_FOV( l_U129[1], 39.80000000 );
        SET_CAM_ACTIVE( l_U129[1], 1 );
        CREATE_CAM( 14, ref l_U129[2] );
        SET_CAM_POS( l_U129[2], -431.91810000, 352.42100000, 12.69110000 );
        SET_CAM_ROT( l_U129[2], -18.41430000, 0.00000000, -90.57570000 );
        SET_CAM_FOV( l_U129[2], 41.50000000 );
        SET_CAM_ACTIVE( l_U129[2], 1 );
        CREATE_CAM( 14, ref l_U129[3] );
        SET_CAM_POS( l_U129[3], -431.53350000, 351.68030000, 12.46300000 );
        SET_CAM_ROT( l_U129[3], -16.39530000, 0.00000000, -75.11170000 );
        SET_CAM_FOV( l_U129[3], 43.20000000 );
        SET_CAM_ACTIVE( l_U129[3], 1 );
        CREATE_CAM( 25, ref l_U128 );
        SET_CAM_SPLINE_DURATION( l_U128, 10000 );
        SET_CAM_SPLINE_SPEED_GRAPH( l_U128, 0 );
        SET_CAM_SPLINE_SPEED_CONSTANT( l_U128, 0 );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[0] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[1] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[2] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[3] );
        SET_CAM_ACTIVE( l_U128, 1 );
        SET_CAM_PROPAGATE( l_U128, 1 );
        break;
    }
    return;
}

void sub_6644(int iParam0)
{
    GENERATE_RANDOM_INT_IN_RANGE( 0, iParam0, ref l_U364 );
    if (l_U369 == l_U364)
    {
        l_U364++;
        if (NOT (l_U364 < iParam0))
        {
            l_U364 = 0;
        }
    }
    l_U369 = l_U364;
    PRINTSTRING( "!!!CAMERA SELECTOR PICKED " );
    PRINTINT( l_U364 );
    PRINTNL();
    return;
}

void sub_11835()
{
    sub_6644( 12 );
    switch (l_U364)
    {
        case 0:
        CREATE_CAM( 14, ref l_U129[0] );
        SET_CAM_POS( l_U129[0], -395.07060000, 419.78630000, 8.03350000 );
        SET_CAM_ROT( l_U129[0], -14.86320000, 0.00000000, -13.44470000 );
        SET_CAM_FOV( l_U129[0], 45.30000000 );
        SET_CAM_ACTIVE( l_U129[0], 1 );
        CREATE_CAM( 14, ref l_U129[1] );
        SET_CAM_POS( l_U129[1], -394.87780000, 420.59280000, 7.81340000 );
        SET_CAM_ROT( l_U129[1], -14.86320000, 0.00000000, -13.44470000 );
        SET_CAM_FOV( l_U129[1], 45.30000000 );
        SET_CAM_ACTIVE( l_U129[1], 1 );
        CREATE_CAM( 14, ref l_U129[2] );
        SET_CAM_POS( l_U129[2], -394.68500000, 421.39930000, 7.59330000 );
        SET_CAM_ROT( l_U129[2], -14.86320000, 0.00000000, -13.44470000 );
        SET_CAM_FOV( l_U129[2], 45.30000000 );
        SET_CAM_ACTIVE( l_U129[2], 1 );
        CREATE_CAM( 14, ref l_U129[3] );
        SET_CAM_POS( l_U129[3], -394.49220000, 422.20580000, 7.37330000 );
        SET_CAM_ROT( l_U129[3], -14.86320000, 0.00000000, -13.44470000 );
        SET_CAM_FOV( l_U129[3], 45.30000000 );
        SET_CAM_ACTIVE( l_U129[3], 1 );
        CREATE_CAM( 25, ref l_U128 );
        SET_CAM_SPLINE_DURATION( l_U128, 10000 );
        SET_CAM_SPLINE_SPEED_GRAPH( l_U128, 0 );
        SET_CAM_SPLINE_SPEED_CONSTANT( l_U128, 0 );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[0] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[1] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[2] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[3] );
        SET_CAM_ACTIVE( l_U128, 1 );
        SET_CAM_PROPAGATE( l_U128, 1 );
        break;
        case 1:
        CREATE_CAM( 14, ref l_U129[0] );
        SET_CAM_POS( l_U129[0], -395.82220000, 422.51300000, 7.01410000 );
        SET_CAM_ROT( l_U129[0], -5.39140000, 0.00000000, -31.35000000 );
        SET_CAM_FOV( l_U129[0], 44.16540000 );
        SET_CAM_ACTIVE( l_U129[0], 1 );
        CREATE_CAM( 14, ref l_U129[1] );
        SET_CAM_POS( l_U129[1], -395.08110000, 422.12100000, 7.18170000 );
        SET_CAM_ROT( l_U129[1], -9.96630000, 0.00000000, -15.84970000 );
        SET_CAM_FOV( l_U129[1], 44.16540000 );
        SET_CAM_ACTIVE( l_U129[1], 1 );
        CREATE_CAM( 14, ref l_U129[2] );
        SET_CAM_POS( l_U129[2], -394.34010000, 421.72910000, 7.34930000 );
        SET_CAM_ROT( l_U129[2], -14.54130000, 0.00000000, -0.34940000 );
        SET_CAM_FOV( l_U129[2], 44.16540000 );
        SET_CAM_ACTIVE( l_U129[2], 1 );
        CREATE_CAM( 14, ref l_U129[3] );
        SET_CAM_POS( l_U129[3], -393.59900000, 421.33720000, 7.51700000 );
        SET_CAM_ROT( l_U129[3], -19.11630000, 0.00000000, 15.15090000 );
        SET_CAM_FOV( l_U129[3], 44.16540000 );
        SET_CAM_ACTIVE( l_U129[3], 1 );
        CREATE_CAM( 25, ref l_U128 );
        SET_CAM_SPLINE_DURATION( l_U128, 10000 );
        SET_CAM_SPLINE_SPEED_GRAPH( l_U128, 0 );
        SET_CAM_SPLINE_SPEED_CONSTANT( l_U128, 0 );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[0] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[1] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[2] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[3] );
        SET_CAM_ACTIVE( l_U128, 1 );
        SET_CAM_PROPAGATE( l_U128, 1 );
        break;
        case 2:
        CREATE_CAM( 14, ref l_U129[0] );
        SET_CAM_POS( l_U129[0], -395.66740000, 419.77700000, 8.03740000 );
        SET_CAM_ROT( l_U129[0], -9.87850000, 0.00000000, -13.15780000 );
        SET_CAM_FOV( l_U129[0], 36.96540000 );
        SET_CAM_ACTIVE( l_U129[0], 1 );
        CREATE_CAM( 14, ref l_U129[1] );
        SET_CAM_POS( l_U129[1], -394.81660000, 419.95550000, 7.94460000 );
        SET_CAM_ROT( l_U129[1], -9.56830000, 0.00000000, -6.81600000 );
        SET_CAM_FOV( l_U129[1], 36.96540000 );
        SET_CAM_ACTIVE( l_U129[1], 1 );
        CREATE_CAM( 14, ref l_U129[2] );
        SET_CAM_POS( l_U129[2], -393.96590000, 420.13410000, 7.85180000 );
        SET_CAM_ROT( l_U129[2], -9.25810000, 0.00000000, -0.47420000 );
        SET_CAM_FOV( l_U129[2], 36.96540000 );
        SET_CAM_ACTIVE( l_U129[2], 1 );
        CREATE_CAM( 14, ref l_U129[3] );
        SET_CAM_POS( l_U129[3], -393.11510000, 420.31260000, 7.75900000 );
        SET_CAM_ROT( l_U129[3], -8.94790000, 0.00000000, 5.86750000 );
        SET_CAM_FOV( l_U129[3], 36.96540000 );
        SET_CAM_ACTIVE( l_U129[3], 1 );
        CREATE_CAM( 25, ref l_U128 );
        SET_CAM_SPLINE_DURATION( l_U128, 10000 );
        SET_CAM_SPLINE_SPEED_GRAPH( l_U128, 0 );
        SET_CAM_SPLINE_SPEED_CONSTANT( l_U128, 0 );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[0] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[1] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[2] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[3] );
        SET_CAM_ACTIVE( l_U128, 1 );
        SET_CAM_PROPAGATE( l_U128, 1 );
        break;
        case 3:
        CREATE_CAM( 14, ref l_U129[0] );
        SET_CAM_POS( l_U129[0], -392.10980000, 422.18310000, 7.51060000 );
        SET_CAM_ROT( l_U129[0], -21.11850000, 0.00000000, 35.06530000 );
        SET_CAM_FOV( l_U129[0], 34.80000000 );
        SET_CAM_ACTIVE( l_U129[0], 1 );
        CREATE_CAM( 14, ref l_U129[1] );
        SET_CAM_POS( l_U129[1], -391.55230000, 421.38890000, 7.88540000 );
        SET_CAM_ROT( l_U129[1], -21.11850000, 0.00000000, 35.06530000 );
        SET_CAM_FOV( l_U129[1], 34.80000000 );
        SET_CAM_ACTIVE( l_U129[1], 1 );
        CREATE_CAM( 14, ref l_U129[2] );
        SET_CAM_POS( l_U129[2], -390.99480000, 420.59470000, 8.26019900 );
        SET_CAM_ROT( l_U129[2], -21.11850000, 0.00000000, 35.06530000 );
        SET_CAM_FOV( l_U129[2], 34.80000000 );
        SET_CAM_ACTIVE( l_U129[2], 1 );
        CREATE_CAM( 14, ref l_U129[3] );
        SET_CAM_POS( l_U129[3], -390.43730000, 419.80050000, 8.63490000 );
        SET_CAM_ROT( l_U129[3], -21.11850000, 0.00000000, 35.06530000 );
        SET_CAM_FOV( l_U129[3], 34.80000000 );
        SET_CAM_ACTIVE( l_U129[3], 1 );
        CREATE_CAM( 25, ref l_U128 );
        SET_CAM_SPLINE_DURATION( l_U128, 10000 );
        SET_CAM_SPLINE_SPEED_GRAPH( l_U128, 0 );
        SET_CAM_SPLINE_SPEED_CONSTANT( l_U128, 0 );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[0] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[1] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[2] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[3] );
        SET_CAM_ACTIVE( l_U128, 1 );
        SET_CAM_PROPAGATE( l_U128, 1 );
        break;
        case 4:
        CREATE_CAM( 14, ref l_U129[0] );
        SET_CAM_POS( l_U129[0], -392.33170000, 422.75270000, 6.93510000 );
        SET_CAM_ROT( l_U129[0], -11.34900000, 0.00000000, 38.41390000 );
        SET_CAM_FOV( l_U129[0], 35.10000000 );
        SET_CAM_ACTIVE( l_U129[0], 1 );
        CREATE_CAM( 14, ref l_U129[1] );
        SET_CAM_POS( l_U129[1], -393.29260000, 422.46930000, 6.93510000 );
        SET_CAM_ROT( l_U129[1], -9.47159900, 0.00000000, 18.36420000 );
        SET_CAM_FOV( l_U129[1], 35.10000000 );
        SET_CAM_ACTIVE( l_U129[1], 1 );
        CREATE_CAM( 14, ref l_U129[2] );
        SET_CAM_POS( l_U129[2], -394.25350000, 422.18600000, 6.93510000 );
        SET_CAM_ROT( l_U129[2], -7.59420000, 0.00000000, -1.68540000 );
        SET_CAM_FOV( l_U129[2], 35.10000000 );
        SET_CAM_ACTIVE( l_U129[2], 1 );
        CREATE_CAM( 14, ref l_U129[3] );
        SET_CAM_POS( l_U129[3], -395.21440000, 421.90270000, 6.93510000 );
        SET_CAM_ROT( l_U129[3], -5.71680000, 0.00000000, -21.73510000 );
        SET_CAM_FOV( l_U129[3], 35.10000000 );
        SET_CAM_ACTIVE( l_U129[3], 1 );
        CREATE_CAM( 25, ref l_U128 );
        SET_CAM_SPLINE_DURATION( l_U128, 10000 );
        SET_CAM_SPLINE_SPEED_GRAPH( l_U128, 0 );
        SET_CAM_SPLINE_SPEED_CONSTANT( l_U128, 0 );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[0] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[1] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[2] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[3] );
        SET_CAM_ACTIVE( l_U128, 1 );
        SET_CAM_PROPAGATE( l_U128, 1 );
        break;
        case 5:
        ACTIVATE_SCRIPTED_CAMS( 1, 1 );
        CREATE_CAM( 14, ref l_U129[0] );
        SET_CAM_POS( l_U129[0], -395.21440000, 421.90270000, 6.93510000 );
        SET_CAM_ROT( l_U129[0], -5.71680000, 0.00000000, -21.73510000 );
        SET_CAM_FOV( l_U129[0], 35.10000000 );
        SET_CAM_ACTIVE( l_U129[0], 1 );
        CREATE_CAM( 14, ref l_U129[1] );
        SET_CAM_POS( l_U129[1], -395.41200000, 421.40700000, 7.02310000 );
        SET_CAM_ROT( l_U129[1], -5.71680000, 0.00000000, -21.73510000 );
        SET_CAM_FOV( l_U129[1], 35.10000000 );
        SET_CAM_ACTIVE( l_U129[1], 1 );
        CREATE_CAM( 14, ref l_U129[2] );
        SET_CAM_POS( l_U129[2], -395.60960000, 420.91120000, 7.11110000 );
        SET_CAM_ROT( l_U129[2], -5.71680000, 0.00000000, -21.73510000 );
        SET_CAM_FOV( l_U129[2], 35.10000000 );
        SET_CAM_ACTIVE( l_U129[2], 1 );
        CREATE_CAM( 14, ref l_U129[3] );
        SET_CAM_POS( l_U129[3], -395.80730000, 420.41550000, 7.19910000 );
        SET_CAM_ROT( l_U129[3], -5.71680000, 0.00000000, -21.73510000 );
        SET_CAM_FOV( l_U129[3], 35.10000000 );
        SET_CAM_ACTIVE( l_U129[3], 1 );
        CREATE_CAM( 25, ref l_U128 );
        SET_CAM_SPLINE_DURATION( l_U128, 10000 );
        SET_CAM_SPLINE_SPEED_GRAPH( l_U128, 0 );
        SET_CAM_SPLINE_SPEED_CONSTANT( l_U128, 0 );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[0] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[1] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[2] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[3] );
        SET_CAM_ACTIVE( l_U128, 1 );
        SET_CAM_PROPAGATE( l_U128, 1 );
        break;
        case 6:
        CREATE_CAM( 14, ref l_U129[0] );
        SET_CAM_POS( l_U129[0], -392.91440000, 422.82580000, 8.09550000 );
        SET_CAM_ROT( l_U129[0], -41.06430000, -4.54680000, 36.27860000 );
        SET_CAM_FOV( l_U129[0], 35.10000000 );
        SET_CAM_ACTIVE( l_U129[0], 1 );
        CREATE_CAM( 14, ref l_U129[1] );
        SET_CAM_POS( l_U129[1], -392.65840000, 422.42140000, 8.51019900 );
        SET_CAM_ROT( l_U129[1], -41.10670000, -0.99480000, 33.18780000 );
        SET_CAM_FOV( l_U129[1], 33.90000000 );
        SET_CAM_ACTIVE( l_U129[1], 1 );
        CREATE_CAM( 14, ref l_U129[2] );
        SET_CAM_POS( l_U129[2], -392.40250000, 422.01690000, 8.92490000 );
        SET_CAM_ROT( l_U129[2], -41.14910000, 2.55720000, 30.09710000 );
        SET_CAM_FOV( l_U129[2], 32.70000000 );
        SET_CAM_ACTIVE( l_U129[2], 1 );
        CREATE_CAM( 14, ref l_U129[3] );
        SET_CAM_POS( l_U129[3], -392.14650000, 421.61250000, 9.33959900 );
        SET_CAM_ROT( l_U129[3], -41.19150000, 6.10920000, 27.00640000 );
        SET_CAM_FOV( l_U129[3], 31.50000000 );
        SET_CAM_ACTIVE( l_U129[3], 1 );
        CREATE_CAM( 25, ref l_U128 );
        SET_CAM_SPLINE_DURATION( l_U128, 10000 );
        SET_CAM_SPLINE_SPEED_GRAPH( l_U128, 0 );
        SET_CAM_SPLINE_SPEED_CONSTANT( l_U128, 0 );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[0] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[1] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[2] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[3] );
        SET_CAM_ACTIVE( l_U128, 1 );
        SET_CAM_PROPAGATE( l_U128, 1 );
        break;
        case 7:
        CREATE_CAM( 14, ref l_U129[0] );
        SET_CAM_POS( l_U129[0], -394.21500000, 422.75730000, 6.39060000 );
        SET_CAM_ROT( l_U129[0], 1.80280000, 0.00000000, -27.92640000 );
        SET_CAM_FOV( l_U129[0], 62.99990000 );
        SET_CAM_ACTIVE( l_U129[0], 1 );
        CREATE_CAM( 14, ref l_U129[1] );
        SET_CAM_POS( l_U129[1], -394.49030000, 422.70980000, 6.20620000 );
        SET_CAM_ROT( l_U129[1], 3.66820000, 0.00000000, -31.92360000 );
        SET_CAM_FOV( l_U129[1], 59.09990000 );
        SET_CAM_ACTIVE( l_U129[1], 1 );
        CREATE_CAM( 14, ref l_U129[2] );
        SET_CAM_POS( l_U129[2], -394.76560000, 422.66240000, 6.02180000 );
        SET_CAM_ROT( l_U129[2], 5.53360000, 0.00000000, -35.92090000 );
        SET_CAM_FOV( l_U129[2], 55.20000000 );
        SET_CAM_ACTIVE( l_U129[2], 1 );
        CREATE_CAM( 14, ref l_U129[3] );
        SET_CAM_POS( l_U129[3], -395.04080000, 422.61490000, 5.83750000 );
        SET_CAM_ROT( l_U129[3], 7.39900000, 0.00000000, -39.91820000 );
        SET_CAM_FOV( l_U129[3], 51.30000000 );
        SET_CAM_ACTIVE( l_U129[3], 1 );
        CREATE_CAM( 25, ref l_U128 );
        SET_CAM_SPLINE_DURATION( l_U128, 10000 );
        SET_CAM_SPLINE_SPEED_GRAPH( l_U128, 0 );
        SET_CAM_SPLINE_SPEED_CONSTANT( l_U128, 0 );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[0] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[1] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[2] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[3] );
        SET_CAM_ACTIVE( l_U128, 1 );
        SET_CAM_PROPAGATE( l_U128, 1 );
        break;
        case 8:
        CREATE_CAM( 14, ref l_U129[0] );
        SET_CAM_POS( l_U129[0], -395.04080000, 422.61490000, 5.83750000 );
        SET_CAM_ROT( l_U129[0], 7.39900000, 0.00000000, -39.91820000 );
        SET_CAM_FOV( l_U129[0], 51.30000000 );
        SET_CAM_ACTIVE( l_U129[0], 1 );
        CREATE_CAM( 14, ref l_U129[1] );
        SET_CAM_POS( l_U129[1], -395.00390000, 422.51100000, 6.81530000 );
        SET_CAM_ROT( l_U129[1], -11.49200000, 5.36620000, -43.44390000 );
        SET_CAM_FOV( l_U129[1], 51.30000000 );
        SET_CAM_ACTIVE( l_U129[1], 1 );
        CREATE_CAM( 14, ref l_U129[2] );
        SET_CAM_POS( l_U129[2], -394.96690000, 422.40710000, 7.79320000 );
        SET_CAM_ROT( l_U129[2], -30.38300000, 10.73240000, -46.96960000 );
        SET_CAM_FOV( l_U129[2], 51.30000000 );
        SET_CAM_ACTIVE( l_U129[2], 1 );
        CREATE_CAM( 14, ref l_U129[3] );
        SET_CAM_POS( l_U129[3], -394.92990000, 422.30320000, 8.77100000 );
        SET_CAM_ROT( l_U129[3], -49.27400000, 16.09860000, -50.49530000 );
        SET_CAM_FOV( l_U129[3], 51.30000000 );
        SET_CAM_ACTIVE( l_U129[3], 1 );
        CREATE_CAM( 25, ref l_U128 );
        SET_CAM_SPLINE_DURATION( l_U128, 10000 );
        SET_CAM_SPLINE_SPEED_GRAPH( l_U128, 0 );
        SET_CAM_SPLINE_SPEED_CONSTANT( l_U128, 0 );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[0] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[1] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[2] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[3] );
        SET_CAM_ACTIVE( l_U128, 1 );
        SET_CAM_PROPAGATE( l_U128, 1 );
        break;
        case 9:
        CREATE_CAM( 14, ref l_U129[0] );
        SET_CAM_POS( l_U129[0], -393.37740000, 421.53560000, 10.97270000 );
        SET_CAM_ROT( l_U129[0], -54.42460000, -1.41040000, 3.21470000 );
        SET_CAM_FOV( l_U129[0], 36.90000000 );
        SET_CAM_ACTIVE( l_U129[0], 1 );
        CREATE_CAM( 14, ref l_U129[1] );
        SET_CAM_POS( l_U129[1], -393.75120000, 421.84410000, 10.32990000 );
        SET_CAM_ROT( l_U129[1], -54.07910000, 1.90210000, -8.86920000 );
        SET_CAM_FOV( l_U129[1], 36.90000000 );
        SET_CAM_ACTIVE( l_U129[1], 1 );
        CREATE_CAM( 14, ref l_U129[2] );
        SET_CAM_POS( l_U129[2], -394.12500000, 422.15260000, 9.68710000 );
        SET_CAM_ROT( l_U129[2], -53.73360000, 5.21450000, -20.95310000 );
        SET_CAM_FOV( l_U129[2], 36.90000000 );
        SET_CAM_ACTIVE( l_U129[2], 1 );
        CREATE_CAM( 14, ref l_U129[3] );
        SET_CAM_POS( l_U129[3], -394.49890000, 422.46110000, 9.04430000 );
        SET_CAM_ROT( l_U129[3], -53.38810000, 8.52690000, -33.03700000 );
        SET_CAM_FOV( l_U129[3], 36.90000000 );
        SET_CAM_ACTIVE( l_U129[3], 1 );
        CREATE_CAM( 25, ref l_U128 );
        SET_CAM_SPLINE_DURATION( l_U128, 10000 );
        SET_CAM_SPLINE_SPEED_GRAPH( l_U128, 0 );
        SET_CAM_SPLINE_SPEED_CONSTANT( l_U128, 0 );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[0] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[1] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[2] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[3] );
        SET_CAM_ACTIVE( l_U128, 1 );
        SET_CAM_PROPAGATE( l_U128, 1 );
        break;
        case 10:
        CREATE_CAM( 14, ref l_U129[0] );
        SET_CAM_POS( l_U129[0], -392.00660000, 421.64700000, 5.81930000 );
        SET_CAM_ROT( l_U129[0], 4.85280000, 3.03130000, 30.93390000 );
        SET_CAM_FOV( l_U129[0], 33.30000000 );
        SET_CAM_ACTIVE( l_U129[0], 1 );
        CREATE_CAM( 14, ref l_U129[1] );
        SET_CAM_POS( l_U129[1], -392.00660000, 421.64700000, 5.81930000 );
        SET_CAM_ROT( l_U129[1], 4.85280000, 3.03130000, 30.93390000 );
        SET_CAM_FOV( l_U129[1], 38.50000000 );
        SET_CAM_ACTIVE( l_U129[1], 1 );
        CREATE_CAM( 14, ref l_U129[2] );
        SET_CAM_POS( l_U129[2], -392.00660000, 421.64700000, 5.81930000 );
        SET_CAM_ROT( l_U129[2], 4.85280000, 3.03130000, 30.93390000 );
        SET_CAM_FOV( l_U129[2], 43.70000000 );
        SET_CAM_ACTIVE( l_U129[2], 1 );
        CREATE_CAM( 14, ref l_U129[3] );
        SET_CAM_POS( l_U129[3], -392.00660000, 421.64700000, 5.81930000 );
        SET_CAM_ROT( l_U129[3], 4.85280000, 3.03130000, 30.93390000 );
        SET_CAM_FOV( l_U129[3], 48.90000000 );
        SET_CAM_ACTIVE( l_U129[3], 1 );
        CREATE_CAM( 25, ref l_U128 );
        SET_CAM_SPLINE_DURATION( l_U128, 10000 );
        SET_CAM_SPLINE_SPEED_GRAPH( l_U128, 0 );
        SET_CAM_SPLINE_SPEED_CONSTANT( l_U128, 0 );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[0] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[1] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[2] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[3] );
        SET_CAM_ACTIVE( l_U128, 1 );
        SET_CAM_PROPAGATE( l_U128, 1 );
        break;
        case 11:
        CREATE_CAM( 14, ref l_U129[0] );
        SET_CAM_POS( l_U129[0], -392.82680000, 422.90590000, 5.75950000 );
        SET_CAM_ROT( l_U129[0], 20.20130000, 2.85540000, 22.66360000 );
        SET_CAM_FOV( l_U129[0], 62.99990000 );
        SET_CAM_ACTIVE( l_U129[0], 1 );
        CREATE_CAM( 14, ref l_U129[1] );
        SET_CAM_POS( l_U129[1], -393.32310000, 422.94340000, 5.86610000 );
        SET_CAM_ROT( l_U129[1], 16.10150000, 2.90800000, 10.77390000 );
        SET_CAM_FOV( l_U129[1], 62.99990000 );
        SET_CAM_ACTIVE( l_U129[1], 1 );
        CREATE_CAM( 14, ref l_U129[2] );
        SET_CAM_POS( l_U129[2], -393.81930000, 422.98080000, 5.97280000 );
        SET_CAM_ROT( l_U129[2], 12.00170000, 2.96070000, -1.11570000 );
        SET_CAM_FOV( l_U129[2], 62.99990000 );
        SET_CAM_ACTIVE( l_U129[2], 1 );
        CREATE_CAM( 14, ref l_U129[3] );
        SET_CAM_POS( l_U129[3], -394.31560000, 423.01830000, 6.07940000 );
        SET_CAM_ROT( l_U129[3], 7.90190000, 3.01340000, -13.00530000 );
        SET_CAM_FOV( l_U129[3], 62.99990000 );
        SET_CAM_ACTIVE( l_U129[3], 1 );
        CREATE_CAM( 25, ref l_U128 );
        SET_CAM_SPLINE_DURATION( l_U128, 10000 );
        SET_CAM_SPLINE_SPEED_GRAPH( l_U128, 0 );
        SET_CAM_SPLINE_SPEED_CONSTANT( l_U128, 0 );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[0] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[1] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[2] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[3] );
        SET_CAM_ACTIVE( l_U128, 1 );
        SET_CAM_PROPAGATE( l_U128, 1 );
        break;
    }
    return;
}

void sub_19391()
{
    sub_6644( 7 );
    switch (l_U364)
    {
        case 0:
        CREATE_CAM( 14, ref l_U129[0] );
        SET_CAM_POS( l_U129[0], -483.05650000, 149.67220000, 8.58440000 );
        SET_CAM_ROT( l_U129[0], -21.53690000, 0.00000000, 108.79740000 );
        SET_CAM_FOV( l_U129[0], 34.20000000 );
        SET_CAM_ACTIVE( l_U129[0], 1 );
        CREATE_CAM( 14, ref l_U129[1] );
        SET_CAM_POS( l_U129[1], -481.83760000, 150.08710000, 9.09250000 );
        SET_CAM_ROT( l_U129[1], -21.53690000, 0.00000000, 108.79740000 );
        SET_CAM_FOV( l_U129[1], 34.20000000 );
        SET_CAM_ACTIVE( l_U129[1], 1 );
        CREATE_CAM( 14, ref l_U129[2] );
        SET_CAM_POS( l_U129[2], -480.61870000, 150.50200000, 9.60070100 );
        SET_CAM_ROT( l_U129[2], -21.53690000, 0.00000000, 108.79740000 );
        SET_CAM_FOV( l_U129[2], 34.20000000 );
        SET_CAM_ACTIVE( l_U129[2], 1 );
        CREATE_CAM( 14, ref l_U129[3] );
        SET_CAM_POS( l_U129[3], -479.39980000, 150.91690000, 10.10890000 );
        SET_CAM_ROT( l_U129[3], -21.53690000, 0.00000000, 108.79740000 );
        SET_CAM_FOV( l_U129[3], 34.20000000 );
        SET_CAM_ACTIVE( l_U129[3], 1 );
        CREATE_CAM( 25, ref l_U128 );
        SET_CAM_SPLINE_DURATION( l_U128, 10000 );
        SET_CAM_SPLINE_SPEED_GRAPH( l_U128, 0 );
        SET_CAM_SPLINE_SPEED_CONSTANT( l_U128, 0 );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[0] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[1] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[2] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[3] );
        SET_CAM_ACTIVE( l_U128, 1 );
        SET_CAM_PROPAGATE( l_U128, 1 );
        break;
        case 1:
        CREATE_CAM( 14, ref l_U129[0] );
        SET_CAM_POS( l_U129[0], -482.24620000, 149.30720000, 6.93560000 );
        SET_CAM_ROT( l_U129[0], 11.42190000, 0.00000000, 104.34560000 );
        SET_CAM_FOV( l_U129[0], 43.20000000 );
        SET_CAM_ACTIVE( l_U129[0], 1 );
        CREATE_CAM( 14, ref l_U129[1] );
        SET_CAM_POS( l_U129[1], -482.85460000, 149.95540000, 7.64690000 );
        SET_CAM_ROT( l_U129[1], -0.39040000, 0.00000000, 119.25070000 );
        SET_CAM_FOV( l_U129[1], 43.20000000 );
        SET_CAM_ACTIVE( l_U129[1], 1 );
        CREATE_CAM( 14, ref l_U129[2] );
        SET_CAM_POS( l_U129[2], -483.46290000, 150.60360000, 8.35820000 );
        SET_CAM_ROT( l_U129[2], -12.20260000, 0.00000000, 134.15590000 );
        SET_CAM_FOV( l_U129[2], 43.20000000 );
        SET_CAM_ACTIVE( l_U129[2], 1 );
        CREATE_CAM( 14, ref l_U129[3] );
        SET_CAM_POS( l_U129[3], -484.07130000, 151.25170000, 9.06950000 );
        SET_CAM_ROT( l_U129[3], -24.01490000, 0.00000000, 149.06110000 );
        SET_CAM_FOV( l_U129[3], 43.20000000 );
        SET_CAM_ACTIVE( l_U129[3], 1 );
        CREATE_CAM( 25, ref l_U128 );
        SET_CAM_SPLINE_DURATION( l_U128, 10000 );
        SET_CAM_SPLINE_SPEED_GRAPH( l_U128, 0 );
        SET_CAM_SPLINE_SPEED_CONSTANT( l_U128, 0 );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[0] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[1] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[2] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[3] );
        SET_CAM_ACTIVE( l_U128, 1 );
        SET_CAM_PROPAGATE( l_U128, 1 );
        break;
        case 2:
        CREATE_CAM( 14, ref l_U129[0] );
        SET_CAM_POS( l_U129[0], -483.17070000, 148.62840000, 8.15650000 );
        SET_CAM_ROT( l_U129[0], -8.95410000, 0.00000000, 91.15590000 );
        SET_CAM_FOV( l_U129[0], 34.20000000 );
        SET_CAM_ACTIVE( l_U129[0], 1 );
        CREATE_CAM( 14, ref l_U129[1] );
        SET_CAM_POS( l_U129[1], -482.26660000, 148.64670000, 8.33360000 );
        SET_CAM_ROT( l_U129[1], -9.26280000, 0.00000000, 91.15590000 );
        SET_CAM_FOV( l_U129[1], 34.20000000 );
        SET_CAM_ACTIVE( l_U129[1], 1 );
        CREATE_CAM( 14, ref l_U129[2] );
        SET_CAM_POS( l_U129[2], -481.36240000, 148.66490000, 8.51070000 );
        SET_CAM_ROT( l_U129[2], -9.57150000, 0.00000000, 91.15590000 );
        SET_CAM_FOV( l_U129[2], 34.20000000 );
        SET_CAM_ACTIVE( l_U129[2], 1 );
        CREATE_CAM( 14, ref l_U129[3] );
        SET_CAM_POS( l_U129[3], -480.45820000, 148.68320000, 8.68780100 );
        SET_CAM_ROT( l_U129[3], -9.88020000, 0.00000000, 91.15590000 );
        SET_CAM_FOV( l_U129[3], 34.20000000 );
        SET_CAM_ACTIVE( l_U129[3], 1 );
        CREATE_CAM( 25, ref l_U128 );
        SET_CAM_SPLINE_DURATION( l_U128, 10000 );
        SET_CAM_SPLINE_SPEED_GRAPH( l_U128, 0 );
        SET_CAM_SPLINE_SPEED_CONSTANT( l_U128, 0 );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[0] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[1] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[2] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[3] );
        SET_CAM_ACTIVE( l_U128, 1 );
        SET_CAM_PROPAGATE( l_U128, 1 );
        break;
        case 3:
        CREATE_CAM( 14, ref l_U129[0] );
        SET_CAM_POS( l_U129[0], -484.11850000, 150.93200000, 7.73220000 );
        SET_CAM_ROT( l_U129[0], -0.91350000, 0.00000000, 151.29530000 );
        SET_CAM_FOV( l_U129[0], 34.20000000 );
        SET_CAM_ACTIVE( l_U129[0], 1 );
        CREATE_CAM( 14, ref l_U129[1] );
        SET_CAM_POS( l_U129[1], -483.63930000, 150.77980000, 8.24320000 );
        SET_CAM_ROT( l_U129[1], -9.13430000, 0.00000000, 146.18660000 );
        SET_CAM_FOV( l_U129[1], 34.20000000 );
        SET_CAM_ACTIVE( l_U129[1], 1 );
        CREATE_CAM( 14, ref l_U129[2] );
        SET_CAM_POS( l_U129[2], -483.16020000, 150.62760000, 8.75420000 );
        SET_CAM_ROT( l_U129[2], -17.35520000, 0.00000000, 141.07790000 );
        SET_CAM_FOV( l_U129[2], 34.20000000 );
        SET_CAM_ACTIVE( l_U129[2], 1 );
        CREATE_CAM( 14, ref l_U129[3] );
        SET_CAM_POS( l_U129[3], -482.68100000, 150.47550000, 9.26520000 );
        SET_CAM_ROT( l_U129[3], -25.57600000, 0.00000000, 135.96920000 );
        SET_CAM_FOV( l_U129[3], 34.20000000 );
        SET_CAM_ACTIVE( l_U129[3], 1 );
        CREATE_CAM( 25, ref l_U128 );
        SET_CAM_SPLINE_DURATION( l_U128, 10000 );
        SET_CAM_SPLINE_SPEED_GRAPH( l_U128, 0 );
        SET_CAM_SPLINE_SPEED_CONSTANT( l_U128, 0 );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[0] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[1] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[2] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[3] );
        SET_CAM_ACTIVE( l_U128, 1 );
        SET_CAM_PROPAGATE( l_U128, 1 );
        break;
        case 4:
        CREATE_CAM( 14, ref l_U129[0] );
        SET_CAM_POS( l_U129[0], -481.23870000, 148.90660000, 9.53000000 );
        SET_CAM_ROT( l_U129[0], -26.68390000, 0.00000000, 91.06550000 );
        SET_CAM_FOV( l_U129[0], 34.20000000 );
        SET_CAM_ACTIVE( l_U129[0], 1 );
        CREATE_CAM( 14, ref l_U129[1] );
        SET_CAM_POS( l_U129[1], -481.73020000, 150.19980000, 9.45670000 );
        SET_CAM_ROT( l_U129[1], -23.78260000, 0.00000000, 109.92080000 );
        SET_CAM_FOV( l_U129[1], 34.20000000 );
        SET_CAM_ACTIVE( l_U129[1], 1 );
        CREATE_CAM( 14, ref l_U129[2] );
        SET_CAM_POS( l_U129[2], -482.22170000, 151.49300000, 9.38340000 );
        SET_CAM_ROT( l_U129[2], -20.88120000, 0.00000000, 128.77610000 );
        SET_CAM_FOV( l_U129[2], 34.20000000 );
        SET_CAM_ACTIVE( l_U129[2], 1 );
        CREATE_CAM( 14, ref l_U129[3] );
        SET_CAM_POS( l_U129[3], -482.71320000, 152.78610000, 9.31000100 );
        SET_CAM_ROT( l_U129[3], -17.97980000, 0.00000000, 147.63140000 );
        SET_CAM_FOV( l_U129[3], 34.20000000 );
        SET_CAM_ACTIVE( l_U129[3], 1 );
        CREATE_CAM( 25, ref l_U128 );
        SET_CAM_SPLINE_DURATION( l_U128, 10000 );
        SET_CAM_SPLINE_SPEED_GRAPH( l_U128, 0 );
        SET_CAM_SPLINE_SPEED_CONSTANT( l_U128, 0 );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[0] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[1] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[2] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[3] );
        SET_CAM_ACTIVE( l_U128, 1 );
        SET_CAM_PROPAGATE( l_U128, 1 );
        break;
        case 5:
        CREATE_CAM( 14, ref l_U129[0] );
        SET_CAM_POS( l_U129[0], -480.68410000, 148.63380000, 10.93670000 );
        SET_CAM_ROT( l_U129[0], -35.25570000, 0.00000000, 99.27210000 );
        SET_CAM_FOV( l_U129[0], 34.20000000 );
        SET_CAM_ACTIVE( l_U129[0], 1 );
        CREATE_CAM( 14, ref l_U129[1] );
        SET_CAM_POS( l_U129[1], -481.35400000, 150.56140000, 10.96230000 );
        SET_CAM_ROT( l_U129[1], -34.09060000, 0.00000000, 115.38740000 );
        SET_CAM_FOV( l_U129[1], 34.20000000 );
        SET_CAM_ACTIVE( l_U129[1], 1 );
        CREATE_CAM( 14, ref l_U129[2] );
        SET_CAM_POS( l_U129[2], -482.02390000, 152.48890000, 10.98800000 );
        SET_CAM_ROT( l_U129[2], -32.92550000, 0.00000000, 131.50280000 );
        SET_CAM_FOV( l_U129[2], 34.20000000 );
        SET_CAM_ACTIVE( l_U129[2], 1 );
        CREATE_CAM( 14, ref l_U129[3] );
        SET_CAM_POS( l_U129[3], -482.69380000, 154.41650000, 11.01360000 );
        SET_CAM_ROT( l_U129[3], -31.76050000, 0.00000000, 147.61810000 );
        SET_CAM_FOV( l_U129[3], 34.20000000 );
        SET_CAM_ACTIVE( l_U129[3], 1 );
        CREATE_CAM( 25, ref l_U128 );
        SET_CAM_SPLINE_DURATION( l_U128, 10000 );
        SET_CAM_SPLINE_SPEED_GRAPH( l_U128, 0 );
        SET_CAM_SPLINE_SPEED_CONSTANT( l_U128, 0 );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[0] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[1] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[2] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[3] );
        SET_CAM_ACTIVE( l_U128, 1 );
        SET_CAM_PROPAGATE( l_U128, 1 );
        break;
        case 6:
        CREATE_CAM( 14, ref l_U129[0] );
        SET_CAM_POS( l_U129[0], -482.19060000, 153.56400000, 8.52610000 );
        SET_CAM_ROT( l_U129[0], -6.89210000, 0.00000000, 145.40890000 );
        SET_CAM_FOV( l_U129[0], 25.20000000 );
        SET_CAM_ACTIVE( l_U129[0], 1 );
        CREATE_CAM( 14, ref l_U129[1] );
        SET_CAM_POS( l_U129[1], -481.85800000, 152.19250000, 8.49660000 );
        SET_CAM_ROT( l_U129[1], -7.86810000, 0.00000000, 130.15120000 );
        SET_CAM_FOV( l_U129[1], 25.20000000 );
        SET_CAM_ACTIVE( l_U129[1], 1 );
        CREATE_CAM( 14, ref l_U129[2] );
        SET_CAM_POS( l_U129[2], -481.52540000, 150.82090000, 8.46710000 );
        SET_CAM_ROT( l_U129[2], -8.84410000, 0.00000000, 114.89360000 );
        SET_CAM_FOV( l_U129[2], 25.20000000 );
        SET_CAM_ACTIVE( l_U129[2], 1 );
        CREATE_CAM( 14, ref l_U129[3] );
        SET_CAM_POS( l_U129[3], -481.19280000, 149.44930000, 8.43770000 );
        SET_CAM_ROT( l_U129[3], -9.82010000, 0.00000000, 99.63590000 );
        SET_CAM_FOV( l_U129[3], 25.20000000 );
        SET_CAM_ACTIVE( l_U129[3], 1 );
        CREATE_CAM( 25, ref l_U128 );
        SET_CAM_SPLINE_DURATION( l_U128, 10000 );
        SET_CAM_SPLINE_SPEED_GRAPH( l_U128, 0 );
        SET_CAM_SPLINE_SPEED_CONSTANT( l_U128, 0 );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[0] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[1] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[2] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[3] );
        SET_CAM_ACTIVE( l_U128, 1 );
        SET_CAM_PROPAGATE( l_U128, 1 );
        break;
    }
    return;
}

void sub_23923()
{
    switch (g_U30190)
    {
        case 2:
        sub_23968();
        break;
        case 0:
        sub_29617();
        break;
        case 1:
        sub_34665();
        break;
    }
    return;
}

void sub_23968()
{
    sub_6644( 9 );
    switch (l_U364)
    {
        case 0:
        CREATE_CAM( 14, ref l_U129[0] );
        SET_CAM_POS( l_U129[0], -426.77420000, 350.90440000, 12.83040000 );
        SET_CAM_ROT( l_U129[0], -16.27710000, 0.00000000, 55.72580000 );
        SET_CAM_FOV( l_U129[0], 38.40000000 );
        SET_CAM_ACTIVE( l_U129[0], 1 );
        CREATE_CAM( 14, ref l_U129[1] );
        SET_CAM_POS( l_U129[1], -427.14440000, 351.91410000, 12.40690000 );
        SET_CAM_ROT( l_U129[1], -7.99120000, 0.00000000, 78.64260000 );
        SET_CAM_FOV( l_U129[1], 38.40000000 );
        SET_CAM_ACTIVE( l_U129[1], 1 );
        CREATE_CAM( 14, ref l_U129[2] );
        SET_CAM_POS( l_U129[2], -427.51470000, 352.92380000, 11.98340000 );
        SET_CAM_ROT( l_U129[2], 0.29470000, 0.00000000, 101.55950000 );
        SET_CAM_FOV( l_U129[2], 38.40000000 );
        SET_CAM_ACTIVE( l_U129[2], 1 );
        CREATE_CAM( 14, ref l_U129[3] );
        SET_CAM_POS( l_U129[3], -427.88490000, 353.93350000, 11.55990000 );
        SET_CAM_ROT( l_U129[3], 8.58049900, 0.00000000, 124.47630000 );
        SET_CAM_FOV( l_U129[3], 38.40000000 );
        SET_CAM_ACTIVE( l_U129[3], 1 );
        CREATE_CAM( 25, ref l_U128 );
        SET_CAM_SPLINE_DURATION( l_U128, 10000 );
        SET_CAM_SPLINE_SPEED_GRAPH( l_U128, 0 );
        SET_CAM_SPLINE_SPEED_CONSTANT( l_U128, 0 );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[0] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[1] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[2] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[3] );
        SET_CAM_ACTIVE( l_U128, 1 );
        SET_CAM_PROPAGATE( l_U128, 1 );
        break;
        case 1:
        CREATE_CAM( 14, ref l_U129[0] );
        SET_CAM_POS( l_U129[0], -426.77140000, 354.27980000, 12.75600000 );
        SET_CAM_ROT( l_U129[0], -11.31160000, 0.00000000, 108.56290000 );
        SET_CAM_FOV( l_U129[0], 44.70000000 );
        SET_CAM_ACTIVE( l_U129[0], 1 );
        CREATE_CAM( 14, ref l_U129[1] );
        SET_CAM_POS( l_U129[1], -426.90750000, 353.20670000, 12.78400000 );
        SET_CAM_ROT( l_U129[1], -14.63800000, 0.00000000, 87.67221000 );
        SET_CAM_FOV( l_U129[1], 44.70000000 );
        SET_CAM_ACTIVE( l_U129[1], 1 );
        CREATE_CAM( 14, ref l_U129[2] );
        SET_CAM_POS( l_U129[2], -427.04360000, 352.13350000, 12.81200000 );
        SET_CAM_ROT( l_U129[2], -17.96440000, 0.00000000, 66.78140000 );
        SET_CAM_FOV( l_U129[2], 44.70000000 );
        SET_CAM_ACTIVE( l_U129[2], 1 );
        CREATE_CAM( 14, ref l_U129[3] );
        SET_CAM_POS( l_U129[3], -427.17970000, 351.06040000, 12.83990000 );
        SET_CAM_ROT( l_U129[3], -21.29080000, 0.00000000, 45.89060000 );
        SET_CAM_FOV( l_U129[3], 44.70000000 );
        SET_CAM_ACTIVE( l_U129[3], 1 );
        CREATE_CAM( 25, ref l_U128 );
        SET_CAM_SPLINE_DURATION( l_U128, 10000 );
        SET_CAM_SPLINE_SPEED_GRAPH( l_U128, 0 );
        SET_CAM_SPLINE_SPEED_CONSTANT( l_U128, 0 );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[0] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[1] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[2] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[3] );
        SET_CAM_ACTIVE( l_U128, 1 );
        SET_CAM_PROPAGATE( l_U128, 1 );
        break;
        case 2:
        CREATE_CAM( 14, ref l_U129[0] );
        SET_CAM_POS( l_U129[0], -426.77140000, 354.27980000, 12.75600000 );
        SET_CAM_ROT( l_U129[0], -11.31160000, 0.00000000, 108.56290000 );
        SET_CAM_FOV( l_U129[0], 44.70000000 );
        SET_CAM_ACTIVE( l_U129[0], 1 );
        CREATE_CAM( 14, ref l_U129[1] );
        SET_CAM_POS( l_U129[1], -426.90750000, 353.20670000, 12.78400000 );
        SET_CAM_ROT( l_U129[1], -14.63800000, 0.00000000, 87.67221000 );
        SET_CAM_FOV( l_U129[1], 44.70000000 );
        SET_CAM_ACTIVE( l_U129[1], 1 );
        CREATE_CAM( 14, ref l_U129[2] );
        SET_CAM_POS( l_U129[2], -427.04360000, 352.13350000, 12.81200000 );
        SET_CAM_ROT( l_U129[2], -17.96440000, 0.00000000, 66.78140000 );
        SET_CAM_FOV( l_U129[2], 44.70000000 );
        SET_CAM_ACTIVE( l_U129[2], 1 );
        CREATE_CAM( 14, ref l_U129[3] );
        SET_CAM_POS( l_U129[3], -427.17970000, 351.06040000, 12.83990000 );
        SET_CAM_ROT( l_U129[3], -21.29080000, 0.00000000, 45.89060000 );
        SET_CAM_FOV( l_U129[3], 44.70000000 );
        SET_CAM_ACTIVE( l_U129[3], 1 );
        CREATE_CAM( 25, ref l_U128 );
        SET_CAM_SPLINE_DURATION( l_U128, 10000 );
        SET_CAM_SPLINE_SPEED_GRAPH( l_U128, 0 );
        SET_CAM_SPLINE_SPEED_CONSTANT( l_U128, 0 );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[0] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[1] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[2] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[3] );
        SET_CAM_ACTIVE( l_U128, 1 );
        SET_CAM_PROPAGATE( l_U128, 1 );
        break;
        case 3:
        CREATE_CAM( 14, ref l_U129[0] );
        SET_CAM_POS( l_U129[0], -427.62180000, 353.76780000, 12.17200000 );
        SET_CAM_ROT( l_U129[0], -5.42730000, 0.00000000, 112.20260000 );
        SET_CAM_FOV( l_U129[0], 40.50000000 );
        SET_CAM_ACTIVE( l_U129[0], 1 );
        CREATE_CAM( 14, ref l_U129[1] );
        SET_CAM_POS( l_U129[1], -427.70790000, 352.92350000, 12.16220000 );
        SET_CAM_ROT( l_U129[1], -6.51310000, 0.00000000, 90.58430000 );
        SET_CAM_FOV( l_U129[1], 40.50000000 );
        SET_CAM_ACTIVE( l_U129[1], 1 );
        CREATE_CAM( 14, ref l_U129[2] );
        SET_CAM_POS( l_U129[2], -427.79400000, 352.07920000, 12.15250000 );
        SET_CAM_ROT( l_U129[2], -7.59900000, 0.00000000, 68.96590000 );
        SET_CAM_FOV( l_U129[2], 40.50000000 );
        SET_CAM_ACTIVE( l_U129[2], 1 );
        CREATE_CAM( 14, ref l_U129[3] );
        SET_CAM_POS( l_U129[3], -427.88010000, 351.23480000, 12.14270000 );
        SET_CAM_ROT( l_U129[3], -8.68480000, 0.00000000, 47.34750000 );
        SET_CAM_FOV( l_U129[3], 40.50000000 );
        SET_CAM_ACTIVE( l_U129[3], 1 );
        CREATE_CAM( 25, ref l_U128 );
        SET_CAM_SPLINE_DURATION( l_U128, 10000 );
        SET_CAM_SPLINE_SPEED_GRAPH( l_U128, 0 );
        SET_CAM_SPLINE_SPEED_CONSTANT( l_U128, 0 );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[0] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[1] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[2] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[3] );
        SET_CAM_ACTIVE( l_U128, 1 );
        SET_CAM_PROPAGATE( l_U128, 1 );
        break;
        case 4:
        CREATE_CAM( 14, ref l_U129[0] );
        SET_CAM_POS( l_U129[0], -425.85840000, 354.22860000, 12.93160000 );
        SET_CAM_ROT( l_U129[0], -12.45460000, 0.00000000, 106.23410000 );
        SET_CAM_FOV( l_U129[0], 36.85960000 );
        SET_CAM_ACTIVE( l_U129[0], 1 );
        CREATE_CAM( 14, ref l_U129[1] );
        SET_CAM_POS( l_U129[1], -426.50290000, 354.04090000, 12.78340000 );
        SET_CAM_ROT( l_U129[1], -13.15360000, 0.00000000, 111.37690000 );
        SET_CAM_FOV( l_U129[1], 36.85960000 );
        SET_CAM_ACTIVE( l_U129[1], 1 );
        CREATE_CAM( 14, ref l_U129[2] );
        SET_CAM_POS( l_U129[2], -427.14740000, 353.85320000, 12.63510000 );
        SET_CAM_ROT( l_U129[2], -13.85270000, 0.00000000, 116.51980000 );
        SET_CAM_FOV( l_U129[2], 36.85960000 );
        SET_CAM_ACTIVE( l_U129[2], 1 );
        CREATE_CAM( 14, ref l_U129[3] );
        SET_CAM_POS( l_U129[3], -427.79190000, 353.66560000, 12.48680000 );
        SET_CAM_ROT( l_U129[3], -14.55170000, 0.00000000, 121.66260000 );
        SET_CAM_FOV( l_U129[3], 36.85960000 );
        SET_CAM_ACTIVE( l_U129[3], 1 );
        CREATE_CAM( 25, ref l_U128 );
        SET_CAM_SPLINE_DURATION( l_U128, 10000 );
        SET_CAM_SPLINE_SPEED_GRAPH( l_U128, 0 );
        SET_CAM_SPLINE_SPEED_CONSTANT( l_U128, 0 );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[0] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[1] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[2] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[3] );
        SET_CAM_ACTIVE( l_U128, 1 );
        SET_CAM_PROPAGATE( l_U128, 1 );
        break;
        case 5:
        CREATE_CAM( 14, ref l_U129[0] );
        SET_CAM_POS( l_U129[0], -427.62410000, 353.32950000, 11.64960000 );
        SET_CAM_ROT( l_U129[0], 8.06040000, 0.00000000, 94.40400000 );
        SET_CAM_FOV( l_U129[0], 45.90000000 );
        SET_CAM_ACTIVE( l_U129[0], 1 );
        CREATE_CAM( 14, ref l_U129[1] );
        SET_CAM_POS( l_U129[1], -427.84220000, 352.77050000, 12.03620000 );
        SET_CAM_ROT( l_U129[1], -3.74250000, 0.00000000, 76.94790000 );
        SET_CAM_FOV( l_U129[1], 44.60000000 );
        SET_CAM_ACTIVE( l_U129[1], 1 );
        CREATE_CAM( 14, ref l_U129[2] );
        SET_CAM_POS( l_U129[2], -428.06030000, 352.21150000, 12.42280000 );
        SET_CAM_ROT( l_U129[2], -15.54540000, 0.00000000, 59.49180000 );
        SET_CAM_FOV( l_U129[2], 43.30000000 );
        SET_CAM_ACTIVE( l_U129[2], 1 );
        CREATE_CAM( 14, ref l_U129[3] );
        SET_CAM_POS( l_U129[3], -428.27850000, 351.65240000, 12.80940000 );
        SET_CAM_ROT( l_U129[3], -27.34840000, 0.00000000, 42.03570000 );
        SET_CAM_FOV( l_U129[3], 42.00000000 );
        SET_CAM_ACTIVE( l_U129[3], 1 );
        CREATE_CAM( 25, ref l_U128 );
        SET_CAM_SPLINE_DURATION( l_U128, 10000 );
        SET_CAM_SPLINE_SPEED_GRAPH( l_U128, 0 );
        SET_CAM_SPLINE_SPEED_CONSTANT( l_U128, 0 );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[3] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[2] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[1] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[0] );
        SET_CAM_ACTIVE( l_U128, 1 );
        SET_CAM_PROPAGATE( l_U128, 1 );
        break;
        case 6:
        CREATE_CAM( 14, ref l_U129[0] );
        SET_CAM_POS( l_U129[0], -427.29560000, 355.95520000, 11.84200000 );
        SET_CAM_ROT( l_U129[0], 1.76460000, 0.00000000, 139.26350000 );
        SET_CAM_FOV( l_U129[0], 35.65960000 );
        SET_CAM_ACTIVE( l_U129[0], 1 );
        CREATE_CAM( 14, ref l_U129[1] );
        SET_CAM_POS( l_U129[1], -427.42700000, 355.42140000, 11.95290000 );
        SET_CAM_ROT( l_U129[1], 0.15740000, 0.00000000, 137.46270000 );
        SET_CAM_FOV( l_U129[1], 36.05960000 );
        SET_CAM_ACTIVE( l_U129[1], 1 );
        CREATE_CAM( 14, ref l_U129[2] );
        SET_CAM_POS( l_U129[2], -427.55830000, 354.88750000, 12.06370000 );
        SET_CAM_ROT( l_U129[2], -1.44980000, 0.00000000, 135.66200000 );
        SET_CAM_FOV( l_U129[2], 36.45960000 );
        SET_CAM_ACTIVE( l_U129[2], 1 );
        CREATE_CAM( 14, ref l_U129[3] );
        SET_CAM_POS( l_U129[3], -427.68970000, 354.35370000, 12.17460000 );
        SET_CAM_ROT( l_U129[3], -3.05710000, 0.00000000, 133.86130000 );
        SET_CAM_FOV( l_U129[3], 36.85960000 );
        SET_CAM_ACTIVE( l_U129[3], 1 );
        CREATE_CAM( 25, ref l_U128 );
        SET_CAM_SPLINE_DURATION( l_U128, 10000 );
        SET_CAM_SPLINE_SPEED_GRAPH( l_U128, 0 );
        SET_CAM_SPLINE_SPEED_CONSTANT( l_U128, 0 );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[0] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[1] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[2] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[3] );
        SET_CAM_ACTIVE( l_U128, 1 );
        SET_CAM_PROPAGATE( l_U128, 1 );
        break;
        case 7:
        CREATE_CAM( 14, ref l_U129[0] );
        SET_CAM_POS( l_U129[0], -427.92870000, 353.87300000, 10.89440000 );
        SET_CAM_ROT( l_U129[0], 26.10190000, 0.00000000, 118.75970000 );
        SET_CAM_FOV( l_U129[0], 45.55960000 );
        SET_CAM_ACTIVE( l_U129[0], 1 );
        CREATE_CAM( 14, ref l_U129[1] );
        SET_CAM_POS( l_U129[1], -428.03530000, 354.07180000, 11.45050000 );
        SET_CAM_ROT( l_U129[1], 10.88990000, 0.00000000, 126.71910000 );
        SET_CAM_FOV( l_U129[1], 43.85960000 );
        SET_CAM_ACTIVE( l_U129[1], 1 );
        CREATE_CAM( 14, ref l_U129[2] );
        SET_CAM_POS( l_U129[2], -428.14200000, 354.27050000, 12.00660000 );
        SET_CAM_ROT( l_U129[2], -4.32210000, 0.00000000, 134.67860000 );
        SET_CAM_FOV( l_U129[2], 42.15960000 );
        SET_CAM_ACTIVE( l_U129[2], 1 );
        CREATE_CAM( 14, ref l_U129[3] );
        SET_CAM_POS( l_U129[3], -428.24860000, 354.46930000, 12.56270000 );
        SET_CAM_ROT( l_U129[3], -19.53410000, 0.00000000, 142.63800000 );
        SET_CAM_FOV( l_U129[3], 40.45960000 );
        SET_CAM_ACTIVE( l_U129[3], 1 );
        CREATE_CAM( 25, ref l_U128 );
        SET_CAM_SPLINE_DURATION( l_U128, 10000 );
        SET_CAM_SPLINE_SPEED_GRAPH( l_U128, 0 );
        SET_CAM_SPLINE_SPEED_CONSTANT( l_U128, 0 );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[0] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[1] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[2] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[3] );
        SET_CAM_ACTIVE( l_U128, 1 );
        SET_CAM_PROPAGATE( l_U128, 1 );
        break;
        case 8:
        CREATE_CAM( 14, ref l_U129[0] );
        SET_CAM_POS( l_U129[0], -427.82480000, 351.63950000, 13.58240000 );
        SET_CAM_ROT( l_U129[0], -34.22480000, 11.70880000, 55.46920000 );
        SET_CAM_FOV( l_U129[0], 40.50000000 );
        SET_CAM_ACTIVE( l_U129[0], 1 );
        CREATE_CAM( 14, ref l_U129[1] );
        SET_CAM_POS( l_U129[1], -427.92340000, 352.68300000, 13.15590000 );
        SET_CAM_ROT( l_U129[1], -26.17580000, 10.25420000, 86.04680000 );
        SET_CAM_FOV( l_U129[1], 40.50000000 );
        SET_CAM_ACTIVE( l_U129[1], 1 );
        CREATE_CAM( 14, ref l_U129[2] );
        SET_CAM_POS( l_U129[2], -428.02210000, 353.72650000, 12.72940000 );
        SET_CAM_ROT( l_U129[2], -18.12690000, 8.79970000, 116.62450000 );
        SET_CAM_FOV( l_U129[2], 40.50000000 );
        SET_CAM_ACTIVE( l_U129[2], 1 );
        CREATE_CAM( 14, ref l_U129[3] );
        SET_CAM_POS( l_U129[3], -428.12070000, 354.77000000, 12.30290000 );
        SET_CAM_ROT( l_U129[3], -10.07790000, 7.34510000, 147.20210000 );
        SET_CAM_FOV( l_U129[3], 40.50000000 );
        SET_CAM_ACTIVE( l_U129[3], 1 );
        CREATE_CAM( 25, ref l_U128 );
        SET_CAM_SPLINE_DURATION( l_U128, 10000 );
        SET_CAM_SPLINE_SPEED_GRAPH( l_U128, 0 );
        SET_CAM_SPLINE_SPEED_CONSTANT( l_U128, 0 );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[0] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[1] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[2] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[3] );
        SET_CAM_ACTIVE( l_U128, 1 );
        SET_CAM_PROPAGATE( l_U128, 1 );
        break;
    }
    return;
}

void sub_29617()
{
    sub_6644( 8 );
    switch (l_U364)
    {
        case 0:
        CREATE_CAM( 14, ref l_U129[0] );
        SET_CAM_POS( l_U129[0], -392.52460000, 427.27320000, 7.51030000 );
        SET_CAM_ROT( l_U129[0], -17.65110000, 0.00000000, 162.48190000 );
        SET_CAM_FOV( l_U129[0], 31.56540000 );
        SET_CAM_ACTIVE( l_U129[0], 1 );
        CREATE_CAM( 14, ref l_U129[1] );
        SET_CAM_POS( l_U129[1], -393.21810000, 427.55870000, 7.31870000 );
        SET_CAM_ROT( l_U129[1], -13.85700000, 0.00000000, 174.28970000 );
        SET_CAM_FOV( l_U129[1], 31.56540000 );
        SET_CAM_ACTIVE( l_U129[1], 1 );
        CREATE_CAM( 14, ref l_U129[2] );
        SET_CAM_POS( l_U129[2], -393.91160000, 427.84420000, 7.12720000 );
        SET_CAM_ROT( l_U129[2], -10.06280000, 0.00000000, 186.09750000 );
        SET_CAM_FOV( l_U129[2], 31.56540000 );
        SET_CAM_ACTIVE( l_U129[2], 1 );
        CREATE_CAM( 14, ref l_U129[3] );
        SET_CAM_POS( l_U129[3], -394.60510000, 428.12970000, 6.93560000 );
        SET_CAM_ROT( l_U129[3], -6.26860000, 0.00000000, -162.09460000 );
        SET_CAM_FOV( l_U129[3], 31.56540000 );
        SET_CAM_ACTIVE( l_U129[3], 1 );
        CREATE_CAM( 25, ref l_U128 );
        SET_CAM_SPLINE_DURATION( l_U128, 10000 );
        SET_CAM_SPLINE_SPEED_GRAPH( l_U128, 0 );
        SET_CAM_SPLINE_SPEED_CONSTANT( l_U128, 0 );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[0] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[1] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[2] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[3] );
        SET_CAM_ACTIVE( l_U128, 1 );
        SET_CAM_PROPAGATE( l_U128, 1 );
        break;
        case 1:
        CREATE_CAM( 14, ref l_U129[0] );
        SET_CAM_POS( l_U129[0], -394.70230000, 427.43240000, 6.67290000 );
        SET_CAM_ROT( l_U129[0], -6.26860000, 0.00000000, -162.09460000 );
        SET_CAM_FOV( l_U129[0], 31.56540000 );
        SET_CAM_ACTIVE( l_U129[0], 1 );
        CREATE_CAM( 14, ref l_U129[1] );
        SET_CAM_POS( l_U129[1], -394.90410000, 428.05680000, 6.74500000 );
        SET_CAM_ROT( l_U129[1], -6.26860000, 0.00000000, -162.09460000 );
        SET_CAM_FOV( l_U129[1], 31.56540000 );
        SET_CAM_ACTIVE( l_U129[1], 1 );
        CREATE_CAM( 14, ref l_U129[2] );
        SET_CAM_POS( l_U129[2], -395.10580000, 428.68110000, 6.81710000 );
        SET_CAM_ROT( l_U129[2], -6.26860000, 0.00000000, -162.09460000 );
        SET_CAM_FOV( l_U129[2], 31.56540000 );
        SET_CAM_ACTIVE( l_U129[2], 1 );
        CREATE_CAM( 14, ref l_U129[3] );
        SET_CAM_POS( l_U129[3], -395.30750000, 429.30540000, 6.88910000 );
        SET_CAM_ROT( l_U129[3], -6.26860000, 0.00000000, -162.09460000 );
        SET_CAM_FOV( l_U129[3], 31.56540000 );
        SET_CAM_ACTIVE( l_U129[3], 1 );
        CREATE_CAM( 25, ref l_U128 );
        SET_CAM_SPLINE_DURATION( l_U128, 10000 );
        SET_CAM_SPLINE_SPEED_GRAPH( l_U128, 0 );
        SET_CAM_SPLINE_SPEED_CONSTANT( l_U128, 0 );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[0] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[1] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[2] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[3] );
        SET_CAM_ACTIVE( l_U128, 1 );
        SET_CAM_PROPAGATE( l_U128, 1 );
        break;
        case 2:
        CREATE_CAM( 14, ref l_U129[0] );
        SET_CAM_POS( l_U129[0], -392.05360000, 426.35270000, 6.36160000 );
        SET_CAM_ROT( l_U129[0], 3.37470000, 0.00000000, 141.64220000 );
        SET_CAM_FOV( l_U129[0], 42.14650000 );
        SET_CAM_ACTIVE( l_U129[0], 1 );
        CREATE_CAM( 14, ref l_U129[1] );
        SET_CAM_POS( l_U129[1], -391.84030000, 426.51490000, 6.34630000 );
        SET_CAM_ROT( l_U129[1], 3.48930000, 0.00000000, 141.64220000 );
        SET_CAM_FOV( l_U129[1], 42.14650000 );
        SET_CAM_ACTIVE( l_U129[1], 1 );
        CREATE_CAM( 14, ref l_U129[2] );
        SET_CAM_POS( l_U129[2], -391.62700000, 426.67700000, 6.33100000 );
        SET_CAM_ROT( l_U129[2], 3.60390000, 0.00000000, 141.64220000 );
        SET_CAM_FOV( l_U129[2], 42.14650000 );
        SET_CAM_ACTIVE( l_U129[2], 1 );
        CREATE_CAM( 14, ref l_U129[3] );
        SET_CAM_POS( l_U129[3], -391.41360000, 426.83910000, 6.31570000 );
        SET_CAM_ROT( l_U129[3], 3.71850000, 0.00000000, 141.64220000 );
        SET_CAM_FOV( l_U129[3], 42.14650000 );
        SET_CAM_ACTIVE( l_U129[3], 1 );
        CREATE_CAM( 25, ref l_U128 );
        SET_CAM_SPLINE_DURATION( l_U128, 10000 );
        SET_CAM_SPLINE_SPEED_GRAPH( l_U128, 0 );
        SET_CAM_SPLINE_SPEED_CONSTANT( l_U128, 0 );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[0] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[1] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[2] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[3] );
        SET_CAM_ACTIVE( l_U128, 1 );
        SET_CAM_PROPAGATE( l_U128, 1 );
        break;
        case 3:
        CREATE_CAM( 14, ref l_U129[0] );
        SET_CAM_POS( l_U129[0], -394.76410000, 426.14040000, 6.52880000 );
        SET_CAM_ROT( l_U129[0], -4.36310000, 0.00000000, -142.43290000 );
        SET_CAM_FOV( l_U129[0], 42.14650000 );
        SET_CAM_ACTIVE( l_U129[0], 1 );
        CREATE_CAM( 14, ref l_U129[1] );
        SET_CAM_POS( l_U129[1], -394.53820000, 426.29200000, 6.50570000 );
        SET_CAM_ROT( l_U129[1], -5.27980000, 0.00000000, -150.07230000 );
        SET_CAM_FOV( l_U129[1], 41.34650000 );
        SET_CAM_ACTIVE( l_U129[1], 1 );
        CREATE_CAM( 14, ref l_U129[2] );
        SET_CAM_POS( l_U129[2], -394.31230000, 426.44360000, 6.48250000 );
        SET_CAM_ROT( l_U129[2], -6.19660000, 0.00000000, -157.71170000 );
        SET_CAM_FOV( l_U129[2], 40.54650000 );
        SET_CAM_ACTIVE( l_U129[2], 1 );
        CREATE_CAM( 14, ref l_U129[3] );
        SET_CAM_POS( l_U129[3], -394.08650000, 426.59520000, 6.45940000 );
        SET_CAM_ROT( l_U129[3], -7.11330000, 0.00000000, -165.35110000 );
        SET_CAM_FOV( l_U129[3], 39.74650000 );
        SET_CAM_ACTIVE( l_U129[3], 1 );
        CREATE_CAM( 25, ref l_U128 );
        SET_CAM_SPLINE_DURATION( l_U128, 10000 );
        SET_CAM_SPLINE_SPEED_GRAPH( l_U128, 0 );
        SET_CAM_SPLINE_SPEED_CONSTANT( l_U128, 0 );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[0] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[1] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[2] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[3] );
        SET_CAM_ACTIVE( l_U128, 1 );
        SET_CAM_PROPAGATE( l_U128, 1 );
        break;
        case 4:
        CREATE_CAM( 14, ref l_U129[0] );
        SET_CAM_POS( l_U129[0], -395.22200000, 429.76430000, 8.24710000 );
        SET_CAM_ROT( l_U129[0], -18.76550000, 0.00000000, -162.54210000 );
        SET_CAM_FOV( l_U129[0], 37.64650000 );
        SET_CAM_ACTIVE( l_U129[0], 1 );
        CREATE_CAM( 14, ref l_U129[1] );
        SET_CAM_POS( l_U129[1], -393.88890000, 428.91890000, 8.16740100 );
        SET_CAM_ROT( l_U129[1], -20.16720000, 0.00000000, -180.58010000 );
        SET_CAM_FOV( l_U129[1], 37.64650000 );
        SET_CAM_ACTIVE( l_U129[1], 1 );
        CREATE_CAM( 14, ref l_U129[2] );
        SET_CAM_POS( l_U129[2], -392.55570000, 428.07360000, 8.08780000 );
        SET_CAM_ROT( l_U129[2], -21.56890000, 0.00000000, -198.61810000 );
        SET_CAM_FOV( l_U129[2], 37.64650000 );
        SET_CAM_ACTIVE( l_U129[2], 1 );
        CREATE_CAM( 14, ref l_U129[3] );
        SET_CAM_POS( l_U129[3], -391.22250000, 427.22830000, 8.00810000 );
        SET_CAM_ROT( l_U129[3], -22.97060000, 0.00000000, 143.34390000 );
        SET_CAM_FOV( l_U129[3], 37.64650000 );
        SET_CAM_ACTIVE( l_U129[3], 1 );
        CREATE_CAM( 25, ref l_U128 );
        SET_CAM_SPLINE_DURATION( l_U128, 10000 );
        SET_CAM_SPLINE_SPEED_GRAPH( l_U128, 0 );
        SET_CAM_SPLINE_SPEED_CONSTANT( l_U128, 0 );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[0] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[1] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[2] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[3] );
        SET_CAM_ACTIVE( l_U128, 1 );
        SET_CAM_PROPAGATE( l_U128, 1 );
        break;
        case 5:
        CREATE_CAM( 14, ref l_U129[0] );
        SET_CAM_POS( l_U129[0], -390.99160000, 428.43310000, 8.70810000 );
        SET_CAM_ROT( l_U129[0], -26.77480000, 0.00000000, 146.12280000 );
        SET_CAM_FOV( l_U129[0], 37.64650000 );
        SET_CAM_ACTIVE( l_U129[0], 1 );
        CREATE_CAM( 14, ref l_U129[1] );
        SET_CAM_POS( l_U129[1], -391.46260000, 427.73130000, 8.28170000 );
        SET_CAM_ROT( l_U129[1], -26.91510000, 3.23570000, 144.47230000 );
        SET_CAM_FOV( l_U129[1], 35.64650000 );
        SET_CAM_ACTIVE( l_U129[1], 1 );
        CREATE_CAM( 14, ref l_U129[2] );
        SET_CAM_POS( l_U129[2], -391.93360000, 427.02950000, 7.85520000 );
        SET_CAM_ROT( l_U129[2], -27.05530000, 6.47130000, 142.82180000 );
        SET_CAM_FOV( l_U129[2], 33.64650000 );
        SET_CAM_ACTIVE( l_U129[2], 1 );
        CREATE_CAM( 14, ref l_U129[3] );
        SET_CAM_POS( l_U129[3], -392.40460000, 426.32780000, 7.42880000 );
        SET_CAM_ROT( l_U129[3], -27.19550000, 9.70700000, 141.17130000 );
        SET_CAM_FOV( l_U129[3], 31.64650000 );
        SET_CAM_ACTIVE( l_U129[3], 1 );
        CREATE_CAM( 25, ref l_U128 );
        SET_CAM_SPLINE_DURATION( l_U128, 10000 );
        SET_CAM_SPLINE_SPEED_GRAPH( l_U128, 0 );
        SET_CAM_SPLINE_SPEED_CONSTANT( l_U128, 0 );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[0] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[1] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[2] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[3] );
        SET_CAM_ACTIVE( l_U128, 1 );
        SET_CAM_PROPAGATE( l_U128, 1 );
        break;
        case 6:
        CREATE_CAM( 14, ref l_U129[0] );
        SET_CAM_POS( l_U129[0], -393.18910000, 426.84850000, 11.71250000 );
        SET_CAM_ROT( l_U129[0], -67.81880000, -9.86270000, -173.25960000 );
        SET_CAM_FOV( l_U129[0], 33.66060000 );
        SET_CAM_ACTIVE( l_U129[0], 1 );
        CREATE_CAM( 14, ref l_U129[1] );
        SET_CAM_POS( l_U129[1], -393.27300000, 426.55690000, 11.03640000 );
        SET_CAM_ROT( l_U129[1], -68.95200000, -1.40770000, -193.57770000 );
        SET_CAM_FOV( l_U129[1], 33.66060000 );
        SET_CAM_ACTIVE( l_U129[1], 1 );
        CREATE_CAM( 14, ref l_U129[2] );
        SET_CAM_POS( l_U129[2], -393.35690000, 426.26520000, 10.36040000 );
        SET_CAM_ROT( l_U129[2], -70.08530000, 7.04730000, -213.89580000 );
        SET_CAM_FOV( l_U129[2], 33.66060000 );
        SET_CAM_ACTIVE( l_U129[2], 1 );
        CREATE_CAM( 14, ref l_U129[3] );
        SET_CAM_POS( l_U129[3], -393.44080000, 425.97360000, 9.68430100 );
        SET_CAM_ROT( l_U129[3], -71.21849000, 15.50240000, 125.78620000 );
        SET_CAM_FOV( l_U129[3], 33.66060000 );
        SET_CAM_ACTIVE( l_U129[3], 1 );
        CREATE_CAM( 25, ref l_U128 );
        SET_CAM_SPLINE_DURATION( l_U128, 10000 );
        SET_CAM_SPLINE_SPEED_GRAPH( l_U128, 0 );
        SET_CAM_SPLINE_SPEED_CONSTANT( l_U128, 0 );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[0] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[1] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[2] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[3] );
        SET_CAM_ACTIVE( l_U128, 1 );
        SET_CAM_PROPAGATE( l_U128, 1 );
        break;
        case 7:
        CREATE_CAM( 14, ref l_U129[0] );
        SET_CAM_POS( l_U129[0], -397.88880000, 428.76210000, 7.94220000 );
        SET_CAM_ROT( l_U129[0], -10.10250000, 32.13420000, -133.98910000 );
        SET_CAM_FOV( l_U129[0], 32.76060000 );
        SET_CAM_ACTIVE( l_U129[0], 1 );
        CREATE_CAM( 14, ref l_U129[1] );
        SET_CAM_POS( l_U129[1], -396.42160000, 428.45320000, 8.03450000 );
        SET_CAM_ROT( l_U129[1], -18.97300000, 31.93260000, -156.95280000 );
        SET_CAM_FOV( l_U129[1], 32.76060000 );
        SET_CAM_ACTIVE( l_U129[1], 1 );
        CREATE_CAM( 14, ref l_U129[2] );
        SET_CAM_POS( l_U129[2], -394.95440000, 428.14430000, 8.12680000 );
        SET_CAM_ROT( l_U129[2], -27.84350000, 31.73110000, -179.91640000 );
        SET_CAM_FOV( l_U129[2], 32.76060000 );
        SET_CAM_ACTIVE( l_U129[2], 1 );
        CREATE_CAM( 14, ref l_U129[3] );
        SET_CAM_POS( l_U129[3], -393.48720000, 427.83540000, 8.21910000 );
        SET_CAM_ROT( l_U129[3], -36.71390000, 31.52950000, 157.11990000 );
        SET_CAM_FOV( l_U129[3], 32.76060000 );
        SET_CAM_ACTIVE( l_U129[3], 1 );
        CREATE_CAM( 25, ref l_U128 );
        SET_CAM_SPLINE_DURATION( l_U128, 10000 );
        SET_CAM_SPLINE_SPEED_GRAPH( l_U128, 0 );
        SET_CAM_SPLINE_SPEED_CONSTANT( l_U128, 0 );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[0] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[1] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[2] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[3] );
        SET_CAM_ACTIVE( l_U128, 1 );
        SET_CAM_PROPAGATE( l_U128, 1 );
        break;
    }
    return;
}

void sub_34665()
{
    sub_6644( 4 );
    switch (l_U364)
    {
        case 0:
        CREATE_CAM( 14, ref l_U129[0] );
        SET_CAM_POS( l_U129[0], -486.81840000, 146.96480000, 7.68250000 );
        SET_CAM_ROT( l_U129[0], 1.91490000, 0.00000000, -27.89330000 );
        SET_CAM_FOV( l_U129[0], 45.00000000 );
        SET_CAM_ACTIVE( l_U129[0], 1 );
        CREATE_CAM( 14, ref l_U129[1] );
        SET_CAM_POS( l_U129[1], -487.09690000, 146.43850000, 7.66260000 );
        SET_CAM_ROT( l_U129[1], 1.91490000, 0.00000000, -27.89330000 );
        SET_CAM_FOV( l_U129[1], 45.00000000 );
        SET_CAM_ACTIVE( l_U129[1], 1 );
        CREATE_CAM( 14, ref l_U129[2] );
        SET_CAM_POS( l_U129[2], -487.37550000, 145.91220000, 7.64270100 );
        SET_CAM_ROT( l_U129[2], 1.91490000, 0.00000000, -27.89330000 );
        SET_CAM_FOV( l_U129[2], 45.00000000 );
        SET_CAM_ACTIVE( l_U129[2], 1 );
        CREATE_CAM( 14, ref l_U129[3] );
        SET_CAM_POS( l_U129[3], -487.65410000, 145.38590000, 7.62270000 );
        SET_CAM_ROT( l_U129[3], 1.91490000, 0.00000000, -27.89330000 );
        SET_CAM_FOV( l_U129[3], 45.00000000 );
        SET_CAM_ACTIVE( l_U129[3], 1 );
        CREATE_CAM( 25, ref l_U128 );
        SET_CAM_SPLINE_DURATION( l_U128, 10000 );
        SET_CAM_SPLINE_SPEED_GRAPH( l_U128, 0 );
        SET_CAM_SPLINE_SPEED_CONSTANT( l_U128, 0 );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[0] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[1] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[2] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[3] );
        SET_CAM_ACTIVE( l_U128, 1 );
        SET_CAM_PROPAGATE( l_U128, 1 );
        break;
        case 1:
        CREATE_CAM( 14, ref l_U129[0] );
        SET_CAM_POS( l_U129[0], -486.72600000, 146.29010000, 8.32210000 );
        SET_CAM_ROT( l_U129[0], -20.53220000, 0.00000000, -24.88620000 );
        SET_CAM_FOV( l_U129[0], 45.00000000 );
        SET_CAM_ACTIVE( l_U129[0], 1 );
        CREATE_CAM( 14, ref l_U129[1] );
        SET_CAM_POS( l_U129[1], -487.68030000, 146.71710000, 8.32210000 );
        SET_CAM_ROT( l_U129[1], -16.96550000, 0.00000000, -44.45010000 );
        SET_CAM_FOV( l_U129[1], 45.00000000 );
        SET_CAM_ACTIVE( l_U129[1], 1 );
        CREATE_CAM( 14, ref l_U129[2] );
        SET_CAM_POS( l_U129[2], -488.63470000, 147.14410000, 8.32210000 );
        SET_CAM_ROT( l_U129[2], -13.39880000, 0.00000000, -64.01400000 );
        SET_CAM_FOV( l_U129[2], 45.00000000 );
        SET_CAM_ACTIVE( l_U129[2], 1 );
        CREATE_CAM( 14, ref l_U129[3] );
        SET_CAM_POS( l_U129[3], -489.58900000, 147.57120000, 8.32210000 );
        SET_CAM_ROT( l_U129[3], -9.83210000, 0.00000000, -83.57780000 );
        SET_CAM_FOV( l_U129[3], 45.00000000 );
        SET_CAM_ACTIVE( l_U129[3], 1 );
        CREATE_CAM( 25, ref l_U128 );
        SET_CAM_SPLINE_DURATION( l_U128, 10000 );
        SET_CAM_SPLINE_SPEED_GRAPH( l_U128, 0 );
        SET_CAM_SPLINE_SPEED_CONSTANT( l_U128, 0 );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[0] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[1] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[2] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[3] );
        SET_CAM_ACTIVE( l_U128, 1 );
        SET_CAM_PROPAGATE( l_U128, 1 );
        break;
        case 2:
        CREATE_CAM( 14, ref l_U129[0] );
        SET_CAM_POS( l_U129[0], -487.68890000, 145.21280000, 9.56680000 );
        SET_CAM_ROT( l_U129[0], -26.20830000, 0.00000000, -31.99310000 );
        SET_CAM_FOV( l_U129[0], 44.40000000 );
        SET_CAM_ACTIVE( l_U129[0], 1 );
        CREATE_CAM( 14, ref l_U129[1] );
        SET_CAM_POS( l_U129[1], -487.42470000, 145.56380000, 9.35350000 );
        SET_CAM_ROT( l_U129[1], -26.31390000, 0.00000000, -29.21040000 );
        SET_CAM_FOV( l_U129[1], 44.40000000 );
        SET_CAM_ACTIVE( l_U129[1], 1 );
        CREATE_CAM( 14, ref l_U129[2] );
        SET_CAM_POS( l_U129[2], -487.16050000, 145.91470000, 9.14020000 );
        SET_CAM_ROT( l_U129[2], -26.41960000, 0.00000000, -26.42760000 );
        SET_CAM_FOV( l_U129[2], 44.40000000 );
        SET_CAM_ACTIVE( l_U129[2], 1 );
        CREATE_CAM( 14, ref l_U129[3] );
        SET_CAM_POS( l_U129[3], -486.89620000, 146.26560000, 8.92690000 );
        SET_CAM_ROT( l_U129[3], -26.52530000, 0.00000000, -23.64490000 );
        SET_CAM_FOV( l_U129[3], 44.40000000 );
        SET_CAM_ACTIVE( l_U129[3], 1 );
        CREATE_CAM( 25, ref l_U128 );
        SET_CAM_SPLINE_DURATION( l_U128, 10000 );
        SET_CAM_SPLINE_SPEED_GRAPH( l_U128, 0 );
        SET_CAM_SPLINE_SPEED_CONSTANT( l_U128, 0 );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[0] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[1] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[2] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[3] );
        SET_CAM_ACTIVE( l_U128, 1 );
        SET_CAM_PROPAGATE( l_U128, 1 );
        break;
        case 3:
        CREATE_CAM( 14, ref l_U129[0] );
        SET_CAM_POS( l_U129[0], -487.60680000, 146.25900000, 8.35210100 );
        SET_CAM_ROT( l_U129[0], -13.06590000, 0.00000000, -30.56720000 );
        SET_CAM_FOV( l_U129[0], 43.50000000 );
        SET_CAM_ACTIVE( l_U129[0], 1 );
        CREATE_CAM( 14, ref l_U129[1] );
        SET_CAM_POS( l_U129[1], -487.28910000, 146.45600000, 8.27520000 );
        SET_CAM_ROT( l_U129[1], -12.22560000, 0.00000000, -25.56330000 );
        SET_CAM_FOV( l_U129[1], 43.50000000 );
        SET_CAM_ACTIVE( l_U129[1], 1 );
        CREATE_CAM( 14, ref l_U129[2] );
        SET_CAM_POS( l_U129[2], -486.97140000, 146.65310000, 8.19840000 );
        SET_CAM_ROT( l_U129[2], -11.38520000, 0.00000000, -20.55950000 );
        SET_CAM_FOV( l_U129[2], 43.50000000 );
        SET_CAM_ACTIVE( l_U129[2], 1 );
        CREATE_CAM( 14, ref l_U129[3] );
        SET_CAM_POS( l_U129[3], -486.65370000, 146.85010000, 8.12150000 );
        SET_CAM_ROT( l_U129[3], -10.54490000, 0.00000000, -15.55570000 );
        SET_CAM_FOV( l_U129[3], 43.50000000 );
        SET_CAM_ACTIVE( l_U129[3], 1 );
        CREATE_CAM( 25, ref l_U128 );
        SET_CAM_SPLINE_DURATION( l_U128, 10000 );
        SET_CAM_SPLINE_SPEED_GRAPH( l_U128, 0 );
        SET_CAM_SPLINE_SPEED_CONSTANT( l_U128, 0 );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[0] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[1] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[2] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[3] );
        SET_CAM_ACTIVE( l_U128, 1 );
        SET_CAM_PROPAGATE( l_U128, 1 );
        break;
    }
    return;
}

void sub_38081(unknown uParam0)
{
    ACTIVATE_SCRIPTED_CAMS( 1, 1 );
    CREATE_CAM( 14, ref l_U129[0] );
    if (NOT (IS_CHAR_DEAD( uParam0 )))
    {
        ATTACH_CAM_TO_PED( l_U129[0], uParam0 );
        SET_CAM_ATTACH_OFFSET( l_U129[0], 1.33730000, 0.88980000, 0.71740000 );
        SET_CAM_ATTACH_OFFSET_IS_RELATIVE( l_U129[0], 1 );
    }
    if (NOT (IS_CHAR_DEAD( uParam0 )))
    {
        ATTACH_CAM_TO_PED( l_U129[0], uParam0 );
        POINT_CAM_AT_PED( l_U129[0], uParam0 );
        SET_CAM_POINT_OFFSET( l_U129[0], 0.47550000, 0.42290000, 0.51920000 );
        SET_CAM_POINT_OFFSET_IS_RELATIVE( l_U129[0], 1 );
    }
    SET_CAM_FOV( l_U129[0], 35.10000000 );
    SET_CAM_ACTIVE( l_U129[0], 1 );
    CREATE_CAM( 14, ref l_U129[1] );
    if (NOT (IS_CHAR_DEAD( uParam0 )))
    {
        ATTACH_CAM_TO_PED( l_U129[1], uParam0 );
        SET_CAM_ATTACH_OFFSET( l_U129[1], -0.63930000, 2.12900000, 1.06120000 );
        SET_CAM_ATTACH_OFFSET_IS_RELATIVE( l_U129[1], 1 );
    }
    if (NOT (IS_CHAR_DEAD( uParam0 )))
    {
        ATTACH_CAM_TO_PED( l_U129[1], uParam0 );
        POINT_CAM_AT_PED( l_U129[1], uParam0 );
        SET_CAM_POINT_OFFSET( l_U129[1], -0.32670000, 1.22920000, 0.75680000 );
        SET_CAM_POINT_OFFSET_IS_RELATIVE( l_U129[1], 1 );
    }
    SET_CAM_FOV( l_U129[1], 35.10000000 );
    SET_CAM_ACTIVE( l_U129[1], 1 );
    CREATE_CAM( 14, ref l_U129[2] );
    if (NOT (IS_CHAR_DEAD( uParam0 )))
    {
        ATTACH_CAM_TO_PED( l_U129[2], uParam0 );
        SET_CAM_ATTACH_OFFSET( l_U129[2], -2.63330000, 0.38350000, 1.07320000 );
        SET_CAM_ATTACH_OFFSET_IS_RELATIVE( l_U129[2], 1 );
    }
    if (NOT (IS_CHAR_DEAD( uParam0 )))
    {
        ATTACH_CAM_TO_PED( l_U129[2], uParam0 );
        POINT_CAM_AT_PED( l_U129[2], uParam0 );
        SET_CAM_POINT_OFFSET( l_U129[2], -1.68880000, 0.34620000, 0.74670000 );
        SET_CAM_POINT_OFFSET_IS_RELATIVE( l_U129[2], 1 );
    }
    SET_CAM_FOV( l_U129[2], 35.10000000 );
    SET_CAM_ACTIVE( l_U129[2], 1 );
    CREATE_CAM( 14, ref l_U129[3] );
    if (NOT (IS_CHAR_DEAD( uParam0 )))
    {
        ATTACH_CAM_TO_PED( l_U129[3], uParam0 );
        SET_CAM_ATTACH_OFFSET( l_U129[3], -2.10860000, -2.66880000, 1.71740000 );
        SET_CAM_ATTACH_OFFSET_IS_RELATIVE( l_U129[3], 1 );
    }
    if (NOT (IS_CHAR_DEAD( uParam0 )))
    {
        ATTACH_CAM_TO_PED( l_U129[3], uParam0 );
        POINT_CAM_AT_PED( l_U129[3], uParam0 );
        SET_CAM_POINT_OFFSET( l_U129[3], -1.58600000, -1.93390000, 1.28520000 );
        SET_CAM_POINT_OFFSET_IS_RELATIVE( l_U129[3], 1 );
    }
    SET_CAM_FOV( l_U129[3], 35.10000000 );
    SET_CAM_ACTIVE( l_U129[3], 1 );
    CREATE_CAM( 25, ref l_U128 );
    SET_CAM_SPLINE_DURATION( l_U128, 12000 );
    SET_CAM_SPLINE_SPEED_GRAPH( l_U128, 0 );
    SET_CAM_SPLINE_SPEED_CONSTANT( l_U128, 0 );
    ADD_CAM_SPLINE_NODE( l_U128, l_U129[0] );
    ADD_CAM_SPLINE_NODE( l_U128, l_U129[1] );
    ADD_CAM_SPLINE_NODE( l_U128, l_U129[2] );
    ADD_CAM_SPLINE_NODE( l_U128, l_U129[3] );
    SET_CAM_ACTIVE( l_U128, 1 );
    SET_CAM_PROPAGATE( l_U128, 1 );
    return;
}

void sub_41233()
{
    unknown uVar2;
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;

    if ((NOT l_U5) AND ((NOT (l_U254 == 5)) AND (g_U30196 > 20)))
    {
        l_U255 = 0;
        l_U254 = 5;
    }
    switch (l_U254)
    {
        case 0:
        sub_41372();
        switch (l_U255)
        {
            case 0:
            PRINTSTRING( "STATE_DANCING_START - Started" );
            PRINTNL();
            SET_PLAYER_CONTROL( sub_1530(), 0 );
            g_U2792 = 1;
            if (DOES_CHAR_EXIST( g_U30207 ))
            {
                if (IS_CHAR_INJURED( g_U30207 ))
                {
                    g_U30207 = nil;
                }
            }
            if (NOT (g_U30190 == 0))
            {
                SAY_AMBIENT_SPEECH( sub_1661(), "DANCING_GAME_YES", 1, 1, 2 );
            }
            if (NOT (DOES_CHAR_EXIST( g_U30207 )))
            {
                switch (g_U30190)
                {
                    case 1:
                    CREATE_CHAR( 5, g_U30220, -486.56000000, 147.28020000, 6.75330000, ref g_U30207, 1 );
                    SET_CHAR_HEADING( g_U30207, 359.00000000 );
                    SET_ROOM_FOR_CHAR_BY_NAME( g_U30207, "E2_MaisonRoommain" );
                    break;
                    case 2:
                    CREATE_CHAR( 5, g_U30225, -428.33090000, 352.75670000, 10.71170000, ref g_U30207, 1 );
                    SET_CHAR_HEADING( g_U30207, 101.80000000 );
                    SET_ROOM_FOR_CHAR_BY_NAME( g_U30207, "Room_Bar" );
                    break;
                    case 0:
                    CREATE_CHAR( 5, g_U30216, -393.97600000, 425.97700000, 5.16940000, ref g_U30207, 1 );
                    SET_CHAR_HEADING( g_U30207, 180.00000000 );
                    SET_ROOM_FOR_CHAR_BY_NAME( g_U30207, "gaydanceflr" );
                    break;
                }
                l_U80 = 1;
            }
            if (NOT (IS_CHAR_INJURED( g_U30207 )))
            {
                CLEAR_CHAR_TASKS_IMMEDIATELY( g_U30207 );
            }
            if (l_U96)
            {
                SET_CHAR_COLLISION( sub_1661(), 0 );
                FREEZE_CHAR_POSITION( sub_1661(), 1 );
                if (NOT (IS_CHAR_INJURED( g_U30207 )))
                {
                    SET_CHAR_COLLISION( g_U30207, 0 );
                    FREEZE_CHAR_POSITION( g_U30207, 1 );
                }
            }
            l_U90 = 0;
            l_U81 = 0;
            l_U66 = 0;
            l_U67 = 0;
            l_U71 = 0;
            l_U87 = 1;
            l_U119 = 1;
            l_U3 = 1;
            l_U105 = 1;
            l_U114 = 1;
            l_U431 = sub_43217( 0, 0, 0 );
            l_U436 = sub_43217( 0, 1, 0 );
            l_U432 = sub_43217( 0, 0, 1 );
            l_U437 = sub_43217( 0, 1, 1 );
            sub_44347();
            sub_2524( 1 );
            l_U255++;
            SETTIMERA( 0 );
            break;
            case 1:
            sub_44635( 7 );
            l_U255++;
            break;
            case 2:
            sub_44755( 0 );
            if (NOT (IS_CHAR_INJURED( g_U30207 )))
            {
                sub_2029();
            }
            l_U255++;
            break;
            case 3:
            sub_45056();
            sub_48567();
            if (NOT (IS_THIS_HELP_MESSAGE_BEING_DISPLAYED( "DANC_H10a" )))
            {
                PRINT_HELP_FOREVER( "DANC_H10a" );
            }
            if (NOT l_U3)
            {
                if (sub_46944( 0, 15 ))
                {
                    SETTIMERA( 0 );
                    l_U3 = 1;
                    l_U114 = 0;
                    l_U255++;
                }
                else if (NOT l_U119)
                {
                    if (sub_46944( 0, 16 ))
                    {
                        l_U255 = 99;
                    }
                    else if (NOT l_U1)
                    {
                        if (((IS_CONTROL_JUST_PRESSED( 2, 23 )) AND (NOT IS_USING_CONTROLLER())) || (IS_BUTTON_JUST_PRESSED( 0, 4 )))
                        {
                            sub_1635();
                        }
                    }
                    else if (((NOT (IS_CONTROL_JUST_PRESSED( 2, 23 ))) || (IS_USING_CONTROLLER())) AND (NOT (IS_BUTTON_JUST_PRESSED( 0, 4 ))))
                    {
                        l_U1 = 0;
                    };;;
                }
                else if (NOT (sub_46944( 0, 16 )))
                {
                    l_U119 = 0;
                };;;
            }
            else if (NOT (sub_46944( 0, 15 )))
            {
                l_U3 = 0;
            }
            break;
            case 4:
            sub_45056();
            sub_48567();
            sub_49329( 0 );
            if (NOT (IS_THIS_HELP_MESSAGE_BEING_DISPLAYED( "DANC_H10b" )))
            {
                PRINT_HELP_FOREVER( "DANC_H10b" );
            }
            if (NOT l_U3)
            {
                if (sub_46944( 0, 15 ))
                {
                    l_U3 = 1;
                    l_U106 = 1;
                    SETTIMERB( 0 );
                    l_U361 = l_U299;
                    l_U255++;
                }
                else if (sub_46944( 0, 16 ))
                {
                    l_U255 = 99;
                }
                else if (NOT l_U1)
                {
                    if (((IS_CONTROL_JUST_PRESSED( 2, 23 )) AND (NOT IS_USING_CONTROLLER())) || (IS_BUTTON_JUST_PRESSED( 0, 4 )))
                    {
                        sub_1635();
                    }
                }
                else if (((NOT (IS_CONTROL_JUST_PRESSED( 2, 23 ))) || (IS_USING_CONTROLLER())) AND (NOT (IS_BUTTON_JUST_PRESSED( 0, 4 ))))
                {
                    l_U1 = 0;
                };;;;
            }
            else if (NOT (sub_46944( 0, 15 )))
            {
                l_U3 = 0;
            }
            break;
            case 5:
            sub_45056();
            sub_48567();
            sub_49329( 0 );
            if (NOT (IS_THIS_HELP_MESSAGE_BEING_DISPLAYED( "DANC_H10c" )))
            {
                PRINT_HELP_FOREVER( "DANC_H10c" );
            }
            if (NOT l_U107)
            {
                if (TIMERB() > 4000)
                {
                    l_U107 = 1;
                }
            }
            if (NOT l_U3)
            {
                if (sub_46944( 0, 15 ))
                {
                    l_U3 = 1;
                    l_U107 = 1;
                    l_U108 = 1;
                    if (l_U103)
                    {
                        l_U255++;
                    }
                    else
                    {
                        l_U255 += 2;
                    }
                }
                else if (sub_46944( 0, 16 ))
                {
                    l_U255 = 99;
                }
                else if (NOT l_U1)
                {
                    if (((IS_CONTROL_JUST_PRESSED( 2, 23 )) AND (NOT IS_USING_CONTROLLER())) || (IS_BUTTON_JUST_PRESSED( 0, 4 )))
                    {
                        sub_1635();
                    }
                }
                else if (((NOT (IS_CONTROL_JUST_PRESSED( 2, 23 ))) || (IS_USING_CONTROLLER())) AND (NOT (IS_BUTTON_JUST_PRESSED( 0, 4 ))))
                {
                    l_U1 = 0;
                };;;;
            }
            else if (NOT (sub_46944( 0, 15 )))
            {
                l_U3 = 0;
            }
            break;
            case 6:
            sub_45056();
            sub_48567();
            sub_49329( 0 );
            if (NOT (IS_THIS_HELP_MESSAGE_BEING_DISPLAYED( "DANC_H10d" )))
            {
                PRINT_HELP_FOREVER( "DANC_H10d" );
            }
            if (NOT l_U107)
            {
                if (TIMERB() > 4000)
                {
                    l_U107 = 1;
                }
            }
            if (NOT l_U3)
            {
                if (sub_46944( 0, 15 ))
                {
                    l_U3 = 1;
                    l_U255++;
                }
                else if (sub_46944( 0, 16 ))
                {
                    l_U255 = 99;
                }
                else if (NOT l_U1)
                {
                    if (((IS_CONTROL_JUST_PRESSED( 2, 23 )) AND (NOT IS_USING_CONTROLLER())) || (IS_BUTTON_JUST_PRESSED( 0, 4 )))
                    {
                        sub_1635();
                    }
                }
                else if (((NOT (IS_CONTROL_JUST_PRESSED( 2, 23 ))) || (IS_USING_CONTROLLER())) AND (NOT (IS_BUTTON_JUST_PRESSED( 0, 4 ))))
                {
                    l_U1 = 0;
                };;;;
            }
            else if (NOT (sub_46944( 0, 15 )))
            {
                l_U3 = 0;
            }
            break;
            case 7:
            sub_45056();
            sub_48567();
            sub_49329( 0 );
            if (NOT (IS_THIS_HELP_MESSAGE_BEING_DISPLAYED( "DANC_H10e" )))
            {
                PRINT_HELP_FOREVER( "DANC_H10e" );
            }
            l_U66 = 1;
            if (sub_46944( 0, 16 ))
            {
                l_U255 = 99;
            }
            else if (NOT l_U1)
            {
                if (((IS_CONTROL_JUST_PRESSED( 2, 23 )) AND (NOT IS_USING_CONTROLLER())) || (IS_BUTTON_JUST_PRESSED( 0, 4 )))
                {
                    sub_1635();
                }
            }
            else if (((NOT (IS_CONTROL_JUST_PRESSED( 2, 23 ))) || (IS_USING_CONTROLLER())) AND (NOT (IS_BUTTON_JUST_PRESSED( 0, 4 ))))
            {
                l_U1 = 0;
            };;;
            break;
            case 99:
            if (NOT (IS_CHAR_INJURED( g_U30207 )))
            {
                SAY_AMBIENT_SPEECH( g_U30207, "DANCING_GAME_START ", 1, 1, 2 );
            }
            CLEAR_HELP();
            sub_49329( 0 );
            sub_55845( 0 );
            l_U299 = 0;
            l_U66 = 0;
            l_U255 = 0;
            l_U254 = 1;
            l_U303 = 0;
            l_U304 = 0;
            l_U375 = 0;
            l_U253 = 0.00000000;
            break;
        }
        sub_56113( 0, 0 );
        break;
        case 1:
        sub_41372();
        sub_45056();
        sub_48567();
        sub_49329( 0 );
        sub_85096();
        sub_85367();
        if (l_U154 < l_U168)
        {
            l_U264 = 0;
        }
        switch (l_U255)
        {
            case 0:
            if (IS_SCREEN_FADED_OUT())
            {
                if (NOT (IS_CHAR_VISIBLE( sub_1661() )))
                {
                    SET_CHAR_VISIBLE( sub_1661(), 1 );
                }
                DO_SCREEN_FADE_IN( 500 );
                while (NOT IS_SCREEN_FADED_IN())
                {
                    HIDE_HUD_AND_RADAR_THIS_FRAME();
                    sub_56113( 0, 0 );
                    WAIT( 0 );
                }
            }
            if (l_U96)
            {
                SET_CHAR_COLLISION( sub_1661(), 0 );
                FREEZE_CHAR_POSITION( sub_1661(), 1 );
                if (NOT (IS_CHAR_INJURED( g_U30207 )))
                {
                    SET_CHAR_COLLISION( g_U30207, 0 );
                    FREEZE_CHAR_POSITION( g_U30207, 1 );
                }
            }
            l_U90 = 0;
            l_U81 = 0;
            l_U66 = 0;
            l_U67 = 0;
            l_U71 = 0;
            l_U87 = 1;
            l_U105 = 0;
            l_U106 = 0;
            l_U107 = 0;
            l_U108 = 0;
            l_U86 = 0;
            l_U92 = 0;
            l_U88 = 0;
            l_U431 = sub_43217( 0, 0, 0 );
            l_U436 = sub_43217( 0, 1, 0 );
            l_U432 = sub_43217( 0, 0, 1 );
            l_U437 = sub_43217( 0, 1, 1 );
            sub_44347();
            if (NOT (IS_CHAR_INJURED( sub_1661() )))
            {
                TASK_PLAY_ANIM_FACIAL( sub_1661(), "facial_dance_idle", sub_56124( 0 ), 4.00000000, 1, 0, -1 );
            }
            if (l_U101)
            {
                if (NOT (IS_CHAR_INJURED( g_U29971[g_U30203]._fU12 )))
                {
                    sub_2968( g_U30203, 1 );
                    CLEAR_CHAR_TASKS_IMMEDIATELY( g_U29971[g_U30203]._fU12 );
                }
            }
            if (l_U101)
            {
                if (NOT (IS_CHAR_INJURED( g_U29971[g_U30203]._fU12 )))
                {
                    GET_SCRIPT_TASK_STATUS( g_U29971[g_U30203]._fU12, 131, ref l_U410 );
                    if (l_U410 == 7)
                    {
                        TASK_PLAY_ANIM_WITH_FLAGS_AND_START_PHASE( g_U29971[g_U30203]._fU12, "alpha_dance_loop", "missdanceoff", 1000.00000000, -1, 2048, 0.00000000 );
                    }
                }
            }
            l_U255++;
            break;
            case 1:
            sub_44635( 1 );
            l_U255++;
            break;
            case 2:
            sub_44755( 0 );
            if (NOT (IS_CHAR_INJURED( g_U30207 )))
            {
                sub_2029();
            }
            if (l_U101)
            {
                if (NOT (IS_CHAR_INJURED( g_U29971[g_U30203]._fU12 )))
                {
                    SET_CHAR_COORDINATES( g_U29971[g_U30203]._fU12, l_U465._fU0, l_U465._fU4, l_U465._fU8 );
                    SET_CHAR_HEADING( g_U29971[g_U30203]._fU12, l_U246 );
                    l_U118 = 1;
                }
            }
            l_U255++;
            break;
            case 3:
            if (l_U101)
            {
                if (NOT (IS_CHAR_INJURED( g_U29971[g_U30203]._fU12 )))
                {
                    GET_SCRIPT_TASK_STATUS( g_U29971[g_U30203]._fU12, 131, ref l_U410 );
                    if (l_U410 == 7)
                    {
                        TASK_PLAY_ANIM_WITH_FLAGS_AND_START_PHASE( g_U29971[g_U30203]._fU12, "frustration_loop", "missdanceoff", 1000.00000000, -1, 2064, 0.00000000 );
                    }
                }
            }
            l_U265 += l_U261;
            if (NOT g_U30105)
            {
                if (NOT l_U1)
                {
                    if (NOT l_U71)
                    {
                        if (((IS_CONTROL_JUST_PRESSED( 2, 23 )) AND (NOT IS_USING_CONTROLLER())) || (IS_BUTTON_JUST_PRESSED( 0, 4 )))
                        {
                            if (NOT (g_U30190 == 0))
                            {
                                sub_1635();
                            }
                        }
                    }
                }
                else if (((NOT (IS_CONTROL_JUST_PRESSED( 2, 23 ))) || (IS_USING_CONTROLLER())) AND (NOT (IS_BUTTON_JUST_PRESSED( 0, 4 ))))
                {
                    l_U1 = 0;
                }
            }
            if (NOT l_U4)
            {
                if (l_U86)
                {
                    l_U254 = 6;
                    l_U255 = 0;
                }
                else if (NOT l_U95)
                {
                    if (l_U303 > 10)
                    {
                        l_U254 = 6;
                        l_U255 = 0;
                    }
                }
                else if (l_U303 > 10)
                {
                    l_U254 = 7;
                    l_U255 = 0;
                };;;
            }
            break;
        }
        sub_56113( 0, 0 );
        if ((IS_KEYBOARD_KEY_JUST_PRESSED( 36 )) || (((l_U116) AND (l_U299 > l_U361)) || ((NOT l_U116) AND (l_U299 >= 66))))
        {
            if ((NOT l_U109) AND (l_U101))
            {
                DO_SCREEN_FADE_OUT( 500 );
                while (NOT IS_SCREEN_FADED_OUT())
                {
                    HIDE_HUD_AND_RADAR_THIS_FRAME();
                    sub_41372();
                    sub_56113( 0, 0 );
                    WAIT( 0 );
                }
                l_U255 = 0;
                g_U30207 = g_U30206;
                sub_55845( 1 );
                l_U254 = 10;
                LOAD_ADDITIONAL_TEXT( "BUSSTOP", 3 );
                CLEAR_HELP();
                l_U591 = g_U29971[g_U30203]._fU12;
                l_U592 = g_U30207;
                l_U593 = sub_1661();
            }
            else
            {
                l_U255 = 0;
                g_U30207 = g_U30206;
                sub_55845( 1 );
                l_U254 = 2;
            }
        }
        break;
        case 2:
        sub_41372();
        switch (l_U255)
        {
            case 0:
            PRINTSTRING( "STATE_DANCING_PARTNER_TRANSITION - Started" );
            PRINTNL();
            CLEAR_HELP();
            CLEAR_CHAR_TASKS_IMMEDIATELY( sub_1661() );
            if (NOT (IS_CHAR_INJURED( g_U30207 )))
            {
                TASK_PLAY_ANIM_NON_INTERRUPTABLE( g_U30207, "paired_trans_girl", sub_56124( 1 ), 1000.00000000, 0, 0, 0, 0, -1 );
                TASK_PLAY_ANIM_NON_INTERRUPTABLE( sub_1661(), "paired_trans_player", sub_56124( 1 ), 1000.00000000, 0, 0, 0, 0, -1 );
            }
            if (NOT (IS_CHAR_INJURED( g_U30207 )))
            {
                TASK_PLAY_ANIM_FACIAL( g_U30207, "FACIAL_DANCE_PASS_F", sub_56124( 1 ), 4.00000000, 0, 0, -1 );
            }
            TASK_PLAY_ANIM_FACIAL( sub_1661(), "FACIAL_DANCE_PASS_F", sub_56124( 1 ), 4.00000000, 0, 0, -1 );
            SETTIMERA( 0 );
            l_U255++;
            break;
            case 1:
            sub_44635( 3 );
            l_U255++;
            break;
            case 2:
            GET_CHAR_COORDINATES( sub_1661(), ref l_U462._fU0, ref l_U462._fU4, ref l_U462._fU8 );
            GET_CHAR_HEADING( sub_1661(), ref l_U181 );
            l_U462._fU8 += -1.00000000;
            if (NOT (IS_CHAR_INJURED( g_U30207 )))
            {
                SET_CHAR_COORDINATES( g_U30207, l_U462._fU0, l_U462._fU4, l_U462._fU8 );
                SET_CHAR_HEADING( g_U30207, l_U181 );
            }
            GENERATE_RANDOM_INT_IN_RANGE( 0, 2, ref iVar3 );
            if (iVar3 == 0)
            {
                if (IS_PLAYER_PLAYING( sub_1530() ))
                {
                    SAY_AMBIENT_SPEECH( sub_1661(), "DANCING_GAME_LUIS_GRINDING", 1, 1, 2 );
                }
            }
            else if (NOT (IS_CHAR_INJURED( g_U30207 )))
            {
                SAY_AMBIENT_SPEECH( g_U30207, "DANCING_GAME_SPECIAL", 1, 1, 2 );
            }
            l_U255++;
            break;
            case 3:
            if ((IS_KEYBOARD_KEY_JUST_PRESSED( 36 )) || (TIMERA() > 4000))
            {
                l_U254 = 3;
                l_U255 = 0;
            }
            break;
        }
        break;
        case 10:
        l_U109 = 1;
        switch (l_U255)
        {
            case 0:
            sub_44635( 1 );
            WAIT( 2000 );
            REQUEST_ANIMS( l_U590 );
            if (NOT (HAVE_ANIMS_LOADED( l_U590 )))
            {
                while (NOT (HAVE_ANIMS_LOADED( l_U590 )))
                {
                    PRINTSTRING( "loading sDanceBattleSet anim dict" );
                    PRINTNL();
                    WAIT( 0 );
                }
            }
            if (NOT (IS_CHAR_INJURED( sub_1661() )))
            {
                SET_CHAR_COORDINATES( sub_1661(), l_U465._fU0, l_U465._fU4, l_U465._fU8 );
                SET_CHAR_HEADING( sub_1661(), l_U246 );
                TASK_PLAY_ANIM_WITH_FLAGS_AND_START_PHASE( sub_1661(), "luis_stage_exit", "missdanceoff", 1000.00000000, -1, 2080, 0.00000000 );
            }
            if (NOT (IS_CHAR_INJURED( g_U30207 )))
            {
                SET_CHAR_COORDINATES( g_U30207, l_U465._fU0, l_U465._fU4, l_U465._fU8 );
                SET_CHAR_HEADING( g_U30207, l_U246 );
                TASK_PLAY_ANIM_WITH_FLAGS_AND_START_PHASE( g_U30207, "female_stage_exit", "missdanceoff", 1000.00000000, -1, 2080, 0.00000000 );
            }
            if (NOT (IS_CHAR_INJURED( g_U29971[g_U30203]._fU12 )))
            {
                TASK_PLAY_ANIM_WITH_FLAGS_AND_START_PHASE( g_U29971[g_U30203]._fU12, "alpha_stage_exit", "missdanceoff", 1000.00000000, -1, 2080, 0.00000000 );
            }
            l_U255++;
            break;
            case 1:
            if ((NOT (IS_CHAR_DEAD( l_U593 ))) AND (NOT (IS_CHAR_DEAD( l_U591 ))))
            {
                sub_88452();
            }
            else
            {
                SCRIPT_ASSERT( "PLAYER OR ALPHA BECAME DEAD DURING DANCE, DEATH ON THE DANCE FLOOR!" );
            }
            break;
        }
        break;
        case 3:
        sub_41372();
        sub_45056();
        sub_48567();
        sub_49329( 1 );
        sub_85096();
        sub_85367();
        if (l_U154 < l_U168)
        {
            l_U264 = 0;
        }
        switch (l_U255)
        {
            case 0:
            l_U81 = 0;
            l_U87 = 1;
            l_U90 = 1;
            l_U66 = 0;
            sub_55845( 1 );
            sub_44347();
            if (NOT (IS_CHAR_INJURED( sub_1661() )))
            {
                TASK_PLAY_ANIM_FACIAL( sub_1661(), "facial_dance_idle", sub_56124( 0 ), 4.00000000, 1, 0, -1 );
            }
            SETTIMERA( 0 );
            l_U265 = 0;
            l_U302 = 0;
            l_U86 = 0;
            l_U255++;
            break;
            case 1:
            sub_44635( 4 );
            l_U255++;
            break;
            case 2:
            sub_44755( 1 );
            GET_CHAR_COORDINATES( sub_1661(), ref l_U462._fU0, ref l_U462._fU4, ref l_U462._fU8 );
            GET_CHAR_HEADING( sub_1661(), ref l_U181 );
            l_U462._fU8 += -1.00000000;
            if (NOT (IS_CHAR_INJURED( g_U30207 )))
            {
                SET_CHAR_COORDINATES( g_U30207, l_U462._fU0, l_U462._fU4, l_U462._fU8 );
                SET_CHAR_HEADING( g_U30207, l_U181 );
            }
            if (IS_SCREEN_FADED_OUT())
            {
                if (NOT (IS_CHAR_VISIBLE( sub_1661() )))
                {
                    SET_CHAR_VISIBLE( sub_1661(), 1 );
                }
                DO_SCREEN_FADE_IN( 500 );
                while (NOT IS_SCREEN_FADED_IN())
                {
                    HIDE_HUD_AND_RADAR_THIS_FRAME();
                    sub_41372();
                    sub_56113( 1, 1 );
                    WAIT( 0 );
                }
            }
            l_U255++;
            break;
            case 3:
            if (NOT (l_U254 == 4))
            {
                if (NOT g_U30105)
                {
                    if (NOT l_U1)
                    {
                        if (NOT l_U71)
                        {
                            if (((IS_CONTROL_JUST_PRESSED( 2, 23 )) AND (NOT IS_USING_CONTROLLER())) || (IS_BUTTON_JUST_PRESSED( 0, 4 )))
                            {
                                if (NOT (g_U30190 == 0))
                                {
                                    sub_1635();
                                }
                            }
                        }
                    }
                    else if (((NOT (IS_CONTROL_JUST_PRESSED( 2, 23 ))) || (IS_USING_CONTROLLER())) AND (NOT (IS_BUTTON_JUST_PRESSED( 0, 4 ))))
                    {
                        l_U1 = 0;
                    }
                }
            }
            if (NOT l_U4)
            {
                if ((l_U86) || (l_U303 > 6))
                {
                    l_U254 = 8;
                    l_U255 = 0;
                }
            }
            break;
        }
        sub_56113( 1, 0 );
        if (l_U254 == 3)
        {
            if ((IS_KEYBOARD_KEY_JUST_PRESSED( 36 )) || (l_U299 >= 200))
            {
                if (NOT l_U4)
                {
                    g_U30168[g_U30190] = 1;
                    l_U255 = 0;
                    sub_55845( 0 );
                    l_U254 = 4;
                }
            }
        }
        break;
        case 4:
        switch (l_U255)
        {
            case 0:
            if ((g_U30190 == 0) || (NOT (l_U304 < 10)))
            {
                PRINTSTRING( "STATE_DANCING_PASS - Started" );
                PRINTNL();
                CLEAR_HELP();
                CLEAR_CHAR_TASKS_IMMEDIATELY( sub_1661() );
                if (NOT (IS_CHAR_INJURED( g_U30207 )))
                {
                    TASK_PLAY_ANIM_NON_INTERRUPTABLE( g_U30207, "success_f", sub_56124( 1 ), 1000.00000000, 0, 0, 0, 0, -1 );
                    TASK_PLAY_ANIM_NON_INTERRUPTABLE( sub_1661(), "success_m", sub_56124( 1 ), 1000.00000000, 0, 0, 0, 0, -1 );
                }
                if (NOT (IS_CHAR_INJURED( g_U30207 )))
                {
                    TASK_PLAY_ANIM_FACIAL( g_U30207, "FACIAL_DANCE_PASS_F", sub_56124( 1 ), 4.00000000, 0, 0, -1 );
                }
                TASK_PLAY_ANIM_FACIAL( sub_1661(), "FACIAL_DANCE_PASS_F", sub_56124( 1 ), 4.00000000, 0, 0, -1 );
                switch (g_U30190)
                {
                    case 2:
                    l_U363 = 16000;
                    break;
                    case 0:
                    l_U363 = 16000;
                    break;
                    case 1:
                    l_U363 = 16000;
                    break;
                }
                SETTIMERA( 0 );
                l_U255++;
            }
            else
            {
                l_U255 = 99;
            }
            break;
            case 1:
            l_U255++;
            break;
            case 2:
            sub_114178();
            GET_CHAR_COORDINATES( sub_1661(), ref l_U462._fU0, ref l_U462._fU4, ref l_U462._fU8 );
            GET_CHAR_HEADING( sub_1661(), ref l_U181 );
            l_U462._fU8 += -1.00000000;
            if (NOT (IS_CHAR_INJURED( g_U30207 )))
            {
                SET_CHAR_COORDINATES( g_U30207, l_U462._fU0, l_U462._fU4, l_U462._fU8 );
                SET_CHAR_HEADING( g_U30207, l_U181 );
            }
            l_U255 = 99;
            break;
            case 99:
            if ((IS_KEYBOARD_KEY_JUST_PRESSED( 36 )) || (TIMERA() > l_U363))
            {
                if ((g_U30190 == 1) || (g_U30190 == 2))
                {
                    if ((NOT l_U117) AND (l_U304 < 10))
                    {
                        l_U255 = 0;
                        if (NOT ((IS_SCREEN_FADING_OUT()) || (IS_SCREEN_FADED_OUT())))
                        {
                            DO_SCREEN_FADE_OUT( 500 );
                        }
                        while (NOT IS_SCREEN_FADED_OUT())
                        {
                            HIDE_HUD_AND_RADAR_THIS_FRAME();
                            sub_41372();
                            sub_56113( 1, 1 );
                            WAIT( 0 );
                        }
                        l_U254 = 9;
                    }
                    else if (g_U30190 == 1)
                    {
                        if (NOT ((IS_SCREEN_FADING_OUT()) || (IS_SCREEN_FADED_OUT())))
                        {
                            DO_SCREEN_FADE_OUT( 1000 );
                        }
                        while (NOT IS_SCREEN_FADED_OUT())
                        {
                            HIDE_HUD_AND_RADAR_THIS_FRAME();
                            sub_41372();
                            sub_56113( 1, 0 );
                            WAIT( 0 );
                        }
                        WAIT( 0 );
                    }
                    g_U30106 = 1;
                    sub_1635();;
                }
                else
                {
                    l_U100 = 1;
                    if (NOT ((IS_SCREEN_FADING_OUT()) || (IS_SCREEN_FADED_OUT())))
                    {
                        DO_SCREEN_FADE_OUT( 1000 );
                    }
                    while (NOT IS_SCREEN_FADED_OUT())
                    {
                        HIDE_HUD_AND_RADAR_THIS_FRAME();
                        sub_41372();
                        sub_56113( 1, 0 );
                        WAIT( 0 );
                    }
                    g_U30106 = 1;
                    sub_1635();
                }
            }
            break;
        }
        sub_56113( 1, 0 );
        break;
        case 6:
        sub_41372();
        switch (l_U255)
        {
            case 0:
            PRINTSTRING( "STATE_FAIL_CUT_SOLO_1 - Started" );
            PRINTNL();
            CLEAR_HELP();
            if (NOT (IS_CHAR_INJURED( g_U30207 )))
            {
                TASK_PLAY_ANIM_NON_INTERRUPTABLE( g_U30207, "fgrooveendingfail", sub_56124( 0 ), 1000.00000000, 0, 0, 0, 0, -1 );
                TASK_PLAY_ANIM_NON_INTERRUPTABLE( sub_1661(), "mgrooveendingfail", sub_56124( 0 ), 1000.00000000, 0, 0, 0, 0, -1 );
            }
            if (NOT (IS_CHAR_INJURED( g_U30207 )))
            {
                TASK_PLAY_ANIM_FACIAL( g_U30207, "FACIAL_DANCE_FAIL_F", sub_56124( 1 ), 4.00000000, 0, 0, -1 );
            }
            TASK_PLAY_ANIM_FACIAL( sub_1661(), "facial_dance_fail_plyr", sub_56124( 1 ), 4.00000000, 0, 0, -1 );
            switch (g_U30190)
            {
                case 2:
                l_U362 = 6300;
                break;
                case 0:
                l_U362 = 7400;
                break;
                case 1:
                l_U362 = 4200;
                break;
            }
            SETTIMERA( 0 );
            l_U255++;
            break;
            case 1:
            sub_44635( 8 );
            l_U255++;
            break;
            case 2:
            GET_CHAR_COORDINATES( sub_1661(), ref l_U462._fU0, ref l_U462._fU4, ref l_U462._fU8 );
            GET_CHAR_HEADING( sub_1661(), ref l_U181 );
            l_U462._fU8 += -1.00000000;
            if (NOT (IS_CHAR_INJURED( g_U30207 )))
            {
                SET_CHAR_COORDINATES( g_U30207, l_U462._fU0, l_U462._fU4, l_U462._fU8 );
                SET_CHAR_HEADING( g_U30207, l_U181 );
            }
            l_U255++;
            GENERATE_RANDOM_INT_IN_RANGE( 0, 2, ref iVar3 );
            if (iVar3 == 0)
            {
                if (IS_PLAYER_PLAYING( sub_1530() ))
                {
                    SAY_AMBIENT_SPEECH( sub_1661(), "DANCING_GAME_LUIS_BAD", 1, 1, 2 );
                }
            }
            else if (NOT (IS_CHAR_INJURED( g_U30207 )))
            {
                SAY_AMBIENT_SPEECH( g_U30207, "DANCING_GAME_BAD", 1, 1, 2 );
            }
            break;
            case 3:
            if ((IS_KEYBOARD_KEY_JUST_PRESSED( 36 )) || (TIMERA() > l_U362))
            {
                l_U254 = 1;
                l_U255 = 0;
                l_U303 = 0;
                if (NOT l_U86)
                {
                    l_U95 = 1;
                }
                l_U117 = 1;
            }
            break;
        }
        break;
        case 7:
        sub_41372();
        switch (l_U255)
        {
            case 0:
            PRINTSTRING( "STATE_FAIL_CUT_SOLO_2 - Started" );
            PRINTNL();
            CLEAR_HELP();
            if (NOT (IS_CHAR_INJURED( g_U30207 )))
            {
                TASK_PLAY_ANIM_NON_INTERRUPTABLE( sub_1661(), "mgameendingfail", sub_56124( 0 ), 1000.00000000, 0, 0, 0, 0, -1 );
                TASK_PLAY_ANIM_NON_INTERRUPTABLE( g_U30207, "fgameendingfail", sub_56124( 0 ), 1000.00000000, 0, 0, 0, 0, -1 );
            }
            if (NOT (IS_CHAR_INJURED( g_U30207 )))
            {
                TASK_PLAY_ANIM_FACIAL( g_U30207, "facial_dance_fail_f", sub_56124( 1 ), 4.00000000, 0, 0, -1 );
            }
            TASK_PLAY_ANIM_FACIAL( sub_1661(), "facial_dance_fail_plyr", sub_56124( 1 ), 4.00000000, 0, 0, -1 );
            switch (g_U30190)
            {
                case 2:
                l_U362 = 4500;
                break;
                case 0:
                l_U362 = 8000;
                break;
                case 1:
                l_U362 = 4500;
                break;
            }
            SETTIMERA( 0 );
            l_U255++;
            break;
            case 1:
            sub_44635( 10 );
            l_U255++;
            break;
            case 2:
            GET_CHAR_COORDINATES( sub_1661(), ref l_U462._fU0, ref l_U462._fU4, ref l_U462._fU8 );
            GET_CHAR_HEADING( sub_1661(), ref l_U181 );
            l_U462._fU8 += -1.00000000;
            if (NOT (IS_CHAR_INJURED( g_U30207 )))
            {
                SET_CHAR_COORDINATES( g_U30207, l_U462._fU0, l_U462._fU4, l_U462._fU8 );
                SET_CHAR_HEADING( g_U30207, l_U181 );
            }
            l_U255++;
            break;
            case 3:
            if (IS_SCREEN_FADED_OUT())
            {
                if (NOT (IS_CHAR_VISIBLE( sub_1661() )))
                {
                    SET_CHAR_VISIBLE( sub_1661(), 1 );
                }
                DO_SCREEN_FADE_IN( 500 );
                while (NOT IS_SCREEN_FADED_IN())
                {
                    HIDE_HUD_AND_RADAR_THIS_FRAME();
                    sub_56113( 0, 0 );
                    WAIT( 0 );
                }
            }
            if ((IS_KEYBOARD_KEY_JUST_PRESSED( 36 )) || (TIMERA() > l_U362))
            {
                g_U30107 = 1;
                WAIT( 0 );
                WAIT( 0 );
                sub_1635();
            }
            break;
        }
        break;
        case 8:
        sub_41372();
        switch (l_U255)
        {
            case 0:
            PRINTSTRING( "STATE_FAIL_CUT_PAIRED - Started" );
            PRINTNL();
            CLEAR_HELP();
            CLEAR_CHAR_TASKS_IMMEDIATELY( sub_1661() );
            if (NOT (IS_CHAR_INJURED( g_U30207 )))
            {
                CLEAR_CHAR_TASKS_IMMEDIATELY( g_U30207 );
                if (l_U96)
                {
                    SET_CHAR_COLLISION( g_U30207, 0 );
                    FREEZE_CHAR_POSITION( g_U30207, 1 );
                }
                TASK_PLAY_ANIM_NON_INTERRUPTABLE( sub_1661(), "mgrooveendingfail", sub_56124( 1 ), 1000.00000000, 0, 0, 0, 0, -1 );
                TASK_PLAY_ANIM_NON_INTERRUPTABLE( g_U30207, "fgrooveendingfail", sub_56124( 1 ), 1000.00000000, 0, 0, 0, 0, -1 );
                if (NOT (IS_CHAR_INJURED( g_U30207 )))
                {
                    TASK_PLAY_ANIM_FACIAL( g_U30207, "facial_dance_fail_f", sub_56124( 1 ), 4.00000000, 0, 0, -1 );
                }
                TASK_PLAY_ANIM_FACIAL( sub_1661(), "facial_dance_fail_plyr", sub_56124( 1 ), 4.00000000, 0, 0, -1 );
            }
            switch (g_U30190)
            {
                case 2:
                l_U362 = 8500;
                break;
                case 0:
                l_U362 = 6000;
                break;
                case 1:
                l_U362 = 3700;
                break;
            }
            SETTIMERA( 0 );
            l_U255++;
            break;
            case 1:
            sub_44635( 9 );
            l_U255++;
            break;
            case 2:
            GET_CHAR_COORDINATES( sub_1661(), ref l_U462._fU0, ref l_U462._fU4, ref l_U462._fU8 );
            GET_CHAR_HEADING( sub_1661(), ref l_U181 );
            l_U462._fU8 += -1.00000000;
            if (NOT (IS_CHAR_INJURED( g_U30207 )))
            {
                SET_CHAR_COORDINATES( g_U30207, l_U462._fU0, l_U462._fU4, l_U462._fU8 );
                SET_CHAR_HEADING( g_U30207, l_U181 );
            }
            GENERATE_RANDOM_INT_IN_RANGE( 0, 2, ref iVar3 );
            if (iVar3 == 0)
            {
                if (IS_PLAYER_PLAYING( sub_1530() ))
                {
                    SAY_AMBIENT_SPEECH( sub_1661(), "DANCING_GAME_LUIS_BAD", 1, 1, 2 );
                }
            }
            else if (NOT (IS_CHAR_INJURED( g_U30207 )))
            {
                SAY_AMBIENT_SPEECH( g_U30207, "DANCING_GAME_BAD", 1, 1, 2 );
            }
            l_U255++;
            break;
            case 3:
            if ((IS_KEYBOARD_KEY_JUST_PRESSED( 36 )) || (TIMERA() > l_U362))
            {
                l_U254 = 1;
                l_U255 = 0;
                l_U303 = 0;
                if (l_U299 > 100)
                {
                    l_U299 = 100;
                    l_U116 = 1;
                }
                else
                {
                    l_U299 = 54;
                }
                l_U253 = TO_FLOAT( l_U299 );
                l_U117 = 1;
                l_U95 = 1;
            }
            break;
        }
        break;
        case 9:
        switch (l_U255)
        {
            case 0:
            l_U60 = 0;
            REQUEST_SCRIPT( "busstop" );
            while (NOT (HAS_SCRIPT_LOADED( "busstop" )))
            {
                WAIT( 0 );
            }
            sub_2257();
            sub_44635( 0 );
            START_NEW_SCRIPT( "busstop", 1024 );
            l_U255++;
            break;
            case 1:
            if ((GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT( "busstop" )) == 0)
            {
                g_U30106 = 1;
                STOP_STREAM();
                sub_3737( 0 );
                WAIT( 500 );
                if (NOT (IS_CHAR_VISIBLE( sub_1661() )))
                {
                    SET_CHAR_VISIBLE( sub_1661(), 1 );
                }
                DO_SCREEN_FADE_IN( 500 );
                while (NOT IS_SCREEN_FADED_IN())
                {
                    HIDE_HUD_AND_RADAR_THIS_FRAME();
                    WAIT( 0 );
                }
                sub_1635();
            }
            break;
        }
        break;
    }
    return;
}

void sub_41372()
{
    unknown uVar2;
    unknown uVar3;

    if (l_U65)
    {
        l_U309 = l_U310;
        GET_STREAM_BEAT_INFO( ref uVar3, ref l_U145, ref l_U310 );
        l_U310 += l_U342;
        if (l_U310 > 3)
        {
            l_U310 += -4;
        }
        l_U311 = l_U310 + 1;
        if (l_U311 > 3)
        {
            l_U311 += -4;
        }
        l_U145 /= 60.00000000 / uVar3;
        if (l_U145 > 1.00000000)
        {
            l_U145 = 1.00000000;
        }
        if (l_U145 < 0.00000000)
        {
            l_U145 = 0.00000000;
        }
        l_U146 = 1.00000000 - l_U145;
    }
    if (l_U145 <= l_U149)
    {
        if (NOT l_U37)
        {
            l_U37 = 1;
        }
        l_U147 = 1.00000000 - l_U145;
        l_U36 = 0;
    }
    else
    {
        l_U37 = 0;
        l_U147 = 1.00000000 - l_U146;
        l_U36 = 1;
    }
    l_U205 = l_U199;
    l_U199 = ((1.00000000 - l_U145) * 0.25000000) + ((TO_FLOAT( l_U310 )) * 0.25000000);
    if (l_U199 > 1.00000000)
    {
        l_U199 = 1.00000000;
    }
    if (l_U199 < 0.00000000)
    {
        l_U199 = 0.00000000;
    }
    l_U321 = l_U320;
    l_U320 = sub_41791( l_U145, l_U310 );
    l_U322 = l_U320 + 1;
    if (l_U322 > 3)
    {
        l_U322 = 0;
    }
    if (l_U145 > (ABSF( l_U159 )))
    {
        l_U200 = l_U145 - (ABSF( l_U159 ));
    }
    else
    {
        l_U200 = l_U145 + (1.00000000 - (ABSF( l_U159 )));
    }
    l_U147 -= l_U149;
    l_U147 /= 1.00000000 - l_U149;
    l_U302 += l_U261;
    return;
}

int sub_41791(unknown uParam0, unknown uParam1)
{
    int Result;

    for ( Result = 0; Result < 4; Result++ )
    {
        if (sub_41818( uParam0, uParam1, Result ))
        {
            return Result;
        }
    }
    SCRIPT_ASSERT( "GET_ZONE_FOR_TIME_VALUE_AND_BEAT - returned no scoring zone" );
    return -1;
}

int sub_41818(unknown uParam0, unknown uParam1, int iParam2)
{
    if (iParam2 > -1)
    {
        if ((sub_42013( uParam0, uParam1, iParam2 )) || ((sub_41942( uParam0, uParam1, iParam2 )) || (sub_41842( uParam0, uParam1, iParam2 ))))
        {
            return 1;
        }
    }
    return 0;
}

int sub_41842(unknown uParam0, int iParam1, int iParam2)
{
    float fVar5;

    fVar5 = uParam0 * -1.00000000;
    if (iParam2 > -1)
    {
        if (fVar5 >= l_U159)
        {
            if (iParam2 == 0)
            {
                if (iParam1 == 3)
                {
                    return 1;
                }
            }
            else if ((iParam1 + 1) == iParam2)
            {
                return 1;
            }
        }
    }
    return 0;
}

int sub_41942(unknown uParam0, int iParam1, int iParam2)
{
    float fVar5;

    fVar5 = 1.00000000 - uParam0;
    if (iParam2 > -1)
    {
        if (fVar5 <= l_U158)
        {
            if (iParam2 == iParam1)
            {
                return 1;
            }
        }
    }
    return 0;
}

int sub_42013(unknown uParam0, int iParam1, int iParam2)
{
    float fVar5;
    float fVar6;
    float fVar7;

    fVar7 = (((1.00000000 + l_U159) - l_U158) * 0.50000000) + l_U158;
    fVar5 = 1.00000000 - uParam0;
    fVar6 = uParam0 * -1.00000000;
    if (iParam2 > -1)
    {
        if ((fVar5 < fVar7) AND (fVar5 > l_U158))
        {
            if (iParam2 == iParam1)
            {
                return 1;
            }
        }
        else if ((fVar6 >= ((1.00000000 - fVar7) * -1.00000000)) AND (fVar6 < l_U159))
        {
            if (iParam2 == 0)
            {
                if (iParam1 == 3)
                {
                    return 1;
                }
            }
            else if ((iParam1 + 1) == iParam2)
            {
                return 1;
            }
        }
    }
    return 0;
}

string sub_43217(boolean bParam0, boolean bParam1, boolean bParam2)
{
    switch (l_U359)
    {
        case 0:
        if (NOT bParam2)
        {
            if (NOT bParam0)
            {
                if (NOT bParam1)
                {
                    return "solo_male_groove_idle";
                }
                else
                {
                    return "solo_female_groove_idle";
                }
            }
            else if (NOT bParam1)
            {
                return "paired_male_groove_idle";
            }
            else
            {
                return "paired_female_partial_idle";
            }
        }
        else if (NOT bParam0)
        {
            if (NOT bParam1)
            {
                return "solo_male_partial_idle";
            }
            else
            {
                return "solo_female_groove_idle";
            }
        }
        else if (NOT bParam1)
        {
            return "paired_male_partial_idle";
        }
        else
        {
            return "paired_female_partial_idle";
        };;;
        break;
        case 1:
        if (NOT bParam2)
        {
            if (NOT bParam0)
            {
                if (NOT bParam1)
                {
                    return "solo_male_groove_idle";
                }
                else
                {
                    return "solo_female_groove_idle";
                }
            }
            else if (bParam1)
            {
                return "paired_female_groove_idle";
            }
            else
            {
                return "paired_male_groove_idle";
            }
        }
        else if (NOT bParam0)
        {
            if (NOT bParam1)
            {
                return "solo_male_partial_idle";
            }
            else
            {
                return "solo_female_groove_idle";
            }
        }
        else if (NOT bParam1)
        {
            return "paired_male_partial_idle";
        }
        else
        {
            return "paired_female_groove_idle";
        };;;
        break;
        case 2:
        if (NOT bParam2)
        {
            if (NOT bParam0)
            {
                if (NOT bParam1)
                {
                    return "solo_male_groove_idle";
                }
                else
                {
                    return "solo_female_groove_idle";
                }
            }
            else if (bParam1)
            {
                return "paired_female_groove_idle";
            }
            else
            {
                return "paired_male_groove_idle";
            }
        }
        else if (NOT bParam0)
        {
            if (NOT bParam1)
            {
                return "solo_male_partial_idle";
            }
            else
            {
                return "solo_female_groove_idle";
            }
        }
        else if (NOT bParam1)
        {
            return "paired_male_partial_idle";
        }
        else
        {
            return "paired_female_groove_idle";
        };;;
        break;
    }
    SCRIPT_ASSERT( "DANCE_ANIM_IDLE_IDLE - default" );
    return "";
}

void sub_44347()
{
    l_U361 = (CEIL( l_U253 )) + 12;
    if (l_U254 < 2)
    {
        if (NOT l_U116)
        {
            if (l_U361 >= 66)
            {
                l_U361 = 65;
            }
        }
        else if (l_U361 >= 100)
        {
            l_U361 = 112;
        }
    }
    else if (l_U361 >= 200)
    {
        l_U361 = 199;
    }
    if (l_U361 < 16)
    {
        l_U361 = 16;
    }
    if (l_U361 <= (CEIL( l_U253 )))
    {
        l_U361 = (CEIL( l_U253 )) + 12;
    }
    PRINTSTRING( "CALCULATE_NEXT_HOLD_BARRIER() = " );
    PRINTINT( l_U361 );
    PRINTNL();
    return;
}

void sub_44635(int iParam0)
{
    PRINTSTRING( "GOTO_DANCE_CAMERA - called with " );
    PRINTINT( iParam0 );
    PRINTNL();
    if (NOT (l_U256 == iParam0))
    {
        l_U256 = iParam0;
        l_U257 = 0;
    }
    return;
}

void sub_44755(boolean bParam0)
{
    switch (g_U30190)
    {
        case 0:
        SET_CHAR_COORDINATES_DONT_CLEAR_PLAYER_TASKS( sub_1661(), -393.97270000, 424.39520000, 5.19680000 );
        SET_CHAR_HEADING( sub_1661(), 0.12160000 );
        break;
        case 1:
        if (NOT bParam0)
        {
            SET_CHAR_COORDINATES_DONT_CLEAR_PLAYER_TASKS( sub_1661(), -485.00410000, 149.00300000, 6.55090000 );
            SET_CHAR_HEADING( sub_1661(), 134.90000000 );
        }
        else
        {
            SET_CHAR_COORDINATES_DONT_CLEAR_PLAYER_TASKS( sub_1661(), -485.85000000, 148.52000000, 6.55090000 );
            SET_CHAR_HEADING( sub_1661(), 134.90000000 );
        }
        break;
        case 2:
        SET_CHAR_COORDINATES_DONT_CLEAR_PLAYER_TASKS( sub_1661(), -429.76690000, 352.80220000, 10.72120000 );
        SET_CHAR_HEADING( sub_1661(), 272.40680000 );
        break;
    }
    return;
}

void sub_45056()
{
    int I;
    int iVar3;
    int iVar4;
    boolean bVar5;
    boolean bVar6;
    int iVar7;
    int iVar8;

    sub_45065();
    for ( I = 0; I < 2; I++ )
    {
        l_U11[I] = 0;
        l_U26[I] = 0;
    }
    for ( I = 0; I < 2; I++ )
    {
        if (sub_45611( 1, I, l_U137 ))
        {
            if (NOT (sub_41818( l_U145, l_U310, l_U314 )))
            {
                l_U196 = l_U145;
                l_U312 = l_U310;
                l_U316 = I;
                l_U314 = l_U320;
                bVar5 = true;
            }
        }
    }
    for ( I = 0; I < 4; I++ )
    {
        iVar3 = 10 + I;
        if (l_U318 == -1)
        {
            if (sub_46561( 1, iVar3, l_U138 ))
            {
                l_U318 = iVar3;
            }
        }
        else if (iVar3 == l_U318)
        {
            if (NOT (sub_46561( 1, iVar3, l_U138 )))
            {
                l_U318 = -1;
            }
        }
    }
    for ( I = 0; I < 2; I++ )
    {
        if (sub_45611( 0, I, l_U137 ))
        {
            if (NOT (sub_41818( l_U145, l_U310, l_U315 )))
            {
                l_U197 = l_U145;
                l_U313 = l_U310;
                l_U317 = I;
                l_U315 = l_U320;
                bVar6 = true;
            }
        }
    }
    for ( I = 0; I < 4; I++ )
    {
        iVar3 = 10 + I;
        if (l_U319 == -1)
        {
            if (sub_46561( 0, iVar3, l_U138 ))
            {
                l_U319 = iVar3;
            }
        }
        else if (iVar3 == l_U319)
        {
            if (NOT (sub_46561( 0, iVar3, l_U138 )))
            {
                l_U319 = -1;
            }
        }
    }
    if (NOT l_U105)
    {
        if (sub_46944( 0, 7 ))
        {
            if (NOT (sub_41818( l_U145, l_U310, l_U366 )))
            {
                l_U243 = l_U145;
                l_U365 = l_U310;
                l_U366 = l_U320;
                l_U97 = 1;
                iVar7 = 1;
            }
        }
    }
    else if (l_U108)
    {
        if ((l_U310 == 2) || (l_U310 == 0))
        {
            if (l_U145 < 0.20000000)
            {
                if (NOT (sub_41818( l_U145, l_U310, l_U366 )))
                {
                    l_U243 = l_U145;
                    l_U365 = l_U310;
                    l_U366 = l_U320;
                    l_U97 = 1;
                }
            }
        }
    }
    if (NOT l_U105)
    {
        if (sub_46944( 0, 5 ))
        {
            if (NOT (sub_41818( l_U145, l_U310, l_U368 )))
            {
                l_U244 = l_U145;
                l_U367 = l_U310;
                l_U368 = l_U320;
                l_U98 = 1;
                iVar8 = 1;
            }
        }
    }
    else if (l_U108)
    {
        if ((l_U310 == 3) || (l_U310 == 1))
        {
            if (l_U145 < 0.20000000)
            {
                if (NOT (sub_41818( l_U145, l_U310, l_U368 )))
                {
                    l_U244 = l_U145;
                    l_U367 = l_U310;
                    l_U368 = l_U320;
                    l_U98 = 1;
                }
            }
        }
    }
    l_U333 = l_U334;
    if ((NOT (l_U319 == -1)) || (NOT (l_U318 == -1)))
    {
        if (NOT (l_U319 == -1))
        {
            l_U334 = l_U319;
        }
        else
        {
            l_U334 = l_U318;
        }
    }
    else if (NOT (l_U334 == -1))
    {
        l_U334 = -1;
        PRINTSTRING( "iHoldThisFrame set to DANCE_ANIM_IDLE_IDLE 2" );
        PRINTNL();
    }
    if (l_U334 == l_U333)
    {
        GET_GAME_TIMER( ref I );
        iVar4 = I - l_U335;
        if (iVar4 > l_U336)
        {
            l_U328 = l_U334;
            if (l_U67)
            {
                if (NOT l_U71)
                {
                    l_U324 = l_U328;
                }
            }
        }
    }
    else
    {
        l_U328 = -1;
        GET_GAME_TIMER( ref l_U335 );
    }
    if ((NOT (sub_47830( l_U145, l_U310 ))) AND ((iVar8) || (iVar7)))
    {
        l_U98 = 0;
        l_U97 = 0;
    }
    if (l_U326 == -1)
    {
        if (((bVar6) || (bVar5)) AND (sub_47830( l_U145, l_U310 )))
        {
            l_U323 = 0;
            l_U325 = l_U320;
            l_U198 = l_U145;
            l_U326 = l_U320;
            l_U327 = l_U320;
            if ((bVar6) AND (NOT bVar5))
            {
                switch (l_U317)
                {
                    case 0:
                    l_U323 = 3;
                    break;
                    case 1:
                    l_U323 = 6;
                    break;
                }
            }
            if ((NOT bVar6) AND (bVar5))
            {
                switch (l_U316)
                {
                    case 0:
                    l_U323 = 1;
                    break;
                    case 1:
                    l_U323 = 2;
                    break;
                }
            }
            if ((bVar6) AND (bVar5))
            {
                switch (l_U317)
                {
                    case 0:
                    switch (l_U316)
                    {
                        case 0:
                        l_U323 = 4;
                        break;
                        case 1:
                        l_U323 = 5;
                        break;
                    }
                    break;
                    case 1:
                    switch (l_U316)
                    {
                        case 0:
                        l_U323 = 7;
                        break;
                        case 1:
                        l_U323 = 8;
                        break;
                    }
                    break;
                }
            }
            if (NOT (l_U323 == 0))
            {
                l_U324 = l_U323;
            }
        }
    }
    if (NOT (sub_41818( l_U145, l_U310, l_U314 )))
    {
        l_U314 = -1;
    }
    if (NOT (sub_41818( l_U145, l_U310, l_U315 )))
    {
        l_U315 = -1;
    }
    if (NOT (sub_41818( l_U145, l_U310, l_U326 )))
    {
        l_U326 = -1;
        l_U323 = 0;
    }
    if (NOT (sub_41818( l_U145, l_U310, l_U366 )))
    {
        l_U366 = -1;
        l_U97 = 0;
    }
    if (NOT (sub_41818( l_U145, l_U310, l_U368 )))
    {
        l_U368 = -1;
        l_U98 = 0;
    }
    if (NOT (l_U323 == 0))
    {
        if (NOT (sub_47830( l_U145, l_U310 )))
        {
            l_U323 = 0;
        }
    }
    return;
}

void sub_45065()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;

    GET_POSITION_OF_ANALOGUE_STICKS( 0, ref l_U284, ref l_U285, ref l_U286, ref l_U287 );
    if (NOT IS_USING_CONTROLLER())
    {
        GET_KEYBOARD_MOVE_INPUT( ref l_U284, ref l_U285 );
        l_U286 = l_U284;
        l_U287 = l_U285;
    }
    uVar2._fU0 = TO_FLOAT( l_U286 );
    uVar2._fU4 = TO_FLOAT( l_U287 * -1 );
    uVar2._fU8 = 0.00000000;
    uVar5._fU0 = TO_FLOAT( l_U284 );
    uVar5._fU4 = TO_FLOAT( l_U285 * -1 );
    uVar5._fU8 = 0.00000000;
    l_U164 = l_U166;
    l_U165 = l_U167;
    GET_HEADING_FROM_VECTOR_2D( uVar2._fU0, uVar2._fU4, ref l_U162 );
    if (l_U162 > 180.00000000)
    {
        l_U162 += -360.00000000;
    }
    l_U162 *= -1.00000000;
    GET_HEADING_FROM_VECTOR_2D( uVar5._fU0, uVar5._fU4, ref l_U163 );
    if (l_U163 > 180.00000000)
    {
        l_U163 += -360.00000000;
    }
    l_U163 *= -1.00000000;
    uVar8 = ROUND( l_U162 );
    l_U162 = TO_FLOAT( uVar8 );
    uVar8 = ROUND( l_U163 );
    l_U163 = TO_FLOAT( uVar8 );
    l_U166 = (VMAG( uVar2 )) / 128.00000000;
    if (l_U166 > 1.00000000)
    {
        l_U166 = 1.00000000;
    }
    l_U167 = (VMAG( uVar5 )) / 128.00000000;
    if (l_U167 > 1.00000000)
    {
        l_U167 = 1.00000000;
    }
    return;
}

int sub_45611(int iParam0, int iParam1, unknown uParam2)
{
    if (NOT l_U105)
    {
        if (sub_45637( iParam0, iParam1, uParam2 ))
        {
            if (iParam0 == 1)
            {
                if (l_U166 > l_U164)
                {
                    return 1;
                }
            }
            else if (l_U167 > l_U165)
            {
                return 1;
            }
        }
    }
    else if (NOT l_U114)
    {
        if (l_U145 < 0.20000000)
        {
            if (iParam0 == 1)
            {
                if (iParam1 == 1)
                {
                    if ((l_U310 == 1) || (l_U310 == 0))
                    {
                        return 1;
                    }
                }
            }
            else if (iParam1 == 0)
            {
                if ((l_U310 == 3) || (l_U310 == 2))
                {
                    return 1;
                }
            }
        }
    }
    return 0;
}

int sub_45637(int iParam0, int iParam1, float fParam2)
{
    boolean bVar5;
    float fVar6;
    float fVar7;
    float fVar8;
    float fVar9;
    unknown uVar10;
    unknown uVar11;

    bVar5 = true;
    fVar8 = l_U166;
    fVar9 = l_U167;
    uVar10 = l_U162;
    uVar11 = l_U163;
    if (iParam0 == 1)
    {
        if (NOT (fVar8 > fParam2))
        {
            bVar5 = false;
        }
    }
    else if (NOT (fVar9 > fParam2))
    {
        bVar5 = false;
    }
    if (bVar5)
    {
        if ((iParam1 == 0) || (iParam1 == 1))
        {
            switch (iParam1)
            {
                case 1:
                if (NOT l_U90)
                {
                    fVar6 = 90.00000000;
                }
                else
                {
                    fVar6 = -90.00000000;
                }
                break;
                case 0:
                if (NOT l_U90)
                {
                    fVar6 = -90.00000000;
                }
                else
                {
                    fVar6 = 90.00000000;
                }
                break;
            }
            if (iParam0 == 1)
            {
                fVar7 = uVar10 - fVar6;
            }
            else
            {
                fVar7 = uVar11 - fVar6;
            }
            if (fVar7 > 180.00000000)
            {
                fVar7 += -360.00000000;
            }
            if (fVar7 < -180.00000000)
            {
                fVar7 += 360.00000000;
            }
            if ((fVar7 <= 90.00000000) AND (fVar7 > -90.00000000))
            {
                return 1;
            }
        }
        else if (NOT l_U90)
        {
            switch (iParam1)
            {
                case 10:
                fVar6 = 45.00000000;
                break;
                case 11:
                fVar6 = 315.00000000;
                break;
                case 12:
                fVar6 = 135.00000000;
                break;
                case 13:
                fVar6 = 225.00000000;
                break;
            }
        }
        else
        {
            switch (iParam1)
            {
                case 13:
                fVar6 = 45.00000000;
                break;
                case 12:
                fVar6 = 315.00000000;
                break;
                case 11:
                fVar6 = 135.00000000;
                break;
                case 10:
                fVar6 = 225.00000000;
                break;
            }
        }
        if (iParam0 == 1)
        {
            fVar7 = uVar10 - fVar6;
        }
        else
        {
            fVar7 = uVar11 - fVar6;
        }
        if (fVar7 > 180.00000000)
        {
            fVar7 += -360.00000000;
        }
        if (fVar7 < -180.00000000)
        {
            fVar7 += 360.00000000;
        }
        if ((fVar7 <= 45.00000000) AND (fVar7 > -45.00000000))
        {
            return 1;
        }
    }
    return 0;
}

int sub_46561(unknown uParam0, int iParam1, unknown uParam2)
{
    if (NOT l_U105)
    {
        if (sub_45637( uParam0, iParam1, uParam2 ))
        {
            return 1;
        }
    }
    else if (NOT l_U114)
    {
        if (l_U107)
        {
            if (iParam1 == 10)
            {
                return 1;
            }
        }
    }
    return 0;
}

int sub_46944(unknown uParam0, int iParam1)
{
    if (IS_USING_CONTROLLER())
    {
        return IS_BUTTON_PRESSED( uParam0, iParam1 );
    }
    else if (iParam1 == 15)
    {
        return IS_CONTROL_PRESSED( 2, 3 );
    }
    else if (iParam1 == 16)
    {
        return IS_CONTROL_PRESSED( 2, 1 );
    }
    else if (iParam1 == 5)
    {
        return IS_CONTROL_PRESSED( 2, l_U121 );
    }
    else if (iParam1 == 7)
    {
        return IS_CONTROL_PRESSED( 2, l_U122 );
    }
    else
    {
        PRINTSTRING( "Something completely unexpected." );
    };;;;;
    PRINTSTRING( "Default" );
    return 0;
}

int sub_47830(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I < 4; I++ )
    {
        if (sub_47857( uParam0, uParam1, I ))
        {
            return 1;
        }
    }
    return 0;
}

int sub_47857(unknown uParam0, unknown uParam1, int iParam2)
{
    if (iParam2 > -1)
    {
        if ((sub_41942( uParam0, uParam1, iParam2 )) || (sub_41842( uParam0, uParam1, iParam2 )))
        {
            return 1;
        }
    }
    return 0;
}

void sub_48567()
{
    if (NOT (l_U321 == l_U320))
    {
        if ((l_U320 == 2) || (l_U320 == 0))
        {
            GENERATE_RANDOM_INT_IN_RANGE( 0, 3, ref l_U350 );
        }
        if (l_U337 <= 0)
        {
            if ((NOT l_U71) AND ((NOT ((NOT (l_U328 == -1)) AND (l_U328 == l_U323))) AND (NOT (l_U327 == l_U321))))
            {
                if (l_U66)
                {
                    l_U300++;
                    l_U303++;
                    l_U304++;
                    if (l_U300 >= 4)
                    {
                        sub_48744( 1 );
                        l_U300 = 0;
                        l_U349++;
                        l_U66 = 0;
                    }
                }
                else
                {
                    l_U300++;
                    l_U303++;
                    l_U304++;
                    if (l_U300 >= 2)
                    {
                        sub_48744( 1 );
                        l_U300 = 0;
                    }
                }
            }
            else if (NOT l_U66)
            {
                l_U300 = 0;
            }
            l_U337 = 0;
        }
        else
        {
            l_U337--;
        }
        if (l_U339 > 0)
        {
            l_U339--;
        }
    }
    if (NOT l_U88)
    {
        if (l_U361 <= l_U299)
        {
            l_U66 = 1;
        }
    }
    return;
}

void sub_48744(unknown uParam0)
{
    l_U253 -= uParam0;
    if (l_U253 < 0.00000000)
    {
        l_U253 = 0.00000000;
    }
    l_U299 = CEIL( l_U253 );
    if (l_U299 < 0)
    {
        l_U299 = 0;
    }
    l_U88 = 1;
    return;
}

void sub_49329(unknown uParam0)
{
    float fVar3;
    float fVar4;
    float fVar5;
    float fVar6;
    float fVar7;
    float fVar8;
    float fVar9;
    int I;
    unknown uVar11;
    unknown uVar12;
    int iVar13;
    vector vVar14;
    vector vVar17;
    vector vVar20;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    float fVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    boolean bVar35;
    int iVar36;
    int iVar37;
    float fVar38;
    float fVar39;
    float fVar40;
    float fVar41;
    float fVar42;
    float fVar43;
    vector vVar44;
    float fVar47;
    float fVar48;
    float fVar49;
    float fVar50;

    if (NOT l_U102)
    {
        vVar14 = {0.00000000, 0.00000000, 255.00000000};
        vVar17 = {255.00000000, 0.00000000, 255.00000000};
        vVar20 = {255.00000000, 255.00000000, 255.00000000};
        SET_WIDESCREEN_FORMAT( l_U351 );
        GET_GAME_TIMER( ref iVar36 );
        iVar37 = iVar36 - l_U390;
        if (iVar37 < l_U389)
        {
            fVar38 = (TO_FLOAT( iVar37 )) / (TO_FLOAT( l_U389 ));
        }
        else
        {
            fVar38 = 1.00000000;
        }
        fVar39 = (TO_FLOAT( l_U377 )) - (TO_FLOAT( l_U381 ));
        fVar39 *= fVar38;
        l_U385 = l_U381 + (ROUND( fVar39 ));
        fVar39 = (TO_FLOAT( l_U378 )) - (TO_FLOAT( l_U382 ));
        fVar39 *= fVar38;
        l_U386 = l_U382 + (ROUND( fVar39 ));
        fVar39 = (TO_FLOAT( l_U379 )) - (TO_FLOAT( l_U383 ));
        fVar39 *= fVar38;
        l_U387 = l_U383 + (ROUND( fVar39 ));
        fVar39 = (TO_FLOAT( l_U380 )) - (TO_FLOAT( l_U384 ));
        fVar39 *= fVar38;
        l_U388 = l_U384 + (ROUND( fVar39 ));
        GET_GAME_TIMER( ref iVar36 );
        iVar37 = iVar36 - l_U398;
        if (iVar37 < l_U397)
        {
            fVar38 = (TO_FLOAT( iVar37 )) / (TO_FLOAT( l_U397 ));
        }
        else
        {
            fVar38 = 1.00000000;
        }
        fVar39 = l_U392 - l_U393;
        fVar39 *= fVar38;
        l_U394 = l_U393 + fVar39;
        fVar3 = l_U185;
        fVar4 = fVar3 * (sub_49932( l_U444 ));
        DRAW_SPRITE( l_U444, l_U183, l_U184, fVar3, fVar4, 0.00000000, 255, 255, 255, 255 );
        if (l_U71)
        {
            fVar9 = l_U227;
            if (fVar9 > 0.90000000)
            {
                fVar9 = 0.90000000;
            }
            fVar9 /= 0.90000000;
            fVar3 = (l_U191 * fVar9) * l_U185;
            fVar4 = fVar3 * (sub_49932( l_U441 ));
            GET_HUD_COLOUR( 10, ref uVar30, ref uVar31, ref uVar32, ref uVar33 );
            DRAW_SPRITE( l_U441, l_U183, l_U184, fVar3, fVar4, 0.00000000, uVar30, uVar31, uVar32, 255 );
        }
        fVar29 = l_U193;
        if (l_U147 > fVar29)
        {
            fVar9 = (l_U147 - fVar29) / (1.00000000 - fVar29);
            fVar3 = (fVar9 * ((l_U189 * l_U185) - (l_U188 * l_U185))) + (l_U188 * l_U185);
        }
        else
        {
            fVar3 = l_U188 * l_U185;
        }
        fVar4 = fVar3 * (sub_49932( l_U445 ));
        DRAW_SPRITE( l_U445, l_U183, l_U184, fVar3, fVar4, 0.00000000, 255, 255, 255, 255 );
        if (l_U91)
        {
            fVar3 = l_U185;
            fVar4 = fVar3 * (sub_49932( l_U442 ));
            GET_HUD_COLOUR( 10, ref uVar30, ref uVar31, ref uVar32, ref uVar33 );
            DRAW_SPRITE( l_U442, l_U183, l_U184, fVar3, fVar4, l_U192, uVar30, uVar31, uVar32, uVar33 );
        }
        fVar42 = l_U253 / (TO_FLOAT( 200 ));
        fVar43 = (l_U253 + ((TO_FLOAT( l_U357 )) * 2.00000000)) / (TO_FLOAT( 200 ));
        for ( I = 0; I < 200; I++ )
        {
            fVar41 = (TO_FLOAT( I )) / (TO_FLOAT( 200 ));
            if (fVar42 > fVar41)
            {
                iVar13 = l_U299 - I;
                if (iVar13 > 4)
                {
                    if (l_U94)
                    {
                        if ((I mod 3) == 0)
                        {
                            fVar3 = l_U185;
                            fVar4 = fVar3 * (sub_49932( l_U442 ));
                            fVar5 = 360.00000000 / 200;
                            fVar5 *= TO_FLOAT( I );
                            fVar6 = fVar5;
                            GET_HUD_COLOUR( 7, ref uVar30, ref uVar31, ref uVar32, ref uVar33 );
                            DRAW_SPRITE_WITH_FIXED_ROTATION( l_U443, l_U183, l_U184, fVar3, fVar4, fVar5, uVar30, uVar31, uVar32, uVar33 );
                        }
                    }
                }
                else
                {
                    fVar3 = l_U185;
                    fVar4 = fVar3 * (sub_49932( l_U442 ));
                    fVar5 = 360.00000000 / 200;
                    fVar5 *= TO_FLOAT( I );
                    fVar6 = fVar5;
                    GET_HUD_COLOUR( 7, ref uVar30, ref uVar31, ref uVar32, ref uVar33 );
                    DRAW_SPRITE_WITH_FIXED_ROTATION( l_U443, l_U183, l_U184, fVar3, fVar4, fVar5, uVar30, uVar31, uVar32, uVar33 );
                }
            }
            if ((NOT l_U86) AND (l_U71))
            {
                if ((fVar41 > fVar42) AND (fVar43 > fVar41))
                {
                    fVar3 = l_U185;
                    fVar4 = fVar3 * (sub_49932( l_U442 ));
                    fVar5 = 360.00000000 / 200;
                    fVar5 *= TO_FLOAT( I );
                    fVar6 = fVar5;
                    GET_HUD_COLOUR( 10, ref uVar30, ref uVar31, ref uVar32, ref uVar33 );
                    DRAW_SPRITE_WITH_FIXED_ROTATION( l_U443, l_U183, l_U184, fVar3, fVar4, fVar5, uVar30, uVar31, uVar32, uVar33 );
                }
            }
        }
        fVar3 = l_U185 * l_U242;
        fVar4 = fVar3 * (sub_49932( l_U444 ));
        DRAW_SPRITE( l_U440, l_U183, l_U184, fVar3, fVar4, 0.00000000, 255, 255, 255, 255 );
        if (IS_FONT_LOADED( l_U352 ))
        {
            if (l_U71)
            {
                if (NOT l_U115)
                {
                    if ((l_U332 == 13) || ((l_U332 == 9) || ((l_U332 == 5) || (l_U332 == 3))))
                    {
                        l_U115 = 1;
                    }
                }
                if (l_U115)
                {
                    fVar3 = l_U187 + (l_U238 * l_U147);
                    fVar4 = fVar3 * sub_51299();
                    fVar7 = l_U183 + l_U236;
                    fVar8 = l_U184 + l_U237;
                    GET_HUD_COLOUR( 10, ref uVar30, ref uVar31, ref uVar32, ref uVar33 );
                    if (l_U374 < l_U145)
                    {
                        I = l_U332 - 3;
                    }
                    else
                    {
                        I = l_U332 - 2;
                    }
                    I = l_U332 - 2;
                    if (I >= 0)
                    {
                        DRAW_SPRITE( l_U446[I], fVar7, fVar8, fVar3, fVar4, 0.00000000, uVar30, uVar31, uVar32, uVar33 );
                    }
                    l_U374 = l_U145;
                    bVar35 = true;
                }
            }
            else
            {
                l_U374 = l_U145;
            }
        }
        else
        {
            LOAD_TEXT_FONT( l_U352 );
        }
        if (IS_FONT_LOADED( l_U352 ))
        {
            if ((l_U71) || (l_U66))
            {
                fVar3 = l_U186;
                fVar4 = fVar3 * sub_51299();
                GET_HUD_COLOUR( 1, ref uVar30, ref uVar31, ref uVar32, ref uVar33 );
                SET_TEXT_FONT( l_U352 );
                SET_TEXT_SCALE( fVar3 * l_U251, fVar4 );
                SET_TEXT_COLOUR( uVar30, uVar31, uVar32, uVar33 );
                SET_TEXT_CENTRE( 1 );
                SET_TEXT_DROPSHADOW( l_U353, 0, 0, 0, l_U354 );
                SET_TEXT_EDGE( l_U355, 0, 0, 0, l_U356 );
                fVar7 = l_U183 + l_U234;
                fVar8 = l_U184 + l_U235;
                DISPLAY_TEXT( fVar7, fVar8, "HOLD" );
            }
        }
        else
        {
            LOAD_TEXT_FONT( l_U352 );
        }
        if (l_U103)
        {
            if ((NOT l_U105) || ((l_U108) AND (l_U105)))
            {
                if ((l_U391) || (l_U71))
                {
                    if ((l_U391) || (l_U357 > 0))
                    {
                        if ((l_U391) || (l_U104))
                        {
                            fVar40 = (1.00000000 - l_U145) - l_U396;
                            if (fVar40 < 0.00000000)
                            {
                                fVar40 = 0.00000000;
                            }
                            fVar40 /= 1.00000000 - l_U396;
                            if (NOT l_U98)
                            {
                                fVar3 = l_U185 * l_U250;
                            }
                            else
                            {
                                fVar3 = l_U185 * (l_U250 * (1.00000000 + (l_U395 * (1.00000000 - fVar40))));
                            }
                            fVar4 = fVar3 * (sub_49932( l_U460 ));
                            fVar7 = l_U183 + l_U247;
                            fVar8 = l_U184 + l_U248;
                            if (NOT l_U98)
                            {
                                GET_HUD_COLOUR( 10, ref uVar30, ref uVar31, ref uVar32, ref uVar33 );
                            }
                            else
                            {
                                GET_HUD_COLOUR( 1, ref uVar30, ref uVar31, ref uVar32, ref uVar33 );
                            }
                            if (NOT l_U98)
                            {
                                uVar12 = l_U400;
                            }
                            else
                            {
                                uVar12 = l_U401;
                            }
                            uVar33 = ROUND( l_U394 * ((1.00000000 - fVar40) * (TO_FLOAT( uVar12 ))) );
                            if (IS_USING_CONTROLLER())
                            {
                                DRAW_SPRITE( l_U460, fVar7, fVar8, fVar3, fVar4, 0.00000000, uVar30, uVar31, uVar32, uVar33 );
                            }
                            else
                            {
                                fVar7 = (l_U183 + l_U249) - 0.05000000;
                                if (NOT l_U98)
                                {
                                    fVar3 = l_U186 * 0.60000000;
                                }
                                else
                                {
                                    fVar3 = l_U186 * (0.60000000 * (1.00000000 + (l_U395 * (1.00000000 - fVar40))));
                                }
                                fVar4 = fVar3 * sub_51299();
                                SET_TEXT_COLOUR( uVar30, uVar31, uVar32, uVar33 );
                                SET_TEXT_SCALE( fVar3, fVar4 );
                                DISPLAY_TEXT( fVar7, fVar8, "MB_LEFT" );
                            }
                            if (NOT l_U97)
                            {
                                fVar3 = l_U185 * l_U250;
                            }
                            else
                            {
                                fVar3 = l_U185 * (l_U250 * (1.00000000 + (l_U395 * (1.00000000 - fVar40))));
                            }
                            fVar4 = fVar3 * (sub_49932( l_U461 ));
                            fVar7 = l_U183 - l_U247;
                            fVar8 = l_U184 + l_U248;
                            if (NOT l_U97)
                            {
                                GET_HUD_COLOUR( 10, ref uVar30, ref uVar31, ref uVar32, ref uVar33 );
                            }
                            else
                            {
                                GET_HUD_COLOUR( 1, ref uVar30, ref uVar31, ref uVar32, ref uVar33 );
                            }
                            if (NOT l_U97)
                            {
                                uVar12 = l_U400;
                            }
                            else
                            {
                                uVar12 = l_U401;
                            }
                            uVar33 = ROUND( l_U394 * ((1.00000000 - fVar40) * (TO_FLOAT( uVar12 ))) );
                            if (IS_USING_CONTROLLER())
                            {
                                DRAW_SPRITE( l_U461, fVar7, fVar8, fVar3, fVar4, 0.00000000, uVar30, uVar31, uVar32, uVar33 );
                            }
                            else
                            {
                                fVar7 = l_U183 - l_U249;
                                if (NOT l_U97)
                                {
                                    fVar3 = l_U186 * 0.60000000;
                                }
                                else
                                {
                                    fVar3 = l_U186 * (0.60000000 * (1.00000000 + (l_U395 * (1.00000000 - fVar40))));
                                }
                                fVar4 = fVar3 * sub_51299();
                                SET_TEXT_COLOUR( uVar30, uVar31, uVar32, uVar33 );
                                SET_TEXT_SCALE( fVar3, fVar4 );
                                DISPLAY_TEXT( fVar7, fVar8, "MB_RIGHT" );
                            }
                            l_U104 = 1;
                        }
                        else
                        {
                            sub_52906( 1.00000000 );
                            l_U104 = 1;
                        }
                    }
                    else
                    {
                        l_U104 = 0;
                    }
                }
                else
                {
                    l_U104 = 0;
                }
            }
        }
        else
        {
            l_U104 = 0;
        }
        if (IS_FONT_LOADED( l_U352 ))
        {
            if ((NOT bVar35) AND ((NOT l_U66) AND (l_U358 > 0)))
            {
                fVar3 = l_U186;
                fVar4 = fVar3 * sub_51299();
                GET_HUD_COLOUR( 1, ref uVar30, ref uVar31, ref uVar32, ref uVar33 );
                SET_TEXT_FONT( l_U352 );
                SET_TEXT_SCALE( fVar3 * l_U251, fVar4 );
                SET_TEXT_COLOUR( uVar30, uVar31, uVar32, uVar33 );
                SET_TEXT_CENTRE( 1 );
                SET_TEXT_DROPSHADOW( l_U353, 0, 0, 0, l_U354 );
                SET_TEXT_EDGE( l_U355, 0, 0, 0, l_U356 );
                fVar7 = l_U183 + l_U234;
                fVar8 = l_U184 + l_U235;
                DISPLAY_TEXT( fVar7, fVar8, "KEEP" );
            }
        }
        else
        {
            LOAD_TEXT_FONT( l_U352 );
        }
        vVar44 = {sub_53266( 0.00000000, 1.00000000, 0.00000000, 0.00000000, 0.00000000, fVar6 + l_U245 )};
        vVar44 = {vVar44 * l_U239};
        vVar44.y *= sub_49932( l_U459 );
        if (NOT l_U74)
        {
            l_U240 = 0.14000000;
        }
        else if (((l_U98) || (l_U97)) AND (l_U71))
        {
            l_U240 = 0.33300000;
        }
        else
        {
            l_U240 = 0.23650000;
        }
        if (l_U93)
        {
            for ( I = 0; I < l_U473; I++ )
            {
                fVar47 = l_U199 * (1.00000000 / l_U473[I]._fU36);
                if (fVar47 > l_U473[I]._fU32)
                {
                    fVar40 = 1.00000000 - ((1.00000000 - fVar47) / (1.00000000 - l_U473[I]._fU32));
                }
                else
                {
                    fVar40 = 0.00000000;
                }
                if (fVar40 > 0.00000000)
                {
                    fVar49 = l_U473[I]._fU0 + (fVar40 * (l_U473[I]._fU8 - l_U473[I]._fU0));
                    fVar50 = l_U473[I]._fU4 + (fVar40 * (l_U473[I]._fU12 - l_U473[I]._fU4));
                    fVar7 = (l_U183 + vVar44.x) + fVar49;
                    fVar8 = (l_U184 + vVar44.y) + fVar50;
                    fVar3 = ((l_U473[I]._fU16 + (fVar40 * (l_U473[I]._fU20 - l_U473[I]._fU16))) * l_U240) * l_U185;
                    fVar4 = fVar3 * (sub_49932( l_U459 ));
                    fVar5 = l_U473[I]._fU24 + (fVar40 * (l_U473[I]._fU28 - l_U473[I]._fU24));
                    if ((l_U66) || ((l_U67) || (l_U71)))
                    {
                        if (((l_U98) || (l_U97)) AND (l_U71))
                        {
                            if (NOT (l_U408 == 2))
                            {
                                GET_HUD_COLOUR( 1, ref uVar30, ref uVar31, ref uVar32, ref uVar33 );
                                sub_54207( uVar30, uVar31, uVar32, uVar33 );
                                l_U408 = 2;
                            }
                        }
                        else if (NOT (l_U408 == 3))
                        {
                            GET_HUD_COLOUR( 10, ref uVar30, ref uVar31, ref uVar32, ref uVar33 );
                            sub_54207( uVar30, uVar31, uVar32, uVar33 );
                            l_U408 = 3;
                        }
                    }
                    else if (NOT (l_U408 == 1))
                    {
                        GET_HUD_COLOUR( 7, ref uVar30, ref uVar31, ref uVar32, ref uVar33 );
                        sub_54207( uVar30, uVar31, uVar32, uVar33 );
                        l_U408 = 1;
                    }
                    if (fVar40 < l_U473[I]._fU40)
                    {
                        fVar48 = fVar40 / l_U473[I]._fU40;
                    }
                    else if (fVar40 > l_U473[I]._fU44)
                    {
                        fVar48 = 1.00000000 - ((fVar40 - l_U473[I]._fU44) / (1.00000000 - l_U473[I]._fU44));
                    }
                    else
                    {
                        fVar48 = 1.00000000;
                    }
                    fVar48 *= TO_FLOAT( uVar33 );
                    uVar33 = ROUND( fVar48 );
                    DRAW_SPRITE_WITH_FIXED_ROTATION( l_U459, fVar7, fVar8, fVar3, fVar4, fVar5 * l_U241, l_U385, l_U386, l_U387, l_U388 );
                    DRAW_SPRITE_WITH_FIXED_ROTATION( l_U459, fVar7, fVar8, fVar3, fVar4, fVar5, l_U385, l_U386, l_U387, l_U388 );
                }
            }
        }
        l_U102 = 1;
    }
    return;
}

float sub_49932(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    float fVar5;

    GET_TEXTURE_RESOLUTION( uParam0, ref uVar3, ref uVar4 );
    fVar5 = (TO_FLOAT( uVar4 )) / (TO_FLOAT( uVar3 ));
    switch (l_U351)
    {
        case 0:
        return 1.00000000 * fVar5;
        break;
        case 1:
        case 2:
        case 3:
        case 4:
        return (4.00000000 / 3.00000000) * fVar5;
        break;
    }
    return (4.00000000 / 3.00000000) * fVar5;
}

float sub_51299()
{
    switch (l_U351)
    {
        case 0:
        return 1.00000000;
        break;
        case 1:
        case 2:
        case 3:
        case 4:
        return 4.00000000 / 3.00000000;
        break;
    }
    return 4.00000000 / 3.00000000;
}

void sub_52906(unknown uParam0)
{
    GET_GAME_TIMER( ref l_U398 );
    l_U392 = uParam0;
    l_U393 = l_U394;
    return;
}

void sub_53266(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5)
{
    unknown uVar8;
    unknown uVar9;
    unknown Result;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;

    Result = {uParam0};
    uVar8 = COS( uParam3._fU0 );
    uVar9 = SIN( uParam3._fU0 );
    uVar13._fU0 = uParam0._fU0;
    uVar13._fU4 = (uVar8 * Result._fU4) - (uVar9 * Result._fU8);
    uVar13._fU8 = (uVar9 * Result._fU4) + (uVar8 * Result._fU8);
    Result = {uVar13};
    uVar8 = COS( uParam3._fU4 );
    uVar9 = SIN( uParam3._fU4 );
    uVar13._fU0 = (uVar8 * Result._fU0) + (uVar9 * Result._fU8);
    uVar13._fU4 = uParam0._fU4;
    uVar13._fU8 = (uVar8 * Result._fU8) - (uVar9 * Result._fU0);
    Result = {uVar13};
    uVar8 = COS( uParam3._fU8 );
    uVar9 = SIN( uParam3._fU8 );
    uVar13._fU0 = (uVar8 * Result._fU0) - (uVar9 * Result._fU4);
    uVar13._fU4 = (uVar9 * Result._fU0) + (uVar8 * Result._fU4);
    uVar13._fU8 = uParam0._fU8;
    Result = {uVar13};
    return Result;
}

void sub_54207(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    GET_GAME_TIMER( ref l_U390 );
    l_U377 = uParam0;
    l_U378 = uParam1;
    l_U379 = uParam2;
    l_U380 = uParam3;
    l_U381 = l_U385;
    l_U382 = l_U386;
    l_U383 = l_U387;
    l_U384 = l_U388;
    return;
}

void sub_55845(boolean bParam0)
{
    l_U323 = 0;
    l_U324 = 0;
    l_U325 = 0;
    l_U327 = 0;
    l_U328 = 0;
    l_U329 = 0;
    l_U330 = 0;
    l_U326 = 0;
    l_U331 = 0;
    l_U332 = 0;
    l_U333 = 0;
    l_U334 = 0;
    l_U335 = 0;
    if (NOT bParam0)
    {
        l_U299 = 0;
    }
    l_U255 = 0;
    l_U95 = 0;
    l_U61 = 0;
    sub_55964();
    sub_55993();
    return;
}

void sub_55964()
{
    l_U75 = 0;
    l_U68 = 0;
    return;
}

void sub_55993()
{
    l_U72 = 0;
    l_U332 = 0;
    l_U330 = 0;
    l_U85 = 0;
    l_U76 = 0;
    l_U71 = 0;
    return;
}

void sub_56113(boolean bParam0, boolean bParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    int iVar7;
    unknown uVar8;
    float fVar9;
    float fVar10;

    REQUEST_ANIMS( sub_56124( bParam0 ) );
    if (HAVE_ANIMS_LOADED( sub_56124( bParam0 ) ))
    {
        if (NOT bParam1)
        {
            if (NOT l_U67)
            {
                if ((l_U70) AND ((l_U73) || (l_U66)))
                {
                    if (NOT (l_U328 == -1))
                    {
                        l_U67 = 1;
                        l_U371 = l_U328;
                    }
                    else
                    {
                        PRINTSTRING( "checked for hold but wasn't one" );
                        PRINTNL();
                    }
                }
            }
            if (l_U67)
            {
                if (NOT l_U71)
                {
                    if ((NOT (l_U371 == -1)) AND (NOT (l_U309 == l_U310)))
                    {
                        l_U357 = 0;
                        sub_56644( l_U371, bParam0 );
                    }
                }
                else if (NOT l_U113)
                {
                    if (NOT (l_U309 == l_U310))
                    {
                        PRINTSTRING( "decrementing iHoldBeatsLeftToPlay = " );
                        l_U332--;
                        PRINTINT( l_U332 );
                        PRINTNL();
                    }
                }
                else
                {
                    l_U113 = 0;
                }
                if ((NOT (l_U332 < 0)) AND (NOT (((l_U330 - l_U332) < 2) || (l_U328 == -1))))
                {
                    if (NOT (l_U309 == l_U310))
                    {
                        if ((l_U103) AND ((l_U98) || (l_U97)))
                        {
                            l_U357 += 2;
                        }
                        else
                        {
                            l_U357++;
                        }
                    }
                    l_U372 = 0;
                }
                else
                {
                    iVar7 = l_U330 - l_U332;
                    if ((l_U332 > 2) AND (iVar7 > 2))
                    {
                        if (NOT (l_U309 == l_U310))
                        {
                            l_U372++;
                        }
                    }
                    if (l_U332 > 2)
                    {
                        if (l_U372 > 2)
                        {
                            l_U357 = 0;
                            l_U86 = 1;
                        }
                    }
                }
                if (l_U332 == 0)
                {
                    l_U227 = 0.00000000;
                    l_U67 = 0;
                    l_U66 = 0;
                    l_U71 = 0;
                    l_U107 = 0;
                    SETTIMERB( 0 );
                    if (NOT l_U105)
                    {
                        if (l_U357 >= (l_U330 - 2))
                        {
                            GENERATE_RANDOM_INT_IN_RANGE( 0, 2, ref iVar7 );
                            if (iVar7 == 0)
                            {
                                if (IS_PLAYER_PLAYING( sub_1530() ))
                                {
                                    SAY_AMBIENT_SPEECH( sub_1661(), "DANCING_GAME_LUIS_GOOD", 1, 1, 2 );
                                }
                            }
                            else if (NOT (IS_CHAR_INJURED( g_U30207 )))
                            {
                                SAY_AMBIENT_SPEECH( g_U30207, "DANCING_GAME_GOOD", 1, 1, 2 );
                            }
                        }
                    }
                    sub_68903( (TO_FLOAT( l_U357 )) * 2.00000000, 1 );
                    sub_44347();
                    if (l_U105)
                    {
                        l_U361 = 50;
                    }
                    l_U337 = 2;
                    l_U372 = 0;
                    l_U357 = 0;
                    l_U358 = 4;
                }
            }
            if (NOT l_U71)
            {
                if (NOT (l_U323 == 0))
                {
                    PRINTSTRING( "Going into shot 1" );
                    PRINTNL();
                    sub_69300( l_U323, bParam0 );
                }
            }
        }
        if (NOT (l_U309 == l_U310))
        {
            if (l_U358 > 0)
            {
                l_U358--;
            }
        }
        if (NOT bParam0)
        {
            if (NOT (IS_CHAR_INJURED( g_U30207 )))
            {
                if (NOT l_U92)
                {
                    if (l_U71)
                    {
                        iVar7 = l_U330 - l_U332;
                        if (iVar7 > 1)
                        {
                            if (NOT (sub_56681( l_U434 )))
                            {
                                if (NOT (IS_CHAR_PLAYING_ANIM( g_U30207, sub_56124( bParam0 ), l_U434 )))
                                {
                                    TASK_PLAY_ANIM_WITH_FLAGS_AND_START_PHASE( g_U30207, l_U434, sub_56124( bParam0 ), 2.00000000, -1, 2048, 0.00000000 );
                                    l_U92 = 1;
                                }
                            }
                        }
                    }
                }
                else if (IS_CHAR_PLAYING_ANIM( g_U30207, sub_56124( bParam0 ), l_U434 ))
                {
                    SET_CHAR_ANIM_BLEND_OUT_DELTA( g_U30207, sub_56124( bParam0 ), l_U434, -2.00000000 );
                    GET_CHAR_ANIM_TOTAL_TIME( g_U30207, sub_56124( bParam0 ), l_U434, ref uVar8 );
                    GET_CHAR_ANIM_CURRENT_TIME( g_U30207, sub_56124( bParam0 ), l_U434, ref fVar9 );
                    fVar10 = (uVar8 - 0.50000000) / uVar8;
                    if (fVar9 > fVar10)
                    {
                        TASK_PLAY_ANIM_WITH_FLAGS_AND_START_PHASE( g_U30207, l_U436, sub_56124( bParam0 ), 2.10000000, -1, 16, l_U199 );
                        l_U92 = 0;
                    }
                }
            }
        }
        if (l_U83)
        {
            sub_79867( bParam0 );
        }
        if (l_U84)
        {
            sub_81716( bParam0 );
        }
        if (l_U82)
        {
            sub_82587( bParam0 );
        }
    }
    return;
}

string sub_56124(boolean bParam0)
{
    switch (l_U359)
    {
        case 0:
        if (NOT bParam0)
        {
            return "missdance_bama_solo_";
        }
        else
        {
            return "missdance_bama_pair_";
        }
        break;
        case 1:
        if (NOT bParam0)
        {
            return "missdance_m9_solo_";
        }
        else
        {
            return "missdance_m9_pair_";
        }
        break;
        case 2:
        if (NOT bParam0)
        {
            return "missdance_herc_solo_";
        }
        else
        {
            return "missdance_herc_pair_";
        }
        break;
    }
    SCRIPT_ASSERT( "DANCE_ANIM_FOLDER - returned no folder!" );
    return "";
}

int sub_56644(unknown uParam0, boolean bParam1)
{
    if (((sub_56822( sub_1661(), l_U429, sub_56124( bParam1 ), 0 )) || (NOT (sub_56670( sub_1661(), l_U429, sub_56124( bParam1 ) )))) AND ((sub_56822( sub_1661(), l_U433, sub_56124( bParam1 ), 0 )) || (NOT (sub_56670( sub_1661(), l_U433, sub_56124( bParam1 ) )))))
    {
        sub_57011();
        l_U429 = sub_57063( uParam0, bParam1, 0 );
        l_U434 = sub_57063( uParam0, bParam1, 1 );
        l_U230 = 1.00000000 - l_U145;
        l_U229 = (1.00000000 / (TO_FLOAT( l_U330 ))) * l_U230;
        if (NOT (sub_56681( l_U429 )))
        {
            TASK_PLAY_ANIM_WITH_FLAGS_AND_START_PHASE( sub_1661(), l_U429, sub_56124( bParam1 ), l_U228, -1, 2048, l_U229 );
        }
        if (bParam1)
        {
            if (NOT (sub_56681( l_U434 )))
            {
                if (NOT (IS_CHAR_INJURED( g_U30207 )))
                {
                    TASK_PLAY_ANIM_WITH_FLAGS_AND_START_PHASE( g_U30207, l_U434, sub_56124( bParam1 ), l_U228, -1, 2048, l_U229 );
                }
            }
        }
        GET_GAME_TIMER( ref l_U297 );
        l_U269 = uParam0;
        l_U332 = l_U330;
        PRINTSTRING( "setting iHoldBeatsLeftToPlay = " );
        PRINTINT( l_U332 );
        PRINTNL();
        l_U71 = 1;
        l_U115 = 0;
        l_U72 = 1;
        l_U76 = 1;
        l_U85 = 0;
        l_U372 = 0;
        l_U86 = 0;
        PRINTSTRING( "GO_INTO_HOLD - " );
        PRINTINT( uParam0 );
        PRINTSTRING( ", playing anim " );
        PRINTSTRING( l_U429 );
        PRINTNL();
    }
    else
    {
        PRINTSTRING( "not gone into hold 1" );
        PRINTNL();
    }
    return 0;
}

int sub_56670(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (sub_56681( uParam1 ))
    {
        return 0;
    }
    else if (NOT (IS_CHAR_INJURED( uParam0 )))
    {
        if (IS_CHAR_PLAYING_ANIM( uParam0, uParam2, uParam1 ))
        {
            return 1;
        }
    }
    return 0;
}

int sub_56681(unknown uParam0)
{
    if (IS_STRING_NULL( uParam0 ))
    {
        return 1;
    }
    else if (COMPARE_STRING( uParam0, "" ))
    {
        return 1;
    }
    return 0;
}

int sub_56822(unknown uParam0, unknown uParam1, unknown uParam2, float fParam3)
{
    float fVar6;

    if (sub_56681( uParam1 ))
    {
        return 0;
    }
    else if (NOT (IS_CHAR_INJURED( uParam0 )))
    {
        if (IS_CHAR_PLAYING_ANIM( uParam0, uParam2, uParam1 ))
        {
            GET_CHAR_ANIM_CURRENT_TIME( uParam0, uParam2, uParam1, ref fVar6 );
            if (fParam3 > 0.00000000)
            {
                if (fVar6 > fParam3)
                {
                    return 1;
                }
            }
            else if (fVar6 > l_U178)
            {
                return 1;
            }
        }
    }
    return 0;
}

void sub_57011()
{
    l_U295++;
    if (l_U295 > 1)
    {
        l_U295 = 0;
    }
    return;
}

string sub_57063(unknown uParam0, boolean bParam1, boolean bParam2)
{
    unknown uVar5;

    uVar5 = l_U320;
    switch (l_U359)
    {
        case 0:
        if (NOT bParam1)
        {
            if (NOT bParam2)
            {
                switch (uVar5)
                {
                    case 0:
                    switch (uParam0)
                    {
                        case 10:
                        l_U330 = 8;
                        l_U341 = 0;
                        return "MHold_L1_NE_8beat_StopL1";
                        break;
                        case 11:
                        l_U330 = 10;
                        l_U341 = 3;
                        return "MHold_L1_NW_10beat_StopR2";
                        break;
                        case 12:
                        l_U330 = 8;
                        l_U341 = 2;
                        return "MHold_L1_SE_8beat_StopR1";
                        break;
                        case 13:
                        l_U330 = 8;
                        l_U341 = 0;
                        return "MHold_L1_SW_8beat_StopL1";
                        break;
                    }
                    break;
                    case 1:
                    switch (uParam0)
                    {
                        case 10:
                        l_U330 = 8;
                        l_U341 = 0;
                        return "MHold_L2_NE_8beat_StopL1";
                        break;
                        case 11:
                        l_U330 = 10;
                        l_U341 = 3;
                        return "MHold_L2_NW_10beat_StopR2";
                        break;
                        case 12:
                        l_U330 = 8;
                        l_U341 = 2;
                        return "MHold_L2_SE_8beat_StopR1";
                        break;
                        case 13:
                        l_U330 = 9;
                        l_U341 = 0;
                        return "MHold_L2_SW_9beat_StopL1";
                        break;
                    }
                    break;
                    case 2:
                    switch (uParam0)
                    {
                        case 10:
                        l_U330 = 9;
                        l_U341 = 0;
                        return "MHold_R1_NE_9beat_StopL1";
                        break;
                        case 11:
                        l_U330 = 8;
                        l_U341 = 2;
                        return "MHold_R1_NW_8beat_StopR1";
                        break;
                        case 12:
                        l_U330 = 8;
                        l_U341 = 2;
                        return "MHold_R1_SE_8beat_StopR1";
                        break;
                        case 13:
                        l_U330 = 8;
                        l_U341 = 1;
                        return "MHold_R1_SW_8beat_StopL2";
                        break;
                    }
                    break;
                    case 3:
                    switch (uParam0)
                    {
                        case 10:
                        l_U330 = 9;
                        l_U341 = 0;
                        return "MHold_R2_NE_9beat_StopL1";
                        break;
                        case 11:
                        l_U330 = 8;
                        l_U341 = 0;
                        return "MHold_R2_NW_8beat_StopL1";
                        break;
                        case 12:
                        l_U330 = 9;
                        l_U341 = 3;
                        return "MHold_R2_SE_9beat_StopR2";
                        break;
                        case 13:
                        l_U330 = 8;
                        l_U341 = 3;
                        return "MHold_R2_SW_8beat_StopR2";
                        break;
                    }
                    break;
                }
            }
            else
            {
                switch (uVar5)
                {
                    case 0:
                    switch (uParam0)
                    {
                        case 10:
                        return "FHold_L1_NE_8Beat_StopL1";
                        break;
                        case 11:
                        return "FHold_L1_NW_10Beat_StopR2";
                        break;
                        case 12:
                        return "FHold_L1_SE_8Beat_StopR1";
                        break;
                        case 13:
                        return "FHold_L1_SW_8Beat_StopL1";
                        break;
                    }
                    break;
                    case 1:
                    switch (uParam0)
                    {
                        case 10:
                        return "FHold_L2_NE_8Beat_StopL1";
                        break;
                        case 11:
                        return "FHold_L2_NW_10Beat_StopR2";
                        break;
                        case 12:
                        return "FHold_L2_SE_8Beat_StopR1";
                        break;
                        case 13:
                        return "FHold_L2_SW_9Beat_StopL1";
                        break;
                    }
                    break;
                    case 2:
                    switch (uParam0)
                    {
                        case 10:
                        return "FHold_R1_NE_9Beat_StopL1";
                        break;
                        case 11:
                        return "FHold_R1_NW_8Beat_StopR1";
                        break;
                        case 12:
                        return "FHold_R1_SE_8Beat_StopR1";
                        break;
                        case 13:
                        return "FHold_R1_SW_8Beat_StopL2";
                        break;
                    }
                    break;
                    case 3:
                    switch (uParam0)
                    {
                        case 10:
                        return "FHold_R2_NE_9Beat_StopL1";
                        break;
                        case 11:
                        return "FHold_R2_NW_9Beat_StopL1";
                        break;
                        case 12:
                        return "FHold_R2_SE_9Beat_StopR2";
                        break;
                        case 13:
                        return "FHold_R2_SW_8Beat_StopR2";
                        break;
                    }
                    break;
                }
            }
        }
        else if (NOT bParam2)
        {
            switch (uVar5)
            {
                case 0:
                switch (uParam0)
                {
                    case 10:
                    l_U330 = 6;
                    l_U341 = 0;
                    return "MHold_L1_NE_6beat_StopL1";
                    break;
                    case 11:
                    l_U330 = 7;
                    l_U341 = 2;
                    return "MHold_L1_NW_7beat_StopR1";
                    break;
                    case 12:
                    l_U330 = 6;
                    l_U341 = 0;
                    return "MHold_L1_SE_6beat_StopL1";
                    break;
                    case 13:
                    l_U330 = 8;
                    l_U341 = 2;
                    return "MHold_L1_SW_8beat_StopR1";
                    break;
                }
                break;
                case 1:
                switch (uParam0)
                {
                    case 10:
                    l_U330 = 8;
                    l_U341 = 1;
                    return "MHold_L2_NE_8beat_StopL2";
                    break;
                    case 11:
                    l_U330 = 6;
                    l_U341 = 3;
                    return "MHold_L2_NW_6beat_StopR2";
                    break;
                    case 12:
                    l_U330 = 8;
                    l_U341 = 0;
                    return "MHold_L2_SE_8beat_StopL1";
                    break;
                    case 13:
                    l_U330 = 6;
                    l_U341 = 2;
                    return "MHold_L2_SW_6beat_StopR1";
                    break;
                }
                break;
                case 2:
                switch (uParam0)
                {
                    case 10:
                    l_U330 = 8;
                    l_U341 = 0;
                    return "MHold_R1_NE_8beat_StopL1";
                    break;
                    case 11:
                    l_U330 = 6;
                    l_U341 = 2;
                    return "MHold_R1_NW_6beat_StopR1";
                    break;
                    case 12:
                    l_U330 = 7;
                    l_U341 = 0;
                    return "MHold_R1_SE_7beat_StopL1";
                    break;
                    case 13:
                    l_U330 = 5;
                    l_U341 = 2;
                    return "MHold_R1_SW_5beat_StopR1";
                    break;
                }
                break;
                case 3:
                switch (uParam0)
                {
                    case 10:
                    l_U330 = 6;
                    l_U341 = 0;
                    return "MHold_R2_NE_6beat_StopL1";
                    break;
                    case 11:
                    l_U330 = 8;
                    l_U341 = 2;
                    return "MHold_R2_NW_8beat_StopR1";
                    break;
                    case 12:
                    l_U330 = 6;
                    l_U341 = 0;
                    return "MHold_R2_SE_6beat_StopL1";
                    break;
                    case 13:
                    l_U330 = 8;
                    l_U341 = 2;
                    return "MHold_R2_SW_8beat_StopR1";
                    break;
                }
                break;
            }
        }
        else
        {
            switch (uVar5)
            {
                case 0:
                switch (uParam0)
                {
                    case 10:
                    return "FHold_L1_NE_6beat_StopL1";
                    break;
                    case 11:
                    return "FHold_L1_NW_7beat_StopR1";
                    break;
                    case 12:
                    return "FHold_L1_SE_6beat_StopL1";
                    break;
                    case 13:
                    return "FHold_L1_SW_8beat_StopR1";
                    break;
                }
                break;
                case 1:
                switch (uParam0)
                {
                    case 10:
                    return "FHold_L2_NE_8beat_StopL2";
                    break;
                    case 11:
                    return "FHold_L2_NW_6beat_StopR2";
                    break;
                    case 12:
                    return "FHold_L2_SE_8beat_StopL1";
                    break;
                    case 13:
                    return "FHold_L2_SW_6beat_StopR1";
                    break;
                }
                break;
                case 2:
                switch (uParam0)
                {
                    case 10:
                    return "FHold_R1_NE_8beat_StopL1";
                    break;
                    case 11:
                    return "FHold_R1_NW_6beat_StopR1";
                    break;
                    case 12:
                    return "FHold_R1_SE_7beat_StopL1";
                    break;
                    case 13:
                    return "FHold_R1_SW_5beat_StopR1";
                    break;
                }
                break;
                case 3:
                switch (uParam0)
                {
                    case 10:
                    return "FHold_R2_NE_6beat_StopL1";
                    break;
                    case 11:
                    return "FHold_R2_NW_8beat_StopR1";
                    break;
                    case 12:
                    return "FHold_R2_SE_6beat_StopL1";
                    break;
                    case 13:
                    return "FHold_R2_SW_8beat_StopR1";
                    break;
                }
                break;
            }
        }
        break;
        case 1:
        if (NOT bParam1)
        {
            if (NOT bParam2)
            {
                switch (uVar5)
                {
                    case 0:
                    switch (uParam0)
                    {
                        case 10:
                        l_U330 = 12;
                        l_U341 = 1;
                        return "MHold_L1_NE_12beat_StopL2";
                        break;
                        case 11:
                        l_U330 = 11;
                        l_U341 = 0;
                        return "MHold_L1_NW_11beat_StopL1";
                        break;
                        case 12:
                        l_U330 = 11;
                        l_U341 = 0;
                        return "MHold_L1_SE_11beat_StopL1";
                        break;
                        case 13:
                        l_U330 = 12;
                        l_U341 = 1;
                        return "MHold_L1_SW_12beat_StopL2";
                        break;
                    }
                    break;
                    case 1:
                    switch (uParam0)
                    {
                        case 10:
                        l_U330 = 11;
                        l_U341 = 0;
                        return "MHold_L2_NE_11beat_StopL1";
                        break;
                        case 11:
                        l_U330 = 11;
                        l_U341 = 0;
                        return "MHold_L2_NW_11beat_StopL1";
                        break;
                        case 12:
                        l_U330 = 11;
                        l_U341 = 0;
                        return "MHold_L2_SE_11beat_StopL1";
                        break;
                        case 13:
                        l_U330 = 11;
                        l_U341 = 0;
                        return "MHold_L2_SW_11beat_StopL1";
                        break;
                    }
                    break;
                    case 2:
                    switch (uParam0)
                    {
                        case 10:
                        l_U330 = 12;
                        l_U341 = 2;
                        return "MHold_R1_NE_12beat_StopR1";
                        break;
                        case 11:
                        l_U330 = 12;
                        l_U341 = 2;
                        return "MHold_R1_NW_12beat_StopR1";
                        break;
                        case 12:
                        l_U330 = 11;
                        l_U341 = 2;
                        return "MHold_R1_SE_11beat_StopR1";
                        break;
                        case 13:
                        l_U330 = 11;
                        l_U341 = 2;
                        return "MHold_R1_SW_11beat_StopR1";
                        break;
                    }
                    break;
                    case 3:
                    switch (uParam0)
                    {
                        case 10:
                        l_U330 = 11;
                        l_U341 = 2;
                        return "MHold_R2_NE_11beat_StopR1";
                        break;
                        case 11:
                        l_U330 = 11;
                        l_U341 = 2;
                        return "MHold_R2_NW_11beat_StopR1";
                        break;
                        case 12:
                        l_U330 = 11;
                        l_U341 = 2;
                        return "MHold_R2_SE_11beat_StopR1";
                        break;
                        case 13:
                        l_U330 = 11;
                        l_U341 = 2;
                        return "MHold_R2_SW_11beat_StopR1";
                        break;
                    }
                    break;
                }
            }
            else
            {
                switch (uVar5)
                {
                    case 0:
                    switch (uParam0)
                    {
                        case 10:
                        return "FHold_L1_SW_12beat_StopL2";
                        break;
                        case 11:
                        return "FHold_L1_NW_11beat_StopL1";
                        break;
                        case 12:
                        return "FHold_L1_NW_11beat_StopL1";
                        break;
                        case 13:
                        return "FHold_L1_SW_12beat_StopL2";
                        break;
                    }
                    break;
                    case 1:
                    switch (uParam0)
                    {
                        case 10:
                        return "FHold_L2_NW_11beat_StopL1";
                        break;
                        case 11:
                        return "FHold_L2_NW_11beat_StopL1";
                        break;
                        case 12:
                        return "FHold_L2_NW_11beat_StopL1";
                        break;
                        case 13:
                        return "FHold_L2_NW_11beat_StopL1";
                        break;
                    }
                    break;
                    case 2:
                    switch (uParam0)
                    {
                        case 10:
                        return "FHold_R1_NE_12beat_StopR1";
                        break;
                        case 11:
                        return "FHold_R1_NE_12beat_StopR1";
                        break;
                        case 12:
                        return "FHold_R1_SE_11beat_StopR1";
                        break;
                        case 13:
                        return "FHold_R1_SE_11beat_StopR1";
                        break;
                    }
                    break;
                    case 3:
                    switch (uParam0)
                    {
                        case 10:
                        return "FHold_R2_NE_11beat_StopR1";
                        break;
                        case 11:
                        return "FHold_R2_NE_11beat_StopR1";
                        break;
                        case 12:
                        return "FHold_R2_NE_11beat_StopR1";
                        break;
                        case 13:
                        return "FHold_R2_NE_11beat_StopR1";
                        break;
                    }
                    break;
                }
            }
        }
        else if (NOT bParam2)
        {
            switch (uVar5)
            {
                case 0:
                switch (uParam0)
                {
                    case 10:
                    l_U330 = 12;
                    l_U341 = 2;
                    return "MHold_L1_NE_12beat_StopR1";
                    break;
                    case 11:
                    l_U330 = 10;
                    l_U341 = 0;
                    return "MHold_L1_NW_10beat_StopL1";
                    break;
                    case 12:
                    l_U330 = 12;
                    l_U341 = 2;
                    return "MHold_L1_SE_12beat_StopR1";
                    break;
                    case 13:
                    l_U330 = 12;
                    l_U341 = 0;
                    return "MHold_L1_SW_12beat_StopL1";
                    break;
                }
                break;
                case 1:
                switch (uParam0)
                {
                    case 10:
                    l_U330 = 11;
                    l_U341 = 2;
                    return "MHold_L2_NE_11beat_StopR1";
                    break;
                    case 11:
                    l_U330 = 9;
                    l_U341 = 0;
                    return "MHold_L2_NW_9beat_StopL1";
                    break;
                    case 12:
                    l_U330 = 12;
                    l_U341 = 2;
                    return "MHold_L2_SE_12beat_StopR1";
                    break;
                    case 13:
                    l_U330 = 11;
                    l_U341 = 0;
                    return "MHold_L2_SW_11beat_StopL1";
                    break;
                }
                break;
                case 2:
                switch (uParam0)
                {
                    case 10:
                    l_U330 = 10;
                    l_U341 = 2;
                    return "MHold_R1_NE_10beat_StopR1";
                    break;
                    case 11:
                    l_U330 = 8;
                    l_U341 = 0;
                    return "MHold_R1_NW_8beat_StopL1";
                    break;
                    case 12:
                    l_U330 = 11;
                    l_U341 = 2;
                    return "MHold_R1_SE_11beat_StopR1";
                    break;
                    case 13:
                    l_U330 = 12;
                    l_U341 = 0;
                    return "MHold_R1_SW_12beat_StopL1";
                    break;
                }
                break;
                case 3:
                switch (uParam0)
                {
                    case 10:
                    l_U330 = 10;
                    l_U341 = 0;
                    return "MHold_R2_NE_10beat_StopL1";
                    break;
                    case 11:
                    l_U330 = 11;
                    l_U341 = 3;
                    return "MHold_R2_NW_11beat_StopR2";
                    break;
                    case 12:
                    l_U330 = 10;
                    l_U341 = 2;
                    return "MHold_R2_SE_10beat_StopR1";
                    break;
                    case 13:
                    l_U330 = 11;
                    l_U341 = 0;
                    return "MHold_R2_SW_11beat_StopL1";
                    break;
                }
                break;
            }
        }
        else
        {
            switch (uVar5)
            {
                case 0:
                switch (uParam0)
                {
                    case 10:
                    return "fhold_l1_ne_12beat_stopR1";
                    break;
                    case 11:
                    return "fhold_l1_nw_10beat_stopL1";
                    break;
                    case 12:
                    return "fhold_l1_se_12beat_stopR1";
                    break;
                    case 13:
                    return "fhold_l1_sw_12beat_stopL1";
                    break;
                }
                break;
                case 1:
                switch (uParam0)
                {
                    case 10:
                    return "fhold_l2_ne_11beat_stopR1";
                    break;
                    case 11:
                    return "fhold_l2_nw_9beat_stopL1";
                    break;
                    case 12:
                    return "fhold_l2_se_12beat_stopR1";
                    break;
                    case 13:
                    return "fhold_l2_sw_11beat_stopL1";
                    break;
                }
                break;
                case 2:
                switch (uParam0)
                {
                    case 10:
                    return "fhold_r1_ne_10beat_stopR1";
                    break;
                    case 11:
                    return "fhold_r1_nw_8beat_stopL1";
                    break;
                    case 12:
                    return "fhold_r1_se_11beat_stopR1";
                    break;
                    case 13:
                    return "fhold_r1_sw_12beat_stopL1";
                    break;
                }
                break;
                case 3:
                switch (uParam0)
                {
                    case 10:
                    return "fhold_r2_ne_10beat_stopL1";
                    break;
                    case 11:
                    return "fhold_r2_nw_11beat_stopR2";
                    break;
                    case 12:
                    return "fhold_r2_se_10beat_stopR1";
                    break;
                    case 13:
                    return "fhold_r2_sw_11beat_stopL1";
                    break;
                }
                break;
            }
        }
        break;
        case 2:
        if (NOT bParam1)
        {
            if (NOT bParam2)
            {
                switch (uVar5)
                {
                    case 0:
                    switch (uParam0)
                    {
                        case 10:
                        l_U330 = 8;
                        l_U341 = 0;
                        return "MHold_L1_NE_8beat_StopL1";
                        break;
                        case 11:
                        l_U330 = 8;
                        l_U341 = 0;
                        return "MHold_L1_NW_8beat_StopL1";
                        break;
                        case 12:
                        l_U330 = 6;
                        l_U341 = 0;
                        return "MHold_L1_SE_6beat_StopL1";
                        break;
                        case 13:
                        l_U330 = 6;
                        l_U341 = 0;
                        return "MHold_L1_SW_6beat_StopL1";
                        break;
                    }
                    break;
                    case 1:
                    switch (uParam0)
                    {
                        case 10:
                        l_U330 = 8;
                        l_U341 = 1;
                        return "MHold_L2_NE_8beat_StopL2";
                        break;
                        case 11:
                        l_U330 = 8;
                        l_U341 = 1;
                        return "MHold_L2_NW_8beat_StopL2";
                        break;
                        case 12:
                        l_U330 = 6;
                        l_U341 = 1;
                        return "MHold_L2_SE_6beat_StopL2";
                        break;
                        case 13:
                        l_U330 = 6;
                        l_U341 = 1;
                        return "MHold_L2_SW_6beat_StopL2";
                        break;
                    }
                    break;
                    case 2:
                    switch (uParam0)
                    {
                        case 10:
                        l_U330 = 8;
                        l_U341 = 2;
                        return "MHold_R1_NE_8beat_StopR1";
                        break;
                        case 11:
                        l_U330 = 8;
                        l_U341 = 2;
                        return "MHold_R1_NW_8beat_StopR1";
                        break;
                        case 12:
                        l_U330 = 6;
                        l_U341 = 0;
                        return "MHold_R1_SE_6beat_StopL1";
                        break;
                        case 13:
                        l_U330 = 6;
                        l_U341 = 2;
                        return "MHold_R1_SW_6beat_StopR1";
                        break;
                    }
                    break;
                    case 3:
                    switch (uParam0)
                    {
                        case 10:
                        l_U330 = 8;
                        l_U341 = 3;
                        return "MHold_R2_NE_8beat_StopR2";
                        break;
                        case 11:
                        l_U330 = 8;
                        l_U341 = 3;
                        return "MHold_R2_NW_8beat_StopR2";
                        break;
                        case 12:
                        l_U330 = 6;
                        l_U341 = 3;
                        return "MHold_R2_SE_6beat_StopR2";
                        break;
                        case 13:
                        l_U330 = 6;
                        l_U341 = 3;
                        return "MHold_R2_SW_6beat_StopR2";
                        break;
                    }
                    break;
                }
            }
            else
            {
                switch (uVar5)
                {
                    case 0:
                    switch (uParam0)
                    {
                        case 10:
                        return "fhold_l1_l_8beat_stopL1";
                        break;
                        case 11:
                        return "fhold_l1_r_8beat_stopL1";
                        break;
                        case 12:
                        return "fhold_l1_l_8beat_stopL1";
                        break;
                        case 13:
                        return "fhold_l1_r_8beat_stopL1";
                        break;
                    }
                    break;
                    case 1:
                    switch (uParam0)
                    {
                        case 10:
                        return "fhold_l2_l_8beat_stopL2";
                        break;
                        case 11:
                        return "fhold_l2_l_8beat_stopL2";
                        break;
                        case 12:
                        return "fhold_l2_l_8beat_stopL2";
                        break;
                        case 13:
                        return "fhold_l2_l_8beat_stopL2";
                        break;
                    }
                    break;
                    case 2:
                    switch (uParam0)
                    {
                        case 10:
                        return "fhold_r1_l_8beat_stopR1";
                        break;
                        case 11:
                        return "fhold_r1_r_8beat_stopR1";
                        break;
                        case 12:
                        return "fhold_r1_l_8beat_stopR1";
                        break;
                        case 13:
                        return "fhold_r1_r_8beat_stopR1";
                        break;
                    }
                    break;
                    case 3:
                    switch (uParam0)
                    {
                        case 10:
                        return "fhold_r2_r_8beat_stopR2";
                        break;
                        case 11:
                        return "fhold_r2_r_8beat_stopR2";
                        break;
                        case 12:
                        return "fhold_r2_r_8beat_stopR2";
                        break;
                        case 13:
                        return "fhold_r2_r_8beat_stopR2";
                        break;
                    }
                    break;
                }
            }
        }
        else if (NOT bParam2)
        {
            switch (uVar5)
            {
                case 0:
                switch (uParam0)
                {
                    case 10:
                    l_U330 = 6;
                    l_U341 = 0;
                    return "MHold_L1_NE_6beat_StopL1";
                    break;
                    case 11:
                    l_U330 = 8;
                    l_U341 = 2;
                    return "MHold_L1_NW_8beat_StopR1";
                    break;
                    case 12:
                    l_U330 = 6;
                    l_U341 = 2;
                    return "MHold_L1_SE_6beat_StopR1";
                    break;
                    case 13:
                    l_U330 = 7;
                    l_U341 = 0;
                    return "MHold_L1_SW_7beat_StopL1";
                    break;
                }
                break;
                case 1:
                switch (uParam0)
                {
                    case 10:
                    l_U330 = 8;
                    l_U341 = 0;
                    return "MHold_L2_NE_8beat_StopL1";
                    break;
                    case 11:
                    l_U330 = 7;
                    l_U341 = 2;
                    return "MHold_L2_NW_7beat_StopR1";
                    break;
                    case 12:
                    l_U330 = 6;
                    l_U341 = 2;
                    return "MHold_L2_SE_6beat_StopR1";
                    break;
                    case 13:
                    l_U330 = 7;
                    l_U341 = 0;
                    return "MHold_L2_SW_7beat_StopL1";
                    break;
                }
                break;
                case 2:
                switch (uParam0)
                {
                    case 10:
                    l_U330 = 8;
                    l_U341 = 0;
                    return "MHold_R1_NE_8beat_StopL1";
                    break;
                    case 11:
                    l_U330 = 6;
                    l_U341 = 2;
                    return "MHold_R1_NW_6beat_StopR1";
                    break;
                    case 12:
                    l_U330 = 7;
                    l_U341 = 2;
                    return "MHold_R1_SE_7beat_StopR1";
                    break;
                    case 13:
                    l_U330 = 6;
                    l_U341 = 0;
                    return "MHold_R1_SW_6beat_StopL1";
                    break;
                }
                break;
                case 3:
                switch (uParam0)
                {
                    case 10:
                    l_U330 = 7;
                    l_U341 = 0;
                    return "MHold_R2_NE_7beat_StopL1";
                    break;
                    case 11:
                    l_U330 = 8;
                    l_U341 = 2;
                    return "MHold_R2_NW_8beat_StopR1";
                    break;
                    case 12:
                    l_U330 = 7;
                    l_U341 = 2;
                    return "MHold_R2_SE_7beat_StopR1";
                    break;
                    case 13:
                    l_U330 = 6;
                    l_U341 = 0;
                    return "MHold_R2_SW_6beat_StopL1";
                    break;
                }
                break;
            }
        }
        else
        {
            switch (uVar5)
            {
                case 0:
                switch (uParam0)
                {
                    case 10:
                    return "FHold_L1_NE_6beat_StopL1";
                    break;
                    case 11:
                    return "FHold_L1_NW_8beat_StopR1";
                    break;
                    case 12:
                    return "FHold_L1_SE_6beat_StopR1";
                    break;
                    case 13:
                    return "FHold_L1_SW_7beat_StopL1";
                    break;
                }
                break;
                case 1:
                switch (uParam0)
                {
                    case 10:
                    return "FHold_L2_NE_8beat_StopL1";
                    break;
                    case 11:
                    return "FHold_L2_NW_7beat_StopR1";
                    break;
                    case 12:
                    return "FHold_L2_SE_6beat_StopR1";
                    break;
                    case 13:
                    return "FHold_L2_SW_7beat_StopL1";
                    break;
                }
                break;
                case 2:
                switch (uParam0)
                {
                    case 10:
                    return "FHold_R1_NE_8beat_StopL1";
                    break;
                    case 11:
                    return "FHold_R1_NW_6beat_StopR1";
                    break;
                    case 12:
                    return "FHold_R1_SE_7beat_StopR1";
                    break;
                    case 13:
                    return "FHold_R1_SW_6beat_StopL1";
                    break;
                }
                break;
                case 3:
                switch (uParam0)
                {
                    case 10:
                    return "FHold_R2_NE_7beat_StopL1";
                    break;
                    case 11:
                    return "FHold_R2_NW_8beat_StopR1";
                    break;
                    case 12:
                    return "FHold_R2_SE_7beat_StopR1";
                    break;
                    case 13:
                    return "FHold_R2_SW_6beat_StopL1";
                    break;
                }
                break;
            }
        }
        break;
    }
    return "";
}

void sub_68903(unknown uParam0, boolean bParam1)
{
    if ((NOT l_U71) AND ((NOT l_U67) AND (NOT l_U66)))
    {
        if (NOT l_U105)
        {
            l_U253 += uParam0;
            l_U299 = CEIL( l_U253 );
        }
        else
        {
            l_U253 += uParam0;
            if (l_U253 > (TO_FLOAT( 50 )))
            {
                l_U253 = TO_FLOAT( 50 );
            }
            l_U299 = CEIL( l_U253 );
            if (NOT l_U106)
            {
                if (l_U299 >= l_U361)
                {
                    l_U299 = l_U361 - 1;
                }
            }
        }
    }
    l_U303 = 0;
    if (l_U254 < 2)
    {
        if (NOT l_U116)
        {
            if (l_U299 > 66)
            {
                if (NOT bParam1)
                {
                    l_U299 = 66;
                }
            }
        }
    }
    else if (l_U299 > 200)
    {
        l_U299 = 200;
    }
    l_U88 = 0;
    return;
}

void sub_69300(int iParam0, unknown uParam1)
{
    float fVar4;

    if (NOT (iParam0 == 0))
    {
        if ((sub_56822( sub_1661(), l_U430, sub_56124( uParam1 ), 1.00000000 + l_U159 )) || (NOT (sub_56670( sub_1661(), l_U430, sub_56124( uParam1 ) ))))
        {
            if ((sub_56822( sub_1661(), l_U429, sub_56124( uParam1 ), 0.95000000 )) || (NOT (sub_56670( sub_1661(), l_U429, sub_56124( uParam1 ) ))))
            {
                sub_69437();
                l_U430 = sub_69489( iParam0, uParam1, 0 );
                SET_CONTENTS_OF_TEXT_WIDGET( l_U469, l_U430 );
                GET_GAME_TIMER( ref l_U297 );
                l_U269 = iParam0;
                if (l_U311 == l_U325)
                {
                    l_U202 = 1.00000000 + l_U145;
                }
                else
                {
                    l_U202 = l_U145;
                }
                fVar4 = 1.00000000 - l_U202;
                if (fVar4 < 0.00000000)
                {
                    fVar4 /= l_U159;
                }
                else
                {
                    fVar4 /= l_U158;
                }
                l_U209 = l_U207 - (fVar4 * (l_U207 - l_U208));
                if (l_U209 < 0.00000000)
                {
                    PRINTSTRING( "*** fShotBlendValue < 0.0 ****" );
                    PRINTNL();
                    PRINTSTRING( "fStartTimeToNextAvailableBeatForShot = " );
                    PRINTFLOAT( l_U202 );
                    PRINTNL();
                    PRINTSTRING( "fTimeToNextBeat = " );
                    PRINTFLOAT( l_U145 );
                    PRINTNL();
                    PRINTSTRING( "fTimeToNextBeat = " );
                    PRINTFLOAT( l_U145 );
                    PRINTNL();
                    PRINTSTRING( "iNextBeatNo = " );
                    PRINTINT( l_U311 );
                    PRINTNL();
                    PRINTSTRING( "iRegisteredBeat = " );
                    PRINTINT( l_U325 );
                    PRINTNL();
                    SCRIPT_ASSERT( "fShotBlendValue < 0.0" );
                }
                if (l_U202 < 1.00000000)
                {
                    l_U212 = 1.00000000 - l_U202;
                }
                else
                {
                    l_U212 = 0.00000000;
                }
                if (NOT (sub_56681( l_U430 )))
                {
                    PRINTSTRING( "go into shot - fShotAnimStartPhase = " );
                    PRINTFLOAT( l_U212 );
                    PRINTNL();
                    TASK_PLAY_ANIM_WITH_FLAGS_AND_START_PHASE( sub_1661(), l_U430, sub_56124( uParam1 ), l_U209, -1, 3072, l_U212 );
                }
                l_U340++;
                if (l_U340 > 0)
                {
                    sub_68903( 1.40000000, 0 );
                    l_U340 = 0;
                }
                l_U339 = 3;
                l_U75 = 1;
                l_U68 = 1;
                PRINTSTRING( "GO_INTO_SHOT - " );
                PRINTINT( iParam0 );
                PRINTSTRING( ", blend value = " );
                PRINTFLOAT( l_U209 );
                PRINTNL();
            }
        }
    }
    return;
}

void sub_69437()
{
    l_U294++;
    if (l_U294 > 1)
    {
        l_U294 = 0;
    }
    return;
}

string sub_69489(unknown uParam0, boolean bParam1, unknown uParam2)
{
    switch (l_U359)
    {
        case 0:
        if (NOT bParam1)
        {
            switch (l_U320)
            {
                case 0:
                switch (uParam0)
                {
                    case 3:
                    case 4:
                    case 5:
                    case 1:
                    switch (l_U350)
                    {
                        case 0:
                        return "solo_male_partial_l1_l";
                        break;
                        case 1:
                        return "solo_male_partial_l1_l";
                        break;
                        case 2:
                        return "solo_male_partial_l1_l";
                        break;
                    }
                    break;
                    case 6:
                    case 7:
                    case 8:
                    case 2:
                    switch (l_U350)
                    {
                        case 0:
                        return "solo_male_partial_l1_r";
                        break;
                        case 1:
                        return "solo_male_partial_l1_r";
                        break;
                        case 2:
                        return "solo_male_partial_l1_r";
                        break;
                    }
                    break;
                }
                break;
                case 1:
                switch (uParam0)
                {
                    case 3:
                    case 4:
                    case 5:
                    case 1:
                    switch (l_U350)
                    {
                        case 0:
                        return "solo_male_partial_l2_l";
                        break;
                        case 1:
                        return "solo_male_partial_l2_l";
                        break;
                        case 2:
                        return "solo_male_partial_l2_l";
                        break;
                    }
                    break;
                    case 6:
                    case 7:
                    case 8:
                    case 2:
                    switch (l_U350)
                    {
                        case 0:
                        return "solo_male_partial_l2_r";
                        break;
                        case 1:
                        return "solo_male_partial_l2_r";
                        break;
                        case 2:
                        return "solo_male_partial_l2_r";
                        break;
                    }
                    break;
                }
                break;
                case 2:
                switch (uParam0)
                {
                    case 3:
                    case 4:
                    case 5:
                    case 1:
                    switch (l_U350)
                    {
                        case 0:
                        return "solo_male_partial_r1_l";
                        break;
                        case 1:
                        return "solo_male_partial_r1_l";
                        break;
                        case 2:
                        return "solo_male_partial_r1_l";
                        break;
                    }
                    break;
                    case 6:
                    case 7:
                    case 8:
                    case 2:
                    switch (l_U350)
                    {
                        case 0:
                        return "solo_male_partial_r1_r";
                        break;
                        case 1:
                        return "solo_male_partial_r1_r";
                        break;
                        case 2:
                        return "solo_male_partial_r1_r";
                        break;
                    }
                    break;
                }
                break;
                case 3:
                switch (uParam0)
                {
                    case 3:
                    case 4:
                    case 5:
                    case 1:
                    switch (l_U350)
                    {
                        case 0:
                        return "solo_male_partial_r2_l";
                        break;
                        case 1:
                        return "solo_male_partial_r2_l";
                        break;
                        case 2:
                        return "solo_male_partial_r2_l";
                        break;
                    }
                    break;
                    case 6:
                    case 7:
                    case 8:
                    case 2:
                    switch (l_U350)
                    {
                        case 0:
                        return "solo_male_partial_r2_r";
                        break;
                        case 1:
                        return "solo_male_partial_r2_r";
                        break;
                        case 2:
                        return "solo_male_partial_r2_r";
                        break;
                    }
                    break;
                }
                break;
            }
        }
        else
        {
            switch (l_U320)
            {
                case 0:
                switch (uParam0)
                {
                    case 3:
                    case 4:
                    case 5:
                    case 1:
                    switch (l_U350)
                    {
                        case 0:
                        return "paired_male_partial_l1_l";
                        break;
                        case 1:
                        return "paired_male_partial_l1_l";
                        break;
                        case 2:
                        return "paired_male_partial_l1_l";
                        break;
                    }
                    break;
                    case 6:
                    case 7:
                    case 8:
                    case 2:
                    switch (l_U350)
                    {
                        case 0:
                        return "paired_male_partial_l1_r";
                        break;
                        case 1:
                        return "paired_male_partial_l1_r";
                        break;
                        case 2:
                        return "paired_male_partial_l1_r";
                        break;
                    }
                    break;
                }
                break;
                case 1:
                switch (uParam0)
                {
                    case 3:
                    case 4:
                    case 5:
                    case 1:
                    switch (l_U350)
                    {
                        case 0:
                        return "paired_male_partial_l2_l";
                        break;
                        case 1:
                        return "paired_male_partial_l2_l";
                        break;
                        case 2:
                        return "paired_male_partial_l2_l";
                        break;
                    }
                    break;
                    case 6:
                    case 7:
                    case 8:
                    case 2:
                    switch (l_U350)
                    {
                        case 0:
                        return "paired_male_partial_l2_r";
                        break;
                        case 1:
                        return "paired_male_partial_l2_r";
                        break;
                        case 2:
                        return "paired_male_partial_l2_r";
                        break;
                    }
                    break;
                }
                break;
                case 2:
                switch (uParam0)
                {
                    case 3:
                    case 4:
                    case 5:
                    case 1:
                    switch (l_U350)
                    {
                        case 0:
                        return "paired_male_partial_r1_l";
                        break;
                        case 1:
                        return "paired_male_partial_r1_l";
                        break;
                        case 2:
                        return "paired_male_partial_r1_l";
                        break;
                    }
                    break;
                    case 6:
                    case 7:
                    case 8:
                    case 2:
                    switch (l_U350)
                    {
                        case 0:
                        return "paired_male_partial_r1_r";
                        break;
                        case 1:
                        return "paired_male_partial_r1_r";
                        break;
                        case 2:
                        return "paired_male_partial_r1_r";
                        break;
                    }
                    break;
                }
                break;
                case 3:
                switch (uParam0)
                {
                    case 3:
                    case 4:
                    case 5:
                    case 1:
                    switch (l_U350)
                    {
                        case 0:
                        return "paired_male_partial_r2_l";
                        break;
                        case 1:
                        return "paired_male_partial_r2_l";
                        break;
                        case 2:
                        return "paired_male_partial_r2_l";
                        break;
                    }
                    break;
                    case 6:
                    case 7:
                    case 8:
                    case 2:
                    switch (l_U350)
                    {
                        case 0:
                        return "paired_male_partial_r2_r";
                        break;
                        case 1:
                        return "paired_male_partial_r2_r";
                        break;
                        case 2:
                        return "paired_male_partial_r2_r";
                        break;
                    }
                    break;
                }
                break;
            }
        }
        break;
        case 1:
        if (NOT bParam1)
        {
            switch (l_U320)
            {
                case 0:
                switch (uParam0)
                {
                    case 3:
                    case 4:
                    case 5:
                    case 1:
                    switch (l_U350)
                    {
                        case 0:
                        return "solo_male_partial_l1_l";
                        break;
                        case 1:
                        return "solo_male_partial_l1_l";
                        break;
                        case 2:
                        return "solo_male_partial_l1_l";
                        break;
                    }
                    break;
                    case 6:
                    case 7:
                    case 8:
                    case 2:
                    switch (l_U350)
                    {
                        case 0:
                        return "solo_male_partial_l1_r";
                        break;
                        case 1:
                        return "solo_male_partial_l1_r";
                        break;
                        case 2:
                        return "solo_male_partial_l1_r";
                        break;
                    }
                    break;
                }
                break;
                case 1:
                switch (uParam0)
                {
                    case 3:
                    case 4:
                    case 5:
                    case 1:
                    switch (l_U350)
                    {
                        case 0:
                        return "solo_male_partial_l2_l";
                        break;
                        case 1:
                        return "solo_male_partial_l2_l";
                        break;
                        case 2:
                        return "solo_male_partial_l2_l";
                        break;
                    }
                    break;
                    case 6:
                    case 7:
                    case 8:
                    case 2:
                    switch (l_U350)
                    {
                        case 0:
                        return "solo_male_partial_l2_r";
                        break;
                        case 1:
                        return "solo_male_partial_l2_r";
                        break;
                        case 2:
                        return "solo_male_partial_l2_r";
                        break;
                    }
                    break;
                }
                break;
                case 2:
                switch (uParam0)
                {
                    case 3:
                    case 4:
                    case 5:
                    case 1:
                    switch (l_U350)
                    {
                        case 0:
                        return "solo_male_partial_r1_l";
                        break;
                        case 1:
                        return "solo_male_partial_r1_l";
                        break;
                        case 2:
                        return "solo_male_partial_r1_l";
                        break;
                    }
                    break;
                    case 6:
                    case 7:
                    case 8:
                    case 2:
                    switch (l_U350)
                    {
                        case 0:
                        return "solo_male_partial_r1_r";
                        break;
                        case 1:
                        return "solo_male_partial_r1_r";
                        break;
                        case 2:
                        return "solo_male_partial_r1_r";
                        break;
                    }
                    break;
                }
                break;
                case 3:
                switch (uParam0)
                {
                    case 3:
                    case 4:
                    case 5:
                    case 1:
                    switch (l_U350)
                    {
                        case 0:
                        return "solo_male_partial_r2_l";
                        break;
                        case 1:
                        return "solo_male_partial_r2_l";
                        break;
                        case 2:
                        return "solo_male_partial_r2_l";
                        break;
                    }
                    break;
                    case 6:
                    case 7:
                    case 8:
                    case 2:
                    switch (l_U350)
                    {
                        case 0:
                        return "solo_male_partial_r2_r";
                        break;
                        case 1:
                        return "solo_male_partial_r2_r";
                        break;
                        case 2:
                        return "solo_male_partial_r2_r";
                        break;
                    }
                    break;
                }
                break;
            }
        }
        else
        {
            switch (l_U320)
            {
                case 0:
                switch (uParam0)
                {
                    case 3:
                    case 4:
                    case 5:
                    case 1:
                    switch (l_U350)
                    {
                        case 0:
                        return "paired_male_partial_l1_l";
                        break;
                        case 1:
                        return "paired_male_partial_l1_l";
                        break;
                        case 2:
                        return "paired_male_partial_l1_l";
                        break;
                    }
                    break;
                    case 6:
                    case 7:
                    case 8:
                    case 2:
                    switch (l_U350)
                    {
                        case 0:
                        return "paired_male_partial_l1_r";
                        break;
                        case 1:
                        return "paired_male_partial_l1_r";
                        break;
                        case 2:
                        return "paired_male_partial_l1_r";
                        break;
                    }
                    break;
                }
                break;
                case 1:
                switch (uParam0)
                {
                    case 3:
                    case 4:
                    case 5:
                    case 1:
                    switch (l_U350)
                    {
                        case 0:
                        return "paired_male_partial_l2_l";
                        break;
                        case 1:
                        return "paired_male_partial_l2_l";
                        break;
                        case 2:
                        return "paired_male_partial_l2_l";
                        break;
                    }
                    break;
                    case 6:
                    case 7:
                    case 8:
                    case 2:
                    switch (l_U350)
                    {
                        case 0:
                        return "paired_male_partial_l2_r";
                        break;
                        case 1:
                        return "paired_male_partial_l2_r";
                        break;
                        case 2:
                        return "paired_male_partial_l2_r";
                        break;
                    }
                    break;
                }
                break;
                case 2:
                switch (uParam0)
                {
                    case 3:
                    case 4:
                    case 5:
                    case 1:
                    switch (l_U350)
                    {
                        case 0:
                        return "paired_male_partial_r1_l";
                        break;
                        case 1:
                        return "paired_male_partial_r1_l";
                        break;
                        case 2:
                        return "paired_male_partial_r1_l";
                        break;
                    }
                    break;
                    case 6:
                    case 7:
                    case 8:
                    case 2:
                    switch (l_U350)
                    {
                        case 0:
                        return "paired_male_partial_r1_r";
                        break;
                        case 1:
                        return "paired_male_partial_r1_r";
                        break;
                        case 2:
                        return "paired_male_partial_r1_r";
                        break;
                    }
                    break;
                }
                break;
                case 3:
                switch (uParam0)
                {
                    case 3:
                    case 4:
                    case 5:
                    case 1:
                    switch (l_U350)
                    {
                        case 0:
                        return "paired_male_partial_r2_l";
                        break;
                        case 1:
                        return "paired_male_partial_r2_l";
                        break;
                        case 2:
                        return "paired_male_partial_r2_l";
                        break;
                    }
                    break;
                    case 6:
                    case 7:
                    case 8:
                    case 2:
                    switch (l_U350)
                    {
                        case 0:
                        return "paired_male_partial_r2_r";
                        break;
                        case 1:
                        return "paired_male_partial_r2_r";
                        break;
                        case 2:
                        return "paired_male_partial_r2_r";
                        break;
                    }
                    break;
                }
                break;
            }
        }
        break;
        case 2:
        if (NOT bParam1)
        {
            switch (l_U320)
            {
                case 0:
                switch (uParam0)
                {
                    case 3:
                    case 4:
                    case 5:
                    case 1:
                    switch (l_U350)
                    {
                        case 0:
                        return "solo_male_partial_l1_l";
                        break;
                        case 1:
                        return "solo_male_partial_l1_l_v1";
                        break;
                        case 2:
                        return "solo_male_partial_l1_l";
                        break;
                    }
                    break;
                    case 6:
                    case 7:
                    case 8:
                    case 2:
                    switch (l_U350)
                    {
                        case 0:
                        return "solo_male_partial_l1_r";
                        break;
                        case 1:
                        return "solo_male_partial_l1_r_v1";
                        break;
                        case 2:
                        return "solo_male_partial_l1_r";
                        break;
                    }
                    break;
                }
                break;
                case 1:
                switch (uParam0)
                {
                    case 3:
                    case 4:
                    case 5:
                    case 1:
                    switch (l_U350)
                    {
                        case 0:
                        return "solo_male_partial_l2_l";
                        break;
                        case 1:
                        return "solo_male_partial_l2_l_v1";
                        break;
                        case 2:
                        return "solo_male_partial_l2_l";
                        break;
                    }
                    break;
                    case 6:
                    case 7:
                    case 8:
                    case 2:
                    switch (l_U350)
                    {
                        case 0:
                        return "solo_male_partial_l2_r";
                        break;
                        case 1:
                        return "solo_male_partial_l2_r_v1";
                        break;
                        case 2:
                        return "solo_male_partial_l2_r";
                        break;
                    }
                    break;
                }
                break;
                case 2:
                switch (uParam0)
                {
                    case 3:
                    case 4:
                    case 5:
                    case 1:
                    switch (l_U350)
                    {
                        case 0:
                        return "solo_male_partial_r1_l";
                        break;
                        case 1:
                        return "solo_male_partial_r1_l_v1";
                        break;
                        case 2:
                        return "solo_male_partial_r1_l";
                        break;
                    }
                    break;
                    case 6:
                    case 7:
                    case 8:
                    case 2:
                    switch (l_U350)
                    {
                        case 0:
                        return "solo_male_partial_r1_r";
                        break;
                        case 1:
                        return "solo_male_partial_r1_r_v1";
                        break;
                        case 2:
                        return "solo_male_partial_r1_r";
                        break;
                    }
                    break;
                }
                break;
                case 3:
                switch (uParam0)
                {
                    case 3:
                    case 4:
                    case 5:
                    case 1:
                    switch (l_U350)
                    {
                        case 0:
                        return "solo_male_partial_r2_l";
                        break;
                        case 1:
                        return "solo_male_partial_r2_l_v1";
                        break;
                        case 2:
                        return "solo_male_partial_r2_l";
                        break;
                    }
                    break;
                    case 6:
                    case 7:
                    case 8:
                    case 2:
                    switch (l_U350)
                    {
                        case 0:
                        return "solo_male_partial_r2_r";
                        break;
                        case 1:
                        return "solo_male_partial_r2_r_v1";
                        break;
                        case 2:
                        return "solo_male_partial_r2_r";
                        break;
                    }
                    break;
                }
                break;
            }
        }
        else
        {
            switch (l_U320)
            {
                case 0:
                switch (uParam0)
                {
                    case 3:
                    case 4:
                    case 5:
                    case 1:
                    switch (l_U350)
                    {
                        case 0:
                        return "paired_male_partial_l1_l";
                        break;
                        case 1:
                        return "paired_male_partial_l1_l_v1";
                        break;
                        case 2:
                        return "paired_male_partial_l1_l";
                        break;
                    }
                    break;
                    case 6:
                    case 7:
                    case 8:
                    case 2:
                    switch (l_U350)
                    {
                        case 0:
                        return "paired_male_partial_l1_r";
                        break;
                        case 1:
                        return "paired_male_partial_l1_r_v1";
                        break;
                        case 2:
                        return "paired_male_partial_l1_r";
                        break;
                    }
                    break;
                }
                break;
                case 1:
                switch (uParam0)
                {
                    case 3:
                    case 4:
                    case 5:
                    case 1:
                    switch (l_U350)
                    {
                        case 0:
                        return "paired_male_partial_l2_l";
                        break;
                        case 1:
                        return "paired_male_partial_l2_l_v1";
                        break;
                        case 2:
                        return "paired_male_partial_l2_l";
                        break;
                    }
                    break;
                    case 6:
                    case 7:
                    case 8:
                    case 2:
                    switch (l_U350)
                    {
                        case 0:
                        return "paired_male_partial_l2_r";
                        break;
                        case 1:
                        return "paired_male_partial_l2_r_v1";
                        break;
                        case 2:
                        return "paired_male_partial_l2_r";
                        break;
                    }
                    break;
                }
                break;
                case 2:
                switch (uParam0)
                {
                    case 3:
                    case 4:
                    case 5:
                    case 1:
                    switch (l_U350)
                    {
                        case 0:
                        return "paired_male_partial_r1_l";
                        break;
                        case 1:
                        return "paired_male_partial_r1_l_v1";
                        break;
                        case 2:
                        return "paired_male_partial_r1_l";
                        break;
                    }
                    break;
                    case 6:
                    case 7:
                    case 8:
                    case 2:
                    switch (l_U350)
                    {
                        case 0:
                        return "paired_male_partial_r1_r";
                        break;
                        case 1:
                        return "paired_male_partial_r1_r_v1";
                        break;
                        case 2:
                        return "paired_male_partial_r1_r";
                        break;
                    }
                    break;
                }
                break;
                case 3:
                switch (uParam0)
                {
                    case 3:
                    case 4:
                    case 5:
                    case 1:
                    switch (l_U350)
                    {
                        case 0:
                        return "paired_male_partial_r2_l";
                        break;
                        case 1:
                        return "paired_male_partial_r2_l_v1";
                        break;
                        case 2:
                        return "paired_male_partial_r2_l";
                        break;
                    }
                    break;
                    case 6:
                    case 7:
                    case 8:
                    case 2:
                    switch (l_U350)
                    {
                        case 0:
                        return "paired_male_partial_r2_r";
                        break;
                        case 1:
                        return "paired_male_partial_r2_r_v1";
                        break;
                        case 2:
                        return "paired_male_partial_r2_r";
                        break;
                    }
                    break;
                }
                break;
            }
        }
        break;
    }
    return "";
}

void sub_79867(boolean bParam0)
{
    float fVar3;
    unknown uVar4;
    boolean bVar5;

    if (NOT (IS_CHAR_INJURED( sub_1661() )))
    {
        uVar4 = l_U199;
        if (NOT l_U87)
        {
            if (NOT (sub_56681( l_U431 )))
            {
                if (IS_CHAR_PLAYING_ANIM( sub_1661(), sub_56124( bParam0 ), l_U431 ))
                {
                    SET_CHAR_ANIM_BLEND_OUT_DELTA( sub_1661(), sub_56124( bParam0 ), l_U431, l_U225 * -1.00000000 );
                    SET_CHAR_ANIM_SPEED( sub_1661(), sub_56124( bParam0 ), l_U431, 0.00000000 );
                    SET_CHAR_ANIM_CURRENT_TIME( sub_1661(), sub_56124( bParam0 ), l_U431, uVar4 );
                }
            }
            if (NOT (sub_56681( l_U436 )))
            {
                if (NOT (IS_CHAR_INJURED( g_U30207 )))
                {
                    if (IS_CHAR_PLAYING_ANIM( g_U30207, sub_56124( bParam0 ), l_U436 ))
                    {
                        SET_CHAR_ANIM_BLEND_OUT_DELTA( g_U30207, sub_56124( bParam0 ), l_U436, l_U225 * -1.00000000 );
                        SET_CHAR_ANIM_SPEED( g_U30207, sub_56124( bParam0 ), l_U436, 0.00000000 );
                        SET_CHAR_ANIM_CURRENT_TIME( g_U30207, sub_56124( bParam0 ), l_U436, uVar4 );
                    }
                }
            }
            if (NOT (sub_56681( l_U432 )))
            {
                if (IS_CHAR_PLAYING_ANIM( sub_1661(), sub_56124( bParam0 ), l_U432 ))
                {
                    SET_CHAR_ANIM_BLEND_OUT_DELTA( sub_1661(), sub_56124( bParam0 ), l_U432, l_U224 * -1.00000000 );
                    SET_CHAR_ANIM_SPEED( sub_1661(), sub_56124( bParam0 ), l_U432, 0.00000000 );
                    SET_CHAR_ANIM_CURRENT_TIME( sub_1661(), sub_56124( bParam0 ), l_U432, uVar4 );
                }
            }
            if (NOT (sub_56681( l_U437 )))
            {
                if (NOT (IS_CHAR_INJURED( g_U30207 )))
                {
                    if (IS_CHAR_PLAYING_ANIM( g_U30207, sub_56124( bParam0 ), l_U437 ))
                    {
                        SET_CHAR_ANIM_BLEND_OUT_DELTA( g_U30207, sub_56124( bParam0 ), l_U437, l_U224 * -1.00000000 );
                        SET_CHAR_ANIM_SPEED( g_U30207, sub_56124( bParam0 ), l_U437, 0.00000000 );
                        SET_CHAR_ANIM_CURRENT_TIME( g_U30207, sub_56124( bParam0 ), l_U437, uVar4 );
                    }
                }
            }
        }
        if (sub_56681( l_U431 ))
        {
            PRINTSTRING( "initialising strActiveDanceAnimPrimaryIdle - call 1" );
            PRINTNL();
            l_U431 = sub_43217( bParam0, 0, 0 );
            l_U436 = sub_43217( bParam0, 1, 0 );
            l_U432 = sub_43217( bParam0, 0, 1 );
            l_U437 = sub_43217( bParam0, 1, 1 );
            SET_CONTENTS_OF_TEXT_WIDGET( l_U468, l_U431 );
        }
        if (l_U81)
        {
            if (NOT l_U74)
            {
                bVar5 = false;
                if (NOT (sub_56681( l_U430 )))
                {
                    if (IS_CHAR_PLAYING_ANIM( sub_1661(), sub_56124( bParam0 ), l_U430 ))
                    {
                        GET_CHAR_ANIM_BLEND_AMOUNT( sub_1661(), sub_56124( bParam0 ), l_U430, ref fVar3 );
                        if ((NOT l_U67) AND ((NOT l_U75) AND (fVar3 > 0.90000000)))
                        {
                            bVar5 = true;
                        }
                    }
                }
                if (NOT (sub_56681( l_U429 )))
                {
                    if ((l_U85) AND (IS_CHAR_PLAYING_ANIM( sub_1661(), sub_56124( bParam0 ), l_U429 )))
                    {
                        bVar5 = true;
                    }
                }
                if (l_U66)
                {
                    bVar5 = true;
                }
                if (bVar5)
                {
                    SET_CONTENTS_OF_TEXT_WIDGET( l_U468, l_U432 );
                    if (l_U85)
                    {
                        TASK_PLAY_ANIM_WITH_FLAGS_AND_START_PHASE( sub_1661(), l_U432, sub_56124( bParam0 ), l_U233, -1, 16, uVar4 );
                    }
                    else
                    {
                        TASK_PLAY_ANIM_WITH_FLAGS_AND_START_PHASE( sub_1661(), l_U432, sub_56124( bParam0 ), l_U225, -1, 16, uVar4 );
                    }
                    if (bParam0)
                    {
                        if (NOT (IS_CHAR_INJURED( g_U30207 )))
                        {
                            if (l_U85)
                            {
                                TASK_PLAY_ANIM_WITH_FLAGS_AND_START_PHASE( g_U30207, l_U437, sub_56124( bParam0 ), l_U233, -1, 16, uVar4 );
                            }
                            else
                            {
                                TASK_PLAY_ANIM_WITH_FLAGS_AND_START_PHASE( g_U30207, l_U437, sub_56124( bParam0 ), l_U225, -1, 16, uVar4 );
                            }
                        }
                    }
                    PRINTSTRING( "PLAY_IDLE_ANIMS_AND_SYNC_WITH_BEAT - switched to secondary" );
                    PRINTNL();
                    l_U74 = 1;
                }
            }
            else if (NOT (sub_56681( l_U430 )))
            {
                if ((l_U339 == 0) AND ((NOT l_U66) AND ((NOT l_U67) AND ((NOT l_U85) AND ((NOT l_U68) AND ((l_U145 < (1.00000000 - l_U158)) AND (NOT (IS_CHAR_PLAYING_ANIM( sub_1661(), sub_56124( bParam0 ), l_U430 )))))))))
                {
                    SET_CONTENTS_OF_TEXT_WIDGET( l_U468, l_U431 );
                    TASK_PLAY_ANIM_WITH_FLAGS_AND_START_PHASE( sub_1661(), l_U431, sub_56124( bParam0 ), l_U224, -1, 16, uVar4 );
                    if (bParam0)
                    {
                        if (NOT (IS_CHAR_INJURED( g_U30207 )))
                        {
                            TASK_PLAY_ANIM_WITH_FLAGS_AND_START_PHASE( g_U30207, l_U436, sub_56124( bParam0 ), l_U224, -1, 16, uVar4 );
                        }
                    }
                    PRINTSTRING( "PLAY_IDLE_ANIMS_AND_SYNC_WITH_BEAT - switched to primary" );
                    PRINTNL();
                    l_U74 = 0;
                }
            }
        }
        else
        {
            PRINTSTRING( "PLAY_IDLE_ANIMS_AND_SYNC_WITH_BEAT - start off primary idle" );
            PRINTNL();
            l_U431 = sub_43217( bParam0, 0, 0 );
            l_U432 = sub_43217( bParam0, 0, 1 );
            l_U436 = sub_43217( bParam0, 1, 0 );
            l_U437 = sub_43217( bParam0, 1, 1 );
            SET_CONTENTS_OF_TEXT_WIDGET( l_U468, l_U431 );
            if (l_U87)
            {
                fVar3 = 1000.00000000;
                l_U87 = 0;
            }
            else
            {
                fVar3 = 2.00000000;
            }
            TASK_PLAY_ANIM_WITH_FLAGS_AND_START_PHASE( sub_1661(), l_U431, sub_56124( bParam0 ), fVar3, -1, 16, uVar4 );
            if (NOT (IS_CHAR_INJURED( g_U30207 )))
            {
                TASK_PLAY_ANIM_WITH_FLAGS_AND_START_PHASE( g_U30207, l_U436, sub_56124( bParam0 ), fVar3, -1, 16, uVar4 );
            }
            l_U81 = 1;
        }
    }
    return;
}

void sub_81716(unknown uParam0)
{
    float fVar3;

    if (NOT (IS_CHAR_INJURED( sub_1661() )))
    {
        if (NOT (sub_56681( l_U430 )))
        {
            if (IS_CHAR_PLAYING_ANIM( sub_1661(), sub_56124( uParam0 ), l_U430 ))
            {
                if (l_U68)
                {
                    if (l_U311 == l_U325)
                    {
                        l_U201 = 1.00000000 + l_U145;
                    }
                    else
                    {
                        l_U201 = l_U145;
                    }
                    GET_CHAR_ANIM_CURRENT_TIME( sub_1661(), sub_56124( uParam0 ), l_U430, ref fVar3 );
                    if (l_U201 < 1.00000000)
                    {
                        l_U206 = 1.00000000 - l_U145;
                    }
                    else
                    {
                        l_U206 = 0.00000000;
                    }
                    if ((l_U75) || ((l_U206 < l_U210) AND (l_U206 >= fVar3)))
                    {
                        SET_CHAR_ANIM_SPEED( sub_1661(), sub_56124( uParam0 ), l_U430, 0.00000000 );
                        SET_CHAR_ANIM_CURRENT_TIME( sub_1661(), sub_56124( uParam0 ), l_U430, l_U206 );
                    }
                    else
                    {
                        SET_CHAR_ANIM_SPEED( sub_1661(), sub_56124( uParam0 ), l_U430, 1.00000000 );
                        PRINTSTRING( "******* SYNC_SHOT_ANIMS_WITH_BEAT - shot finished ********" );
                        PRINTNL();
                        PRINTSTRING( "fShotAnimProgress = " );
                        PRINTFLOAT( l_U206 );
                        PRINTNL();
                        PRINTSTRING( "fCurrentAnimTime = " );
                        PRINTFLOAT( fVar3 );
                        PRINTNL();
                        PRINTSTRING( "fShotAnimStartPhase = " );
                        PRINTFLOAT( l_U212 );
                        PRINTNL();
                        PRINTSTRING( "fTimeToNextAvailableBeat = " );
                        PRINTFLOAT( l_U201 );
                        PRINTNL();
                        PRINTSTRING( "fStartTimeToNextAvailableBeatForShot = " );
                        PRINTFLOAT( l_U202 );
                        PRINTNL();
                        CLEAR_CHAR_SECONDARY_TASK( sub_1661() );
                        l_U206 = 0.00000000;
                        l_U68 = 0;
                    }
                }
                if (l_U75)
                {
                    l_U75 = 0;
                }
            }
            else if (l_U68)
            {
                if (NOT l_U75)
                {
                    l_U68 = 0;
                    PRINTSTRING( "bPlayingShotAnim = FALSE 1" );
                    PRINTNL();
                }
            }
        }
        else if (l_U68)
        {
            l_U68 = 0;
            PRINTSTRING( "bPlayingShotAnim = FALSE 2" );
            PRINTNL();
        }
    }
    return;
}

void sub_82587(boolean bParam0)
{
    float fVar3;

    if (NOT (IS_CHAR_INJURED( sub_1661() )))
    {
        if (NOT (sub_56681( l_U429 )))
        {
            if (IS_CHAR_PLAYING_ANIM( sub_1661(), sub_56124( bParam0 ), l_U429 ))
            {
                if (l_U72)
                {
                    GET_CHAR_ANIM_CURRENT_TIME( sub_1661(), sub_56124( bParam0 ), l_U429, ref fVar3 );
                    l_U227 = (1.00000000 - ((TO_FLOAT( l_U332 )) / (TO_FLOAT( l_U330 )))) + ((1.00000000 - l_U145) / (TO_FLOAT( l_U330 )));
                    if (l_U332 == 2)
                    {
                        if (NOT l_U85)
                        {
                            PRINTSTRING( "**** hold is realigning beats from anim ***" );
                            PRINTSTRING( l_U429 );
                            PRINTNL();
                            SET_CHAR_ANIM_BLEND_OUT_DELTA( sub_1661(), sub_56124( bParam0 ), l_U429, l_U233 * -1.00000000 );
                            if (bParam0)
                            {
                                if (NOT (IS_CHAR_INJURED( g_U30207 )))
                                {
                                    SET_CHAR_ANIM_BLEND_OUT_DELTA( g_U30207, sub_56124( bParam0 ), l_U434, l_U233 * -1.00000000 );
                                }
                            }
                            l_U342 = l_U341 - l_U310;
                            if (l_U342 > 3)
                            {
                                l_U342 += -4;
                            }
                            if (l_U342 < 0)
                            {
                                l_U342 += 4;
                            }
                            PRINTSTRING( "iBlendBackToBeat = " );
                            PRINTINT( l_U341 );
                            PRINTNL();
                            PRINTSTRING( "iBeatOffset = " );
                            PRINTINT( l_U342 );
                            PRINTNL();
                            PRINTSTRING( "** values before applying **" );
                            PRINTNL();
                            PRINTSTRING( "iBeatNo = " );
                            PRINTINT( l_U310 );
                            PRINTNL();
                            PRINTSTRING( "iLastBeatNo = " );
                            PRINTINT( l_U309 );
                            PRINTNL();
                            PRINTSTRING( "iNextBeatNo = " );
                            PRINTINT( l_U311 );
                            PRINTNL();
                            l_U310 += l_U342;
                            if (l_U310 > 3)
                            {
                                l_U310 += -4;
                            }
                            l_U309 += l_U342;
                            if (l_U309 > 3)
                            {
                                l_U309 += -4;
                            }
                            l_U311 += l_U342;
                            if (l_U311 > 3)
                            {
                                l_U311 += -4;
                            }
                            PRINTSTRING( "** values after applying **" );
                            PRINTNL();
                            PRINTSTRING( "iBeatNo = " );
                            PRINTINT( l_U310 );
                            PRINTNL();
                            PRINTSTRING( "iLastBeatNo = " );
                            PRINTINT( l_U309 );
                            PRINTNL();
                            PRINTSTRING( "iNextBeatNo = " );
                            PRINTINT( l_U311 );
                            PRINTNL();
                            l_U339 = 6;
                            l_U85 = 1;
                            l_U113 = 1;
                            l_U74 = 0;
                        }
                    }
                    PRINTSTRING( "******* SYNC_HOLD_ANIMS_WITH_BEAT - hold syncing ********" );
                    PRINTNL();
                    PRINTSTRING( "iHoldBeatsLeftToPlay = " );
                    PRINTINT( l_U332 );
                    PRINTNL();
                    PRINTSTRING( "iRequiredHoldBeats = " );
                    PRINTINT( l_U330 );
                    PRINTNL();
                    PRINTSTRING( "fHoldAnimProgress = " );
                    PRINTFLOAT( l_U227 );
                    PRINTNL();
                    PRINTSTRING( "fHoldAnimProgressScaledToBeat = " );
                    PRINTFLOAT( l_U226 );
                    PRINTNL();
                    PRINTSTRING( "fCurrentAnimTime = " );
                    PRINTFLOAT( fVar3 );
                    PRINTNL();
                    PRINTSTRING( "fHoldAnimStartPhaseScaledToBeat = " );
                    PRINTFLOAT( l_U230 );
                    PRINTNL();
                    PRINTSTRING( "fHoldAnimStartPhase = " );
                    PRINTFLOAT( l_U229 );
                    PRINTNL();
                    PRINTSTRING( "fTimeToNextBeat = " );
                    PRINTFLOAT( l_U145 );
                    PRINTNL();
                    if (l_U227 > 1.00000000)
                    {
                        l_U227 = 1.00000000;
                        PRINTSTRING( "******* fHoldAnimProgress > 1.0 ********" );
                        PRINTNL();
                    }
                    if ((l_U76) || ((l_U227 < l_U211) AND (l_U227 >= fVar3)))
                    {
                        SET_CHAR_ANIM_SPEED( sub_1661(), sub_56124( bParam0 ), l_U429, 0.00000000 );
                        SET_CHAR_ANIM_CURRENT_TIME( sub_1661(), sub_56124( bParam0 ), l_U429, l_U227 );
                        if (bParam0)
                        {
                            if (NOT (IS_CHAR_INJURED( g_U30207 )))
                            {
                                SET_CHAR_ANIM_SPEED( g_U30207, sub_56124( bParam0 ), l_U434, 0.00000000 );
                                SET_CHAR_ANIM_CURRENT_TIME( g_U30207, sub_56124( bParam0 ), l_U434, l_U227 );
                            }
                        }
                    }
                    else
                    {
                        PRINTSTRING( "******* SYNC_HOLD_ANIMS_WITH_BEAT - hold finished ********" );
                        PRINTNL();
                        PRINTSTRING( "iHoldBeatsLeftToPlay = " );
                        PRINTINT( l_U332 );
                        PRINTNL();
                        PRINTSTRING( "iRequiredHoldBeats = " );
                        PRINTINT( l_U330 );
                        PRINTNL();
                        PRINTSTRING( "fHoldAnimProgress = " );
                        PRINTFLOAT( l_U227 );
                        PRINTNL();
                        PRINTSTRING( "fHoldAnimProgressScaledToBeat = " );
                        PRINTFLOAT( l_U226 );
                        PRINTNL();
                        PRINTSTRING( "fCurrentAnimTime = " );
                        PRINTFLOAT( fVar3 );
                        PRINTNL();
                        PRINTSTRING( "fHoldAnimStartPhaseScaledToBeat = " );
                        PRINTFLOAT( l_U230 );
                        PRINTNL();
                        PRINTSTRING( "fHoldAnimStartPhase = " );
                        PRINTFLOAT( l_U229 );
                        PRINTNL();
                        PRINTSTRING( "fTimeToNextBeat = " );
                        PRINTFLOAT( l_U145 );
                        PRINTNL();
                        SET_CHAR_ANIM_SPEED( sub_1661(), sub_56124( bParam0 ), l_U429, 1.00000000 );
                        CLEAR_CHAR_SECONDARY_TASK( sub_1661() );
                        if (bParam0)
                        {
                            if (NOT (IS_CHAR_INJURED( g_U30207 )))
                            {
                                SET_CHAR_ANIM_SPEED( g_U30207, sub_56124( bParam0 ), l_U434, 1.00000000 );
                                CLEAR_CHAR_SECONDARY_TASK( g_U30207 );
                            }
                        }
                        l_U227 = 0.00000000;
                        l_U72 = 0;
                    }
                }
                if (l_U76)
                {
                    l_U76 = 0;
                }
            }
            else if (l_U72)
            {
                if (NOT l_U76)
                {
                    l_U72 = 0;
                }
            }
            if (l_U85)
            {
                l_U85 = 0;
            }
        }
        else if (l_U72)
        {
            l_U72 = 0;
        }
        if (l_U85)
        {
            l_U85 = 0;
        }
    }
    return;
}

void sub_85096()
{
    if (NOT l_U66)
    {
        if ((IS_THIS_HELP_MESSAGE_WITH_STRING_BEING_DISPLAYED( "DANC_H09", "DANC_B8" )) || ((IS_THIS_HELP_MESSAGE_WITH_STRING_BEING_DISPLAYED( "DANC_H09", "DANC_B7" )) || ((IS_THIS_HELP_MESSAGE_WITH_STRING_BEING_DISPLAYED( "DANC_H09", "DANC_B6" )) || ((IS_THIS_HELP_MESSAGE_WITH_STRING_BEING_DISPLAYED( "DANC_H09", "DANC_B5" )) || ((IS_THIS_HELP_MESSAGE_WITH_STRING_BEING_DISPLAYED( "DANC_H09", "DANC_B4" )) || ((IS_THIS_HELP_MESSAGE_WITH_STRING_BEING_DISPLAYED( "DANC_H09", "DANC_B3" )) || ((IS_THIS_HELP_MESSAGE_WITH_STRING_BEING_DISPLAYED( "DANC_H09", "DANC_B2" )) || (IS_THIS_HELP_MESSAGE_WITH_STRING_BEING_DISPLAYED( "DANC_H09", "DANC_B1" )))))))))
        {
            CLEAR_HELP();
        }
    }
    return;
}

void sub_85367()
{
    if ((NOT l_U91) AND (NOT l_U89))
    {
        if (NOT l_U71)
        {
            if (l_U66)
            {
                if (l_U328 == -1)
                {
                    SHAKE_PAD( 0, l_U345, l_U346 );
                }
                else if (l_U145 < l_U232)
                {
                    SHAKE_PAD( 0, l_U347, l_U348 );
                }
            }
            else if (l_U326 == -1)
            {
                if (sub_85511( l_U145, l_U310 ))
                {
                    SHAKE_PAD( 0, l_U343, l_U344 );
                }
                else if (l_U145 < l_U232)
                {
                    SHAKE_PAD( 0, l_U347, l_U348 );
                }
            }
        }
    }
    return;
}

int sub_85511(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I < 4; I++ )
    {
        if (sub_41942( uParam0, uParam1, I ))
        {
            return 1;
        }
    }
    return 0;
}

void sub_88452()
{
    sub_88461();
    sub_89344();
    if (l_U662)
    {
        sub_89525();
        SHAKE_PAD( 0, 1, 118 );
    }
    else
    {
        CLEAR_HELP();
    }
    if ((l_U402 < 6) AND (IS_KEYBOARD_KEY_JUST_PRESSED( 36 )))
    {
        l_U608 = 0;
        l_U402++;
    }
    if (NOT l_U608)
    {
        l_U112 = 0;
        l_U608 = 1;
        sub_89986();
        sub_90015();
        switch (l_U402)
        {
            case 0:
            TASK_PLAY_ANIM_FACIAL( l_U591, "Facial_Stage_Exit", l_U590, 4.00000000, 1, 0, -1 );
            TASK_PLAY_ANIM_FACIAL( l_U593, "Facial_Stage_Exit_Plyr", l_U590, 4.00000000, 1, 0, -1 );
            sub_90237();
            DO_SCREEN_FADE_IN( 500 );
            while (NOT IS_SCREEN_FADED_IN())
            {
                HIDE_HUD_AND_RADAR_THIS_FRAME();
                sub_56113( 0, 0 );
                WAIT( 0 );
            }
            SAY_AMBIENT_SPEECH( l_U591, "BAD_DANCING", 1, 0, 2 );
            sub_108393( 0.15000000 );
            sub_108393( 0.27000000 );
            sub_108393( 0.55000000 );
            sub_108393( 0.67000000 );
            sub_108393( 0.80000000 );
            break;
            case 9:
            CLEAR_HELP();
            TASK_PLAY_ANIM_WITH_FLAGS_AND_START_PHASE( l_U593, l_U599, l_U590, 1000, -1, 2064, 0.00000000 );
            TASK_PLAY_ANIM_WITH_FLAGS_AND_START_PHASE( l_U591, l_U594, l_U590, 1000, -1, 2064, 0.00000000 );
            TASK_PLAY_ANIM_FACIAL( l_U591, "Facial_Idle", l_U590, 4.00000000, 1, 0, -1 );
            TASK_PLAY_ANIM_FACIAL( l_U593, "Facial_Idle_Plyr", l_U590, 4.00000000, 1, 0, -1 );
            switch (l_U472)
            {
                case 1:
                PRINT_HELP_FOREVER_WITH_STRING_NO_SOUND( "BS_INTRO001", "NULL" );
                l_U427 = 6000;
                sub_108720( 0.00000000, 2, 0 );
                break;
                case 3:
                l_U427 = 3000;
                sub_108720( 0.00000000, 1, 0 );
                break;
                case 5:
                l_U427 = 3000;
                sub_108720( 0.00000000, 4, 0 );
                break;
            }
            SETTIMERB( 0 );
            l_U662 = 1;
            break;
            case 1:
            TASK_PLAY_ANIM_WITH_FLAGS_AND_START_PHASE( l_U593, l_U600, l_U590, 1000, -1, 2080, 0.00000000 );
            TASK_PLAY_ANIM_WITH_FLAGS_AND_START_PHASE( l_U591, l_U594, l_U590, 1000, -1, 2064, 0.00000000 );
            TASK_PLAY_ANIM_FACIAL( l_U591, "Facial_Idle", l_U590, 4.00000000, 1, 0, -1 );
            TASK_PLAY_ANIM_FACIAL( l_U593, "Facial_Dance_1_Plyr", l_U590, 4.00000000, 1, 0, -1 );
            l_U661 = 0.09000000;
            sub_108720( 0.54730000, 3, 0 );
            sub_108720( 0.71780000 - 0.03000000, 6, 0 );
            if (NOT (IS_CHAR_DEAD( g_U30207 )))
            {
                TASK_PLAY_ANIM_WITH_FLAGS_AND_START_PHASE( g_U30207, l_U606, l_U590, 1000, -1, 2064, 0.00000000 );
            }
            break;
            case 2:
            TASK_PLAY_ANIM_WITH_FLAGS_AND_START_PHASE( l_U593, l_U599, l_U590, 1000, -1, 2064, 0.00000000 );
            TASK_PLAY_ANIM_WITH_FLAGS_AND_START_PHASE( l_U591, l_U597, l_U590, 1000, -1, 2080, 0.00000000 );
            TASK_PLAY_ANIM_FACIAL( l_U591, "Facial_Challenge_2", l_U590, 4.00000000, 1, 0, -1 );
            TASK_PLAY_ANIM_FACIAL( l_U593, "Facial_Idle_Plyr", l_U590, 4.00000000, 1, 0, -1 );
            if (NOT (IS_CHAR_DEAD( g_U30207 )))
            {
                TASK_PLAY_ANIM_WITH_FLAGS_AND_START_PHASE( g_U30207, l_U606, l_U590, 4, -1, 2064, 0.00000000 );
            }
            sub_108393( 0.70000000 );
            break;
            case 3:
            TASK_PLAY_ANIM_WITH_FLAGS_AND_START_PHASE( l_U593, l_U601, l_U590, 1000, -1, 2080, 0.00000000 );
            TASK_PLAY_ANIM_WITH_FLAGS_AND_START_PHASE( l_U591, l_U594, l_U590, 1000, -1, 2064, 0.00000000 );
            TASK_PLAY_ANIM_FACIAL( l_U591, "Facial_Idle", l_U590, 4.00000000, 1, 0, -1 );
            TASK_PLAY_ANIM_FACIAL( l_U593, "Facial_Dance_2_Plyr", l_U590, 4.00000000, 1, 0, -1 );
            sub_108720( 0.21110000, 6, 1 );
            sub_108720( 0.30370000, 6, 0 );
            sub_108720( 0.38260000, 4, 0 );
            sub_108720( 0.49200000, 0, 1 );
            sub_108720( 0.67670000, 3, 0 );
            sub_108720( 0.90000000, 4, 0 );
            if (NOT (IS_CHAR_DEAD( g_U30207 )))
            {
                TASK_PLAY_ANIM_WITH_FLAGS_AND_START_PHASE( g_U30207, l_U606, l_U590, 1000, -1, 2064, 0.00000000 );
            }
            break;
            case 4:
            TASK_PLAY_ANIM_WITH_FLAGS_AND_START_PHASE( l_U593, l_U599, l_U590, 1000, -1, 2064, 0.00000000 );
            TASK_PLAY_ANIM_WITH_FLAGS_AND_START_PHASE( l_U591, l_U598, l_U590, 1000, -1, 2080, 0.00000000 );
            TASK_PLAY_ANIM_FACIAL( l_U591, "Facial_Challenge_3", l_U590, 4.00000000, 1, 0, -1 );
            TASK_PLAY_ANIM_FACIAL( l_U593, "Facial_Idle_Plyr", l_U590, 4.00000000, 1, 0, -1 );
            sub_108393( 0.33000000 );
            sub_108393( 0.56000000 );
            sub_108393( 0.70000000 );
            if (NOT (IS_CHAR_DEAD( g_U30207 )))
            {
                TASK_PLAY_ANIM_WITH_FLAGS_AND_START_PHASE( g_U30207, l_U606, l_U590, 1000, -1, 2064, 0.00000000 );
            }
            break;
            case 5:
            TASK_PLAY_ANIM_WITH_FLAGS_AND_START_PHASE( l_U593, l_U602, l_U590, 1000, -1, 2080, 0.00000000 );
            TASK_PLAY_ANIM_WITH_FLAGS_AND_START_PHASE( l_U591, l_U594, l_U590, 1000, -1, 2064, 0.00000000 );
            TASK_PLAY_ANIM_FACIAL( l_U591, "Facial_Idle", l_U590, 4.00000000, 1, 0, -1 );
            TASK_PLAY_ANIM_FACIAL( l_U593, "Facial_Dance_3_Plyr", l_U590, 4.00000000, 1, 0, -1 );
            l_U661 = 0.06000000;
            sub_108720( 0.07860000 + 0.03000000, 2, 0 );
            sub_108720( 0.17420000 + 0.03000000, 3, 0 );
            sub_108720( 0.24350000 + 0.03000000, 2, 0 );
            sub_108720( 0.33500000 + 0.03000000, 4, 1 );
            sub_108720( 0.40580000 + 0.03000000, 7, 0 );
            sub_108720( 0.46540000 + 0.03000000, 3, 0 );
            sub_108720( 0.58260000 + 0.03000000, 6, 1 );
            sub_108720( 0.63290000 + 0.03000000, 6, 0 );
            sub_108720( 0.67370000 + 0.03000000, 6, 0 );
            sub_108720( 0.76180000 + 0.03000000, 0, 1 );
            sub_108720( 0.81410010 + 0.03000000, 5, 0 );
            if (NOT (IS_CHAR_DEAD( g_U30207 )))
            {
                TASK_PLAY_ANIM_WITH_FLAGS_AND_START_PHASE( g_U30207, l_U606, l_U590, 1000, -1, 2064, 0.00000000 );
            }
            break;
            case 6:
            TASK_PLAY_ANIM_WITH_FLAGS_AND_START_PHASE( l_U593, l_U604, l_U590, 1000, -1, 2080, 0.00000000 );
            TASK_PLAY_ANIM_WITH_FLAGS_AND_START_PHASE( l_U591, l_U595, l_U590, 1000, -1, 2080, 0.00000000 );
            TASK_PLAY_ANIM_FACIAL( l_U591, "Facial_Stage_Return", l_U590, 4.00000000, 1, 0, -1 );
            TASK_PLAY_ANIM_FACIAL( l_U593, "Facial_Stage_Return_Plyr", l_U590, 4.00000000, 1, 0, -1 );
            SAY_AMBIENT_SPEECH( l_U593, "DANCING_GAME_LUIS_GOOD", 1, 0, 2 );
            if (NOT (IS_CHAR_DEAD( g_U30207 )))
            {
                TASK_PLAY_ANIM_WITH_FLAGS_AND_START_PHASE( g_U30207, l_U605, l_U590, 1000, -1, 2080, 0.00000000 );
            }
            l_U111 = 0;
            break;
            case 7:
            TASK_PLAY_ANIM_WITH_FLAGS_AND_START_PHASE( l_U593, l_U603, l_U590, 1000, -1, 2080, 0.00000000 );
            TASK_PLAY_ANIM_WITH_FLAGS_AND_START_PHASE( l_U591, l_U595, l_U590, 1000, -1, 2080, 0.00000000 );
            TASK_PLAY_ANIM_FACIAL( l_U591, "Facial_Stage_Return", l_U590, 4.00000000, 1, 0, -1 );
            TASK_PLAY_ANIM_FACIAL( l_U593, "Facial_Fail_React_Plyr", l_U590, 4.00000000, 1, 0, -1 );
            SAY_AMBIENT_SPEECH( l_U591, "BAD_DANCING", 1, 0, 2 );
            l_U111 = 1;
            break;
            case 8:
            sub_110781();
            TASK_PLAY_ANIM_WITH_FLAGS_AND_START_PHASE( l_U591, l_U596, l_U590, 1000, -1, 2064, 0.00000000 );
            TASK_PLAY_ANIM_FACIAL( l_U591, "Facial_Dance_Loop", l_U590, 4.00000000, 1, 0, -1 );
            DO_SCREEN_FADE_OUT( 1000 );
            while (NOT IS_SCREEN_FADED_OUT())
            {
                HIDE_HUD_AND_RADAR_THIS_FRAME();
                sub_41372();
                sub_56113( 1, 0 );
                WAIT( 0 );
            }
            sub_2772();
            sub_110950();
            sub_111083();
            if (NOT l_U111)
            {
                l_U254 = 3;
                sub_44635( 4 );
            }
            else
            {
                l_U254 = 7;
                sub_44635( 1 );
            }
            CLEAR_HELP();
            LOAD_ADDITIONAL_TEXT( "DANCING", 3 );
            l_U255 = 0;
            break;
        }
        l_U607 = 0.00000000;
        HIDE_HUD_AND_RADAR_THIS_FRAME();
        WAIT( 1 );
        HIDE_HUD_AND_RADAR_THIS_FRAME();
        WAIT( 1 );
        HIDE_HUD_AND_RADAR_THIS_FRAME();
    }
    sub_90237();
    if ((NOT (IS_CHAR_DEAD( l_U593 ))) AND (NOT (IS_CHAR_DEAD( l_U591 ))))
    {
        switch (l_U402)
        {
            case 0:
            if (IS_CHAR_PLAYING_ANIM( sub_1661(), "missdanceoff", "luis_stage_exit" ))
            {
                GET_CHAR_ANIM_CURRENT_TIME( sub_1661(), "missdanceoff", "luis_stage_exit", ref l_U607 );
                if ((NOT l_U588) AND (l_U607 > 0.95000000))
                {
                    l_U472 = 1;
                    l_U402 = 9;
                    l_U608 = 0;
                    if (l_U662)
                    {
                        l_U472 = 1;
                        l_U402 = 7;
                    }
                }
            }
            else
            {
                TASK_PLAY_ANIM_WITH_FLAGS_AND_START_PHASE( sub_1661(), "luis_stage_exit", l_U590, 1000, -1, 2080, l_U607 );
            }
            break;
            case 9:
            if (NOT l_U662)
            {
                l_U402 = l_U472;
                SAY_AMBIENT_SPEECH( l_U593, "DANCING_GAME_LUIS_GOOD", 1, 0, 2 );
                l_U608 = 0;
            }
            else if (TIMERB() > l_U427)
            {
                l_U111 = 1;
                l_U402 = 7;
                SAVE_STRING_TO_DEBUG_FILE( "FAIL BY WAIT IN TIMER SECTION" );
                SAVE_NEWLINE_TO_DEBUG_FILE();
                l_U472 = -1;
            }
            break;
            case 1:
            if (IS_CHAR_PLAYING_ANIM( l_U593, l_U590, l_U600 ))
            {
                GET_CHAR_ANIM_CURRENT_TIME( l_U593, l_U590, l_U600, ref l_U607 );
                if ((NOT l_U588) AND (l_U607 > 0.95000000))
                {
                    l_U402 = 2;
                    l_U608 = 0;
                    if (l_U662)
                    {
                        l_U402 = 7;
                    }
                }
            }
            else
            {
                TASK_PLAY_ANIM_WITH_FLAGS_AND_START_PHASE( l_U593, l_U600, l_U590, 1000, -1, 2080, l_U607 );
            }
            break;
            case 2:
            if (IS_CHAR_PLAYING_ANIM( l_U591, l_U590, l_U597 ))
            {
                GET_CHAR_ANIM_CURRENT_TIME( l_U591, l_U590, l_U597, ref l_U607 );
                if ((NOT l_U588) AND (l_U607 > 0.95000000))
                {
                    l_U472 = 3;
                    l_U402 = 9;
                    l_U608 = 0;
                    if (l_U662)
                    {
                        l_U402 = 7;
                    }
                }
            }
            else
            {
                TASK_PLAY_ANIM_WITH_FLAGS_AND_START_PHASE( l_U591, l_U597, l_U590, 1000, -1, 2080, l_U607 );
            }
            break;
            case 3:
            if (IS_CHAR_PLAYING_ANIM( l_U593, l_U590, l_U601 ))
            {
                GET_CHAR_ANIM_CURRENT_TIME( l_U593, l_U590, l_U601, ref l_U607 );
                if ((NOT l_U588) AND (l_U607 > 0.98000000))
                {
                    l_U402 = 4;
                    l_U608 = 0;
                    if (l_U662)
                    {
                        l_U402 = 7;
                    }
                }
            }
            else
            {
                TASK_PLAY_ANIM_WITH_FLAGS_AND_START_PHASE( l_U593, l_U601, l_U590, 1000, -1, 2080, l_U607 );
            }
            break;
            case 4:
            if (IS_CHAR_PLAYING_ANIM( l_U591, l_U590, l_U598 ))
            {
                GET_CHAR_ANIM_CURRENT_TIME( l_U591, l_U590, l_U598, ref l_U607 );
                if ((NOT l_U588) AND (l_U607 > 0.95000000))
                {
                    l_U472 = 5;
                    l_U402 = 9;
                    l_U608 = 0;
                    if (l_U662)
                    {
                        l_U402 = 7;
                    }
                }
            }
            else
            {
                TASK_PLAY_ANIM_WITH_FLAGS_AND_START_PHASE( l_U591, l_U598, l_U590, 1000, -1, 2080, l_U607 );
            }
            break;
            case 5:
            if (IS_CHAR_PLAYING_ANIM( l_U593, l_U590, l_U602 ))
            {
                GET_CHAR_ANIM_CURRENT_TIME( l_U593, l_U590, l_U602, ref l_U607 );
                if ((NOT l_U588) AND (l_U607 > 0.95000000))
                {
                    l_U402 = 6;
                    l_U608 = 0;
                    if (l_U662)
                    {
                        l_U402 = 7;
                    }
                }
            }
            else
            {
                TASK_PLAY_ANIM_WITH_FLAGS_AND_START_PHASE( l_U593, l_U602, l_U590, 1000, -1, 2080, l_U607 );
            }
            break;
            case 6:
            if (IS_CHAR_PLAYING_ANIM( l_U593, l_U590, l_U604 ))
            {
                GET_CHAR_ANIM_CURRENT_TIME( l_U593, l_U590, l_U604, ref l_U607 );
                if ((NOT l_U588) AND (l_U607 > 0.90000000))
                {
                    l_U402 = 8;
                    l_U608 = 0;
                }
            }
            else
            {
                TASK_PLAY_ANIM_WITH_FLAGS_AND_START_PHASE( l_U593, l_U604, l_U590, 1000, -1, 2080, l_U607 );
            }
            break;
            case 7:
            if (IS_CHAR_PLAYING_ANIM( l_U591, l_U590, l_U595 ))
            {
                GET_CHAR_ANIM_CURRENT_TIME( l_U591, l_U590, l_U595, ref l_U607 );
                if ((NOT l_U588) AND (l_U607 > 0.70000000))
                {
                    l_U402 = 8;
                    l_U608 = 0;
                }
            }
            else
            {
                TASK_PLAY_ANIM_WITH_FLAGS_AND_START_PHASE( l_U591, l_U595, l_U590, 1000, -1, 2080, l_U607 );
            }
            break;
        }
    }
    return;
}

void sub_88461()
{
    if (NOT l_U662)
    {
        if (NOT (l_U659 == l_U660))
        {
            if (l_U607 > (l_U634[l_U660] - l_U661))
            {
                l_U662 = 1;
            }
        }
    }
    else if (sub_88538())
    {
        l_U662 = 0;
        CLEAR_HELP();
        l_U660++;
    }
    else if (l_U607 > (l_U634[l_U660] + l_U661))
    {
        l_U662 = 0;
        CLEAR_HELP();
        l_U402 = 7;
        l_U111 = 1;
        l_U608 = 0;
        l_U660++;
    };;;
    return;
}

int sub_88538()
{
    l_U405 = l_U403;
    l_U406 = l_U404;
    GET_POSITION_OF_ANALOGUE_STICKS( 0, ref l_U403, ref l_U404, ref l_U407, ref l_U407 );
    if (NOT IS_USING_CONTROLLER())
    {
        GET_KEYBOARD_MOVE_INPUT( ref l_U403, ref l_U404 );
    }
    if (((l_U404 > 65478) AND (l_U404 < 58)) AND ((l_U403 > 65478) AND (l_U403 < 58)))
    {
        l_U110 = 1;
    }
    if (l_U110)
    {
        switch (l_U609[l_U660])
        {
            case 0:
            if (l_U404 < 65416)
            {
                l_U110 = 0;
                sub_88782();
                return 1;
            }
            break;
            case 1:
            if (l_U404 > 120)
            {
                l_U110 = 0;
                sub_88782();
                return 1;
            }
            break;
            case 2:
            if (l_U403 < 65416)
            {
                l_U110 = 0;
                sub_88782();
                return 1;
            }
            break;
            case 3:
            if (l_U403 > 120)
            {
                l_U110 = 0;
                sub_88782();
                return 1;
            }
            break;
            case 4:
            if (sub_88959( 0, 16 ))
            {
                sub_88782();
                return 1;
            }
            break;
            case 7:
            if (sub_88959( 0, 17 ))
            {
                sub_88782();
                return 1;
            }
            break;
            case 5:
            if (sub_88959( 0, 14 ))
            {
                sub_88782();
                return 1;
            }
            break;
            case 6:
            if (sub_88959( 0, 15 ))
            {
                sub_88782();
                return 1;
            }
            break;
        }
    }
    return 0;
}

void sub_88782()
{
    if (l_U663[l_U660])
    {
        l_U411++;
        l_U412++;
        l_U112 = 0;
    }
    return;
}

int sub_88959(unknown uParam0, int iParam1)
{
    if (IS_USING_CONTROLLER())
    {
        return IS_BUTTON_JUST_PRESSED( uParam0, iParam1 );
    }
    else if (iParam1 == 15)
    {
        return IS_CONTROL_JUST_PRESSED( 2, l_U126 );
    }
    else if (iParam1 == 16)
    {
        return IS_CONTROL_JUST_PRESSED( 2, l_U123 );
    }
    else if (iParam1 == 14)
    {
        return IS_CONTROL_JUST_PRESSED( 2, l_U125 );
    }
    else if (iParam1 == 17)
    {
        return IS_CONTROL_JUST_PRESSED( 2, l_U124 );
    };;;;;
    return 0;
}

void sub_89344()
{
    int I;

    if (l_U589)
    {
        l_U589 = 0;
        sub_89369();
    }
    I = 0;
    for ( I = 0; I < 16; I++ )
    {
        if (DOES_OBJECT_EXIST( l_U504[I] ))
        {
            SET_OBJECT_COORDINATES( l_U504[I], l_U522[I]._fU0, l_U522[I]._fU4, l_U522[I]._fU8 );
            SET_OBJECT_HEADING( l_U504[I], l_U571[I] );
        }
    }
    return;
}

void sub_89369()
{
    return;
}

void sub_89525()
{
    switch (l_U609[l_U660])
    {
        case 0:
        DISPLAY_TEXT( 0.50000000, 0.75000000, "BS_UP" );
        break;
        case 1:
        DISPLAY_TEXT( 0.50000000, 0.75000000, "BS_DOWN" );
        break;
        case 2:
        DISPLAY_TEXT( 0.50000000, 0.75000000, "BS_LEFT" );
        break;
        case 3:
        DISPLAY_TEXT( 0.50000000, 0.75000000, "BS_RIGHT" );
        break;
        case 4:
        DISPLAY_TEXT( 0.50000000, 0.75000000, "BS_SPECIAL" );
        break;
        case 5:
        DISPLAY_TEXT( 0.50000000, 0.75000000, "BS_SPECIAL_X" );
        break;
        case 6:
        DISPLAY_TEXT( 0.50000000, 0.75000000, "BS_SPECIAL_Y" );
        break;
        case 7:
        DISPLAY_TEXT( 0.50000000, 0.75000000, "BS_SPECIAL_B" );
        break;
    }
    return;
}

void sub_89986()
{
    l_U659 = 0;
    l_U660 = 0;
    return;
}

void sub_90015()
{
    l_U412 = 0;
    l_U426 = 0;
    l_U411 = 0;
    return;
}

void sub_90237()
{
    sub_90246();
    if (NOT l_U112)
    {
        ACTIVATE_SCRIPTED_CAMS( 0, 0 );
        sub_2257();
        switch (l_U402)
        {
            case 9:
            switch (l_U472)
            {
                case 1:
                CREATE_CAM( 14, ref l_U129[0] );
                SET_CAM_POS( l_U129[0], -431.54570000, 351.78740000, 12.21750000 );
                SET_CAM_ROT( l_U129[0], -2.80220000, 0.00000000, -75.60900000 );
                SET_CAM_FOV( l_U129[0], 31.76880000 );
                SET_CAM_ACTIVE( l_U129[0], 1 );
                CREATE_CAM( 14, ref l_U129[1] );
                SET_CAM_POS( l_U129[1], -431.55500000, 351.78600000, 12.21800000 );
                SET_CAM_ROT( l_U129[1], -2.80220000, 0.00000000, -74.62800000 );
                SET_CAM_FOV( l_U129[1], 31.36830000 );
                SET_CAM_ACTIVE( l_U129[1], 1 );
                CREATE_CAM( 14, ref l_U129[2] );
                SET_CAM_POS( l_U129[2], -431.56430000, 351.78460000, 12.21850000 );
                SET_CAM_ROT( l_U129[2], -2.80220000, 0.00000000, -73.64710000 );
                SET_CAM_FOV( l_U129[2], 30.96770000 );
                SET_CAM_ACTIVE( l_U129[2], 1 );
                CREATE_CAM( 14, ref l_U129[3] );
                SET_CAM_POS( l_U129[3], -431.57360000, 351.78320000, 12.21890000 );
                SET_CAM_ROT( l_U129[3], -2.80220000, 0.00000000, -72.66610000 );
                SET_CAM_FOV( l_U129[3], 30.56720000 );
                SET_CAM_ACTIVE( l_U129[3], 1 );
                CREATE_CAM( 25, ref l_U128 );
                SET_CAM_SPLINE_DURATION( l_U128, 10000 );
                SET_CAM_SPLINE_SPEED_GRAPH( l_U128, 0 );
                SET_CAM_SPLINE_SPEED_CONSTANT( l_U128, 0 );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[0] );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[1] );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[2] );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[3] );
                SET_CAM_ACTIVE( l_U128, 1 );
                SET_CAM_PROPAGATE( l_U128, 1 );
                break;
                case 3:
                CREATE_CAM( 14, ref l_U129[0] );
                SET_CAM_POS( l_U129[0], -431.66320000, 351.70900000, 11.63190000 );
                SET_CAM_ROT( l_U129[0], 10.41030000, 0.00000000, -79.75350000 );
                SET_CAM_FOV( l_U129[0], 39.00000000 );
                SET_CAM_ACTIVE( l_U129[0], 1 );
                CREATE_CAM( 14, ref l_U129[1] );
                SET_CAM_POS( l_U129[1], -431.51000000, 351.73670000, 11.66050000 );
                SET_CAM_ROT( l_U129[1], 10.41030000, 0.00000000, -79.75350000 );
                SET_CAM_FOV( l_U129[1], 39.00000000 );
                SET_CAM_ACTIVE( l_U129[1], 1 );
                CREATE_CAM( 14, ref l_U129[2] );
                SET_CAM_POS( l_U129[2], -431.35680000, 351.76440000, 11.68910000 );
                SET_CAM_ROT( l_U129[2], 10.41030000, 0.00000000, -79.75350000 );
                SET_CAM_FOV( l_U129[2], 39.00000000 );
                SET_CAM_ACTIVE( l_U129[2], 1 );
                CREATE_CAM( 14, ref l_U129[3] );
                SET_CAM_POS( l_U129[3], -431.20350000, 351.79210000, 11.71770000 );
                SET_CAM_ROT( l_U129[3], 10.41030000, 0.00000000, -79.75350000 );
                SET_CAM_FOV( l_U129[3], 39.00000000 );
                SET_CAM_ACTIVE( l_U129[3], 1 );
                CREATE_CAM( 25, ref l_U128 );
                SET_CAM_SPLINE_DURATION( l_U128, 4000 );
                SET_CAM_SPLINE_SPEED_GRAPH( l_U128, 0 );
                SET_CAM_SPLINE_SPEED_CONSTANT( l_U128, 0 );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[0] );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[1] );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[2] );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[3] );
                SET_CAM_ACTIVE( l_U128, 1 );
                SET_CAM_PROPAGATE( l_U128, 1 );
                break;
                case 5:
                CREATE_CAM( 14, ref l_U129[0] );
                SET_CAM_POS( l_U129[0], -431.70130000, 351.86560000, 12.18860000 );
                SET_CAM_ROT( l_U129[0], -0.61850000, 0.00000000, -74.25270000 );
                SET_CAM_FOV( l_U129[0], 41.40000000 );
                SET_CAM_ACTIVE( l_U129[0], 1 );
                CREATE_CAM( 14, ref l_U129[1] );
                SET_CAM_POS( l_U129[1], -431.58810000, 351.89750000, 12.18800000 );
                SET_CAM_ROT( l_U129[1], -1.42530000, 0.00000000, -74.25270000 );
                SET_CAM_FOV( l_U129[1], 40.50000000 );
                SET_CAM_ACTIVE( l_U129[1], 1 );
                CREATE_CAM( 14, ref l_U129[2] );
                SET_CAM_POS( l_U129[2], -431.47490000, 351.92940000, 12.18740000 );
                SET_CAM_ROT( l_U129[2], -2.23210000, 0.00000000, -74.25270000 );
                SET_CAM_FOV( l_U129[2], 39.60000000 );
                SET_CAM_ACTIVE( l_U129[2], 1 );
                CREATE_CAM( 14, ref l_U129[3] );
                SET_CAM_POS( l_U129[3], -431.36170000, 351.96130000, 12.18680000 );
                SET_CAM_ROT( l_U129[3], -3.03890000, 0.00000000, -74.25270000 );
                SET_CAM_FOV( l_U129[3], 38.70000000 );
                SET_CAM_ACTIVE( l_U129[3], 1 );
                CREATE_CAM( 25, ref l_U128 );
                SET_CAM_SPLINE_DURATION( l_U128, 35000 );
                SET_CAM_SPLINE_SPEED_GRAPH( l_U128, 0 );
                SET_CAM_SPLINE_SPEED_CONSTANT( l_U128, 0 );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[0] );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[1] );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[2] );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[3] );
                SET_CAM_ACTIVE( l_U128, 1 );
                SET_CAM_PROPAGATE( l_U128, 1 );
                break;
            }
            break;
            case 0:
            switch (l_U411)
            {
                case 0:
                CREATE_CAM( 14, ref l_U129[0] );
                SET_CAM_POS( l_U129[0], -429.42870000, 352.35600000, 11.43390000 );
                SET_CAM_ROT( l_U129[0], 7.03260000, 0.00000000, -94.55720000 );
                SET_CAM_FOV( l_U129[0], 42.60000000 );
                SET_CAM_ACTIVE( l_U129[0], 1 );
                CREATE_CAM( 14, ref l_U129[1] );
                SET_CAM_POS( l_U129[1], -430.14810000, 352.41330000, 11.35350000 );
                SET_CAM_ROT( l_U129[1], 7.99240000, 0.00000000, -94.55720000 );
                SET_CAM_FOV( l_U129[1], 42.60000000 );
                SET_CAM_ACTIVE( l_U129[1], 1 );
                CREATE_CAM( 14, ref l_U129[2] );
                SET_CAM_POS( l_U129[2], -430.86740000, 352.47060000, 11.27320000 );
                SET_CAM_ROT( l_U129[2], 8.95210000, 0.00000000, -94.55720000 );
                SET_CAM_FOV( l_U129[2], 42.60000000 );
                SET_CAM_ACTIVE( l_U129[2], 1 );
                CREATE_CAM( 14, ref l_U129[3] );
                SET_CAM_POS( l_U129[3], -431.58670000, 352.52800000, 11.19280000 );
                SET_CAM_ROT( l_U129[3], 9.91189900, 0.00000000, -94.55720000 );
                SET_CAM_FOV( l_U129[3], 42.60000000 );
                SET_CAM_ACTIVE( l_U129[3], 1 );
                CREATE_CAM( 25, ref l_U128 );
                SET_CAM_SPLINE_DURATION( l_U128, 7000 );
                SET_CAM_SPLINE_SPEED_GRAPH( l_U128, 0 );
                SET_CAM_SPLINE_SPEED_CONSTANT( l_U128, 0 );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[0] );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[1] );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[2] );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[3] );
                SET_CAM_ACTIVE( l_U128, 1 );
                SET_CAM_PROPAGATE( l_U128, 1 );
                break;
                case 1:
                CREATE_CAM( 14, ref l_U129[0] );
                SET_CAM_POS( l_U129[0], -433.37180000, 352.76770000, 12.98750000 );
                SET_CAM_ROT( l_U129[0], -17.87790000, 0.00000000, -97.47090000 );
                SET_CAM_FOV( l_U129[0], 37.50000000 );
                SET_CAM_ACTIVE( l_U129[0], 1 );
                CREATE_CAM( 14, ref l_U129[1] );
                SET_CAM_POS( l_U129[1], -433.31040000, 352.59610000, 12.96340000 );
                SET_CAM_ROT( l_U129[1], -17.11720000, 0.00000000, -93.41410000 );
                SET_CAM_FOV( l_U129[1], 37.50000000 );
                SET_CAM_ACTIVE( l_U129[1], 1 );
                CREATE_CAM( 14, ref l_U129[2] );
                SET_CAM_POS( l_U129[2], -433.24900000, 352.42450000, 12.93930000 );
                SET_CAM_ROT( l_U129[2], -16.35660000, 0.00000000, -89.35730000 );
                SET_CAM_FOV( l_U129[2], 37.50000000 );
                SET_CAM_ACTIVE( l_U129[2], 1 );
                CREATE_CAM( 14, ref l_U129[3] );
                SET_CAM_POS( l_U129[3], -433.18750000, 352.25290000, 12.91510000 );
                SET_CAM_ROT( l_U129[3], -15.59590000, 0.00000000, -85.30040000 );
                SET_CAM_FOV( l_U129[3], 37.50000000 );
                SET_CAM_ACTIVE( l_U129[3], 1 );
                CREATE_CAM( 25, ref l_U128 );
                SET_CAM_SPLINE_DURATION( l_U128, 15000 );
                SET_CAM_SPLINE_SPEED_GRAPH( l_U128, 0 );
                SET_CAM_SPLINE_SPEED_CONSTANT( l_U128, 0 );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[0] );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[1] );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[2] );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[3] );
                SET_CAM_ACTIVE( l_U128, 1 );
                SET_CAM_PROPAGATE( l_U128, 1 );
                break;
                case 2:
                sub_5974( -430.51390000, 350.22450000, 10.11660000, -427.16390000, 353.82450000, 13.71660000, g_U30190 );
                sub_93732( -429.11500000, 349.68900000, 10.71170000, 21.10600000, 0, 0, "brtndr_simple_dance", 0 );
                sub_93732( -428.53200000, 350.32900000, 10.72120000, 50.34400000, 0, 0, "brtndr_flirt", 0 );
                sub_93732( -430.73300000, 350.83900000, 10.71170000, 326.78600000, 1, 0, "brtndr_flirt", 0 );
                sub_93732( -428.87500000, 348.73700000, 11.14700000, 13.25000000, 0, 0, "brtndr_simple_dance", 0 );
                sub_93732( -432.17200000, 353.91100000, 11.64700000, 255.63100000, 1, 0, "brtndr_flirt", 0 );
                sub_93732( -431.32600000, 354.64900000, 10.71170000, 244.40300000, 0, 0, "brtndr_simple_dance", 0 );
                sub_94472();
                CREATE_CAM( 14, ref l_U129[0] );
                SET_CAM_POS( l_U129[0], -431.31800000, 352.18170000, 12.18860000 );
                SET_CAM_ROT( l_U129[0], -1.62340000, 0.00000000, -84.27890000 );
                SET_CAM_FOV( l_U129[0], 31.75000000 );
                SET_CAM_ACTIVE( l_U129[0], 1 );
                CREATE_CAM( 14, ref l_U129[1] );
                SET_CAM_POS( l_U129[1], -431.44380000, 352.07690000, 12.18860000 );
                SET_CAM_ROT( l_U129[1], -1.30210000, 0.00000000, -80.93690000 );
                SET_CAM_FOV( l_U129[1], 31.75000000 );
                SET_CAM_ACTIVE( l_U129[1], 1 );
                CREATE_CAM( 14, ref l_U129[2] );
                SET_CAM_POS( l_U129[2], -431.56970000, 351.97200000, 12.18860000 );
                SET_CAM_ROT( l_U129[2], -0.98070000, 0.00000000, -77.59480000 );
                SET_CAM_FOV( l_U129[2], 31.75000000 );
                SET_CAM_ACTIVE( l_U129[2], 1 );
                CREATE_CAM( 14, ref l_U129[3] );
                SET_CAM_POS( l_U129[3], -431.69560000, 351.86720000, 12.18860000 );
                SET_CAM_ROT( l_U129[3], -0.65940000, 0.00000000, -74.25270000 );
                SET_CAM_FOV( l_U129[3], 31.75000000 );
                SET_CAM_ACTIVE( l_U129[3], 1 );
                CREATE_CAM( 25, ref l_U128 );
                SET_CAM_SPLINE_DURATION( l_U128, 15000 );
                SET_CAM_SPLINE_SPEED_GRAPH( l_U128, 0 );
                SET_CAM_SPLINE_SPEED_CONSTANT( l_U128, 0 );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[0] );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[1] );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[2] );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[3] );
                SET_CAM_ACTIVE( l_U128, 1 );
                SET_CAM_PROPAGATE( l_U128, 1 );
                break;
                case 3:
                CREATE_CAM( 14, ref l_U129[0] );
                SET_CAM_POS( l_U129[0], -429.91690000, 354.60960000, 12.39490000 );
                SET_CAM_ROT( l_U129[0], -10.90770000, 0.00000000, -165.24400000 );
                SET_CAM_FOV( l_U129[0], 34.50000000 );
                SET_CAM_ACTIVE( l_U129[0], 1 );
                CREATE_CAM( 14, ref l_U129[1] );
                SET_CAM_POS( l_U129[1], -429.95570000, 354.74830000, 12.42260000 );
                SET_CAM_ROT( l_U129[1], -10.90770000, 0.00000000, -164.32730000 );
                SET_CAM_FOV( l_U129[1], 34.50000000 );
                SET_CAM_ACTIVE( l_U129[1], 1 );
                CREATE_CAM( 14, ref l_U129[2] );
                SET_CAM_POS( l_U129[2], -429.99440000, 354.88700000, 12.45040000 );
                SET_CAM_ROT( l_U129[2], -10.90770000, 0.00000000, -163.41060000 );
                SET_CAM_FOV( l_U129[2], 34.50000000 );
                SET_CAM_ACTIVE( l_U129[2], 1 );
                CREATE_CAM( 14, ref l_U129[3] );
                SET_CAM_POS( l_U129[3], -430.03310000, 355.02570000, 12.47810000 );
                SET_CAM_ROT( l_U129[3], -10.90770000, 0.00000000, -162.49390000 );
                SET_CAM_FOV( l_U129[3], 34.50000000 );
                SET_CAM_ACTIVE( l_U129[3], 1 );
                CREATE_CAM( 25, ref l_U128 );
                SET_CAM_SPLINE_DURATION( l_U128, 5000 );
                SET_CAM_SPLINE_SPEED_GRAPH( l_U128, 0 );
                SET_CAM_SPLINE_SPEED_CONSTANT( l_U128, 0 );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[0] );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[1] );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[2] );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[3] );
                SET_CAM_ACTIVE( l_U128, 1 );
                SET_CAM_PROPAGATE( l_U128, 1 );
                break;
                case 4:
                CREATE_CAM( 14, ref l_U129[0] );
                SET_CAM_POS( l_U129[0], -430.48190000, 353.22690000, 12.24660000 );
                SET_CAM_ROT( l_U129[0], -5.39710000, 0.00000000, -110.20880000 );
                SET_CAM_FOV( l_U129[0], 35.10000000 );
                SET_CAM_ACTIVE( l_U129[0], 1 );
                CREATE_CAM( 14, ref l_U129[1] );
                SET_CAM_POS( l_U129[1], -430.86060000, 353.46330000, 12.43900000 );
                SET_CAM_ROT( l_U129[1], -9.60660000, 0.00000000, -110.20880000 );
                SET_CAM_FOV( l_U129[1], 37.00000000 );
                SET_CAM_ACTIVE( l_U129[1], 1 );
                CREATE_CAM( 14, ref l_U129[2] );
                SET_CAM_POS( l_U129[2], -431.23920000, 353.69980000, 12.63140000 );
                SET_CAM_ROT( l_U129[2], -13.81620000, 0.00000000, -110.20880000 );
                SET_CAM_FOV( l_U129[2], 38.90000000 );
                SET_CAM_ACTIVE( l_U129[2], 1 );
                CREATE_CAM( 14, ref l_U129[3] );
                SET_CAM_POS( l_U129[3], -431.61790000, 353.93620000, 12.82380000 );
                SET_CAM_ROT( l_U129[3], -18.02570000, 0.00000000, -110.20880000 );
                SET_CAM_FOV( l_U129[3], 40.80000000 );
                SET_CAM_ACTIVE( l_U129[3], 1 );
                CREATE_CAM( 25, ref l_U128 );
                SET_CAM_SPLINE_DURATION( l_U128, 8000 );
                SET_CAM_SPLINE_SPEED_GRAPH( l_U128, 0 );
                SET_CAM_SPLINE_SPEED_CONSTANT( l_U128, 0 );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[0] );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[1] );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[2] );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[3] );
                SET_CAM_ACTIVE( l_U128, 1 );
                SET_CAM_PROPAGATE( l_U128, 1 );
                break;
                case 5:
                CREATE_CAM( 14, ref l_U129[0] );
                SET_CAM_POS( l_U129[0], -427.35450000, 353.28080000, 11.99010000 );
                SET_CAM_ROT( l_U129[0], -4.61340000, 14.86340000, 118.60840000 );
                SET_CAM_FOV( l_U129[0], 50.68000000 );
                SET_CAM_ACTIVE( l_U129[0], 1 );
                CREATE_CAM( 14, ref l_U129[1] );
                SET_CAM_POS( l_U129[1], -427.36540000, 353.27450000, 11.98910000 );
                SET_CAM_ROT( l_U129[1], -4.61340000, 14.86340000, 118.60840000 );
                SET_CAM_FOV( l_U129[1], 50.68000000 );
                SET_CAM_ACTIVE( l_U129[1], 1 );
                CREATE_CAM( 14, ref l_U129[2] );
                SET_CAM_POS( l_U129[2], -427.37630000, 353.26830000, 11.98810000 );
                SET_CAM_ROT( l_U129[2], -4.61340000, 14.86340000, 118.60840000 );
                SET_CAM_FOV( l_U129[2], 50.68000000 );
                SET_CAM_ACTIVE( l_U129[2], 1 );
                CREATE_CAM( 14, ref l_U129[3] );
                SET_CAM_POS( l_U129[3], -427.38710000, 353.26210000, 11.98720000 );
                SET_CAM_ROT( l_U129[3], -4.61340000, 14.86340000, 118.60840000 );
                SET_CAM_FOV( l_U129[3], 50.68000000 );
                SET_CAM_ACTIVE( l_U129[3], 1 );
                CREATE_CAM( 25, ref l_U128 );
                SET_CAM_SPLINE_DURATION( l_U128, 8000 );
                SET_CAM_SPLINE_SPEED_GRAPH( l_U128, 0 );
                SET_CAM_SPLINE_SPEED_CONSTANT( l_U128, 0 );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[0] );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[1] );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[2] );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[3] );
                SET_CAM_ACTIVE( l_U128, 1 );
                SET_CAM_PROPAGATE( l_U128, 1 );
                break;
            }
            break;
            case 1:
            CREATE_CAM( 14, ref l_U129[0] );
            SET_CAM_POS( l_U129[0], -433.43770000, 352.06670000, 13.15490000 );
            SET_CAM_ROT( l_U129[0], -20.53730000, 0.00000000, -84.89170000 );
            SET_CAM_FOV( l_U129[0], 36.00000000 );
            SET_CAM_ACTIVE( l_U129[0], 1 );
            CREATE_CAM( 14, ref l_U129[1] );
            SET_CAM_POS( l_U129[1], -433.14720000, 351.95980000, 13.05900000 );
            SET_CAM_ROT( l_U129[1], -18.78120000, 0.00000000, -83.37400000 );
            SET_CAM_FOV( l_U129[1], 35.80000000 );
            SET_CAM_ACTIVE( l_U129[1], 1 );
            CREATE_CAM( 14, ref l_U129[2] );
            SET_CAM_POS( l_U129[2], -432.85670000, 351.85290000, 12.96310000 );
            SET_CAM_ROT( l_U129[2], -17.02500000, 0.00000000, -81.85630000 );
            SET_CAM_FOV( l_U129[2], 35.60000000 );
            SET_CAM_ACTIVE( l_U129[2], 1 );
            CREATE_CAM( 14, ref l_U129[3] );
            SET_CAM_POS( l_U129[3], -432.56610000, 351.74610000, 12.86720000 );
            SET_CAM_ROT( l_U129[3], -15.26880000, 0.00000000, -80.33860000 );
            SET_CAM_FOV( l_U129[3], 35.40000000 );
            SET_CAM_ACTIVE( l_U129[3], 1 );
            CREATE_CAM( 25, ref l_U128 );
            SET_CAM_SPLINE_DURATION( l_U128, 15000 );
            SET_CAM_SPLINE_SPEED_GRAPH( l_U128, 0 );
            SET_CAM_SPLINE_SPEED_CONSTANT( l_U128, 0 );
            ADD_CAM_SPLINE_NODE( l_U128, l_U129[0] );
            ADD_CAM_SPLINE_NODE( l_U128, l_U129[1] );
            ADD_CAM_SPLINE_NODE( l_U128, l_U129[2] );
            ADD_CAM_SPLINE_NODE( l_U128, l_U129[3] );
            SET_CAM_ACTIVE( l_U128, 1 );
            SET_CAM_PROPAGATE( l_U128, 1 );
            break;
            case 2:
            switch (l_U411)
            {
                case 0:
                CREATE_CAM( 14, ref l_U129[0] );
                SET_CAM_POS( l_U129[0], -426.87190000, 350.47770000, 11.25130000 );
                SET_CAM_ROT( l_U129[0], 10.03340000, 0.00000000, 47.69780000 );
                SET_CAM_FOV( l_U129[0], 49.50000000 );
                SET_CAM_ACTIVE( l_U129[0], 1 );
                CREATE_CAM( 14, ref l_U129[1] );
                SET_CAM_POS( l_U129[1], -426.59330000, 352.16890000, 11.38130000 );
                SET_CAM_ROT( l_U129[1], 5.82750000, 0.00000000, 91.20630000 );
                SET_CAM_FOV( l_U129[1], 49.50000000 );
                SET_CAM_ACTIVE( l_U129[1], 1 );
                CREATE_CAM( 14, ref l_U129[2] );
                SET_CAM_POS( l_U129[2], -427.14590000, 353.78240000, 11.50650000 );
                SET_CAM_ROT( l_U129[2], 7.90250000, 0.00000000, 123.09980000 );
                SET_CAM_FOV( l_U129[2], 49.50000000 );
                SET_CAM_ACTIVE( l_U129[2], 1 );
                CREATE_CAM( 14, ref l_U129[3] );
                SET_CAM_POS( l_U129[3], -429.16720000, 354.50440000, 11.55780000 );
                SET_CAM_ROT( l_U129[3], 0.74140000, 0.00000000, -179.09060000 );
                SET_CAM_FOV( l_U129[3], 49.50000000 );
                SET_CAM_ACTIVE( l_U129[3], 1 );
                CREATE_CAM( 14, ref l_U129[4] );
                SET_CAM_POS( l_U129[4], -430.93700000, 353.52770000, 11.55780000 );
                SET_CAM_ROT( l_U129[4], 0.74140000, 0.00000000, -130.86070000 );
                SET_CAM_FOV( l_U129[4], 49.50000000 );
                SET_CAM_ACTIVE( l_U129[4], 1 );
                CREATE_CAM( 25, ref l_U128 );
                SET_CAM_SPLINE_DURATION( l_U128, 15000 );
                SET_CAM_SPLINE_SPEED_GRAPH( l_U128, 0 );
                SET_CAM_SPLINE_SPEED_CONSTANT( l_U128, 0 );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[0] );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[1] );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[2] );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[3] );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[4] );
                SET_CAM_ACTIVE( l_U128, 1 );
                SET_CAM_PROPAGATE( l_U128, 1 );
                break;
                case 1:
                CREATE_CAM( 14, ref l_U129[0] );
                SET_CAM_POS( l_U129[0], -430.06200000, 351.99560000, 12.38470000 );
                SET_CAM_ROT( l_U129[0], -5.51120000, 0.00000000, -83.18080000 );
                SET_CAM_FOV( l_U129[0], 23.70000000 );
                SET_CAM_ACTIVE( l_U129[0], 1 );
                CREATE_CAM( 14, ref l_U129[1] );
                SET_CAM_POS( l_U129[1], -430.19040000, 351.98030000, 12.39720000 );
                SET_CAM_ROT( l_U129[1], -5.51120000, 0.00000000, -83.18080000 );
                SET_CAM_FOV( l_U129[1], 23.70000000 );
                SET_CAM_ACTIVE( l_U129[1], 1 );
                CREATE_CAM( 14, ref l_U129[2] );
                SET_CAM_POS( l_U129[2], -430.31870000, 351.96490000, 12.40960000 );
                SET_CAM_ROT( l_U129[2], -5.51120000, 0.00000000, -83.18080000 );
                SET_CAM_FOV( l_U129[2], 23.70000000 );
                SET_CAM_ACTIVE( l_U129[2], 1 );
                CREATE_CAM( 14, ref l_U129[3] );
                SET_CAM_POS( l_U129[3], -430.44700000, 351.94960000, 12.42210000 );
                SET_CAM_ROT( l_U129[3], -5.51120000, 0.00000000, -83.18080000 );
                SET_CAM_FOV( l_U129[3], 23.70000000 );
                SET_CAM_ACTIVE( l_U129[3], 1 );
                CREATE_CAM( 25, ref l_U128 );
                SET_CAM_SPLINE_DURATION( l_U128, 6000 );
                SET_CAM_SPLINE_SPEED_GRAPH( l_U128, 0 );
                SET_CAM_SPLINE_SPEED_CONSTANT( l_U128, 0 );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[0] );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[1] );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[2] );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[3] );
                SET_CAM_ACTIVE( l_U128, 1 );
                SET_CAM_PROPAGATE( l_U128, 1 );
                break;
            }
            break;
            case 3:
            switch (l_U411)
            {
                case 0:
                CREATE_CAM( 14, ref l_U129[0] );
                SET_CAM_POS( l_U129[0], -434.14070000, 349.63310000, 13.14850000 );
                SET_CAM_ROT( l_U129[0], -13.05560000, 0.00000000, -58.32090000 );
                SET_CAM_FOV( l_U129[0], 33.60000000 );
                SET_CAM_ACTIVE( l_U129[0], 1 );
                CREATE_CAM( 14, ref l_U129[1] );
                SET_CAM_POS( l_U129[1], -433.93080000, 349.89410000, 13.19120000 );
                SET_CAM_ROT( l_U129[1], -14.41600000, 0.00000000, -58.32090000 );
                SET_CAM_FOV( l_U129[1], 33.60000000 );
                SET_CAM_ACTIVE( l_U129[1], 1 );
                CREATE_CAM( 14, ref l_U129[2] );
                SET_CAM_POS( l_U129[2], -433.72090000, 350.15500000, 13.23390000 );
                SET_CAM_ROT( l_U129[2], -15.77650000, 0.00000000, -58.32090000 );
                SET_CAM_FOV( l_U129[2], 33.60000000 );
                SET_CAM_ACTIVE( l_U129[2], 1 );
                CREATE_CAM( 14, ref l_U129[3] );
                SET_CAM_POS( l_U129[3], -433.51100000, 350.41600000, 13.27660000 );
                SET_CAM_ROT( l_U129[3], -17.13690000, 0.00000000, -58.32090000 );
                SET_CAM_FOV( l_U129[3], 33.60000000 );
                SET_CAM_ACTIVE( l_U129[3], 1 );
                CREATE_CAM( 25, ref l_U128 );
                SET_CAM_SPLINE_DURATION( l_U128, 8000 );
                SET_CAM_SPLINE_SPEED_GRAPH( l_U128, 0 );
                SET_CAM_SPLINE_SPEED_CONSTANT( l_U128, 0 );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[0] );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[1] );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[2] );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[3] );
                SET_CAM_ACTIVE( l_U128, 1 );
                SET_CAM_PROPAGATE( l_U128, 1 );
                break;
                case 1:
                CREATE_CAM( 14, ref l_U129[0] );
                SET_CAM_POS( l_U129[0], -428.45020000, 350.59130000, 11.59240000 );
                SET_CAM_ROT( l_U129[0], 14.52450000, 0.00000000, 23.10870000 );
                SET_CAM_FOV( l_U129[0], 45.89990000 );
                SET_CAM_ACTIVE( l_U129[0], 1 );
                CREATE_CAM( 14, ref l_U129[1] );
                SET_CAM_POS( l_U129[1], -428.38900000, 350.67310000, 11.61980000 );
                SET_CAM_ROT( l_U129[1], 14.43190000, 0.00000000, 23.89590000 );
                SET_CAM_FOV( l_U129[1], 45.89990000 );
                SET_CAM_ACTIVE( l_U129[1], 1 );
                CREATE_CAM( 14, ref l_U129[2] );
                SET_CAM_POS( l_U129[2], -428.32790000, 350.75490000, 11.64710000 );
                SET_CAM_ROT( l_U129[2], 14.33930000, 0.00000000, 24.68320000 );
                SET_CAM_FOV( l_U129[2], 45.89990000 );
                SET_CAM_ACTIVE( l_U129[2], 1 );
                CREATE_CAM( 14, ref l_U129[3] );
                SET_CAM_POS( l_U129[3], -428.26670000, 350.83680000, 11.67450000 );
                SET_CAM_ROT( l_U129[3], 14.24660000, 0.00000000, 25.47050000 );
                SET_CAM_FOV( l_U129[3], 45.89990000 );
                SET_CAM_ACTIVE( l_U129[3], 1 );
                CREATE_CAM( 25, ref l_U128 );
                SET_CAM_SPLINE_DURATION( l_U128, 4000 );
                SET_CAM_SPLINE_SPEED_GRAPH( l_U128, 0 );
                SET_CAM_SPLINE_SPEED_CONSTANT( l_U128, 0 );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[0] );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[1] );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[2] );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[3] );
                SET_CAM_ACTIVE( l_U128, 1 );
                SET_CAM_PROPAGATE( l_U128, 1 );
                break;
                case 2:
                CREATE_CAM( 14, ref l_U129[0] );
                SET_CAM_POS( l_U129[0], -430.69720000, 347.36870000, 12.98640000 );
                SET_CAM_ROT( l_U129[0], -12.84570000, -0.87740000, -14.69930000 );
                SET_CAM_FOV( l_U129[0], 34.80000000 );
                SET_CAM_ACTIVE( l_U129[0], 1 );
                CREATE_CAM( 14, ref l_U129[1] );
                SET_CAM_POS( l_U129[1], -430.63180000, 347.61400000, 12.92850000 );
                SET_CAM_ROT( l_U129[1], -12.85250000, -1.68790000, -13.75690000 );
                SET_CAM_FOV( l_U129[1], 34.80000000 );
                SET_CAM_ACTIVE( l_U129[1], 1 );
                CREATE_CAM( 14, ref l_U129[2] );
                SET_CAM_POS( l_U129[2], -430.56650000, 347.85940000, 12.87060000 );
                SET_CAM_ROT( l_U129[2], -12.85930000, -2.49840000, -12.81450000 );
                SET_CAM_FOV( l_U129[2], 34.80000000 );
                SET_CAM_ACTIVE( l_U129[2], 1 );
                CREATE_CAM( 14, ref l_U129[3] );
                SET_CAM_POS( l_U129[3], -430.50120000, 348.10480000, 12.81270000 );
                SET_CAM_ROT( l_U129[3], -12.86600000, -3.30890000, -11.87210000 );
                SET_CAM_FOV( l_U129[3], 34.80000000 );
                SET_CAM_ACTIVE( l_U129[3], 1 );
                CREATE_CAM( 25, ref l_U128 );
                SET_CAM_SPLINE_DURATION( l_U128, 8000 );
                SET_CAM_SPLINE_SPEED_GRAPH( l_U128, 0 );
                SET_CAM_SPLINE_SPEED_CONSTANT( l_U128, 0 );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[0] );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[1] );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[2] );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[3] );
                SET_CAM_ACTIVE( l_U128, 1 );
                SET_CAM_PROPAGATE( l_U128, 1 );
                break;
            }
            break;
            case 4:
            switch (l_U411)
            {
                case 0:
                CREATE_CAM( 14, ref l_U129[0] );
                SET_CAM_POS( l_U129[0], -430.23720000, 352.85940000, 11.69630000 );
                SET_CAM_ROT( l_U129[0], 8.04370000, 0.00000000, -118.14040000 );
                SET_CAM_FOV( l_U129[0], 33.00000000 );
                SET_CAM_ACTIVE( l_U129[0], 1 );
                CREATE_CAM( 14, ref l_U129[1] );
                SET_CAM_POS( l_U129[1], -430.42120000, 352.95790000, 11.66680000 );
                SET_CAM_ROT( l_U129[1], 8.04370000, 0.00000000, -118.14040000 );
                SET_CAM_FOV( l_U129[1], 33.00000000 );
                SET_CAM_ACTIVE( l_U129[1], 1 );
                CREATE_CAM( 14, ref l_U129[2] );
                SET_CAM_POS( l_U129[2], -430.60530000, 353.05640000, 11.63730000 );
                SET_CAM_ROT( l_U129[2], 8.04370000, 0.00000000, -118.14040000 );
                SET_CAM_FOV( l_U129[2], 33.00000000 );
                SET_CAM_ACTIVE( l_U129[2], 1 );
                CREATE_CAM( 14, ref l_U129[3] );
                SET_CAM_POS( l_U129[3], -430.78930000, 353.15480000, 11.60780000 );
                SET_CAM_ROT( l_U129[3], 8.04370000, 0.00000000, -118.14040000 );
                SET_CAM_FOV( l_U129[3], 33.00000000 );
                SET_CAM_ACTIVE( l_U129[3], 1 );
                CREATE_CAM( 25, ref l_U128 );
                SET_CAM_SPLINE_DURATION( l_U128, 10000 );
                SET_CAM_SPLINE_SPEED_GRAPH( l_U128, 0 );
                SET_CAM_SPLINE_SPEED_CONSTANT( l_U128, 0 );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[0] );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[1] );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[2] );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[3] );
                SET_CAM_ACTIVE( l_U128, 1 );
                SET_CAM_PROPAGATE( l_U128, 1 );
                break;
                case 1:
                CREATE_CAM( 14, ref l_U129[0] );
                SET_CAM_POS( l_U129[0], -432.61850000, 355.03340000, 12.88160000 );
                SET_CAM_ROT( l_U129[0], -14.58780000, 0.00000000, -137.91170000 );
                SET_CAM_FOV( l_U129[0], 36.30000000 );
                SET_CAM_ACTIVE( l_U129[0], 1 );
                CREATE_CAM( 14, ref l_U129[1] );
                SET_CAM_POS( l_U129[1], -431.97380000, 354.50970000, 12.67570000 );
                SET_CAM_ROT( l_U129[1], -13.03520000, 0.00000000, -134.69380000 );
                SET_CAM_FOV( l_U129[1], 36.30000000 );
                SET_CAM_ACTIVE( l_U129[1], 1 );
                CREATE_CAM( 14, ref l_U129[2] );
                SET_CAM_POS( l_U129[2], -431.32900000, 353.98610000, 12.46980000 );
                SET_CAM_ROT( l_U129[2], -11.48260000, 0.00000000, -131.47600000 );
                SET_CAM_FOV( l_U129[2], 36.30000000 );
                SET_CAM_ACTIVE( l_U129[2], 1 );
                CREATE_CAM( 14, ref l_U129[3] );
                SET_CAM_POS( l_U129[3], -430.68430000, 353.46250000, 12.26390000 );
                SET_CAM_ROT( l_U129[3], -9.93000000, 0.00000000, -128.25820000 );
                SET_CAM_FOV( l_U129[3], 36.30000000 );
                SET_CAM_ACTIVE( l_U129[3], 1 );
                CREATE_CAM( 25, ref l_U128 );
                SET_CAM_SPLINE_DURATION( l_U128, 10000 );
                SET_CAM_SPLINE_SPEED_GRAPH( l_U128, 0 );
                SET_CAM_SPLINE_SPEED_CONSTANT( l_U128, 0 );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[0] );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[1] );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[2] );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[3] );
                SET_CAM_ACTIVE( l_U128, 1 );
                SET_CAM_PROPAGATE( l_U128, 1 );
                break;
                case 2:
                CREATE_CAM( 14, ref l_U129[0] );
                SET_CAM_POS( l_U129[0], -423.68490000, 351.86090000, 12.21100000 );
                SET_CAM_ROT( l_U129[0], -7.63490000, 0.00000000, 91.13569000 );
                SET_CAM_FOV( l_U129[0], 28.20000000 );
                SET_CAM_ACTIVE( l_U129[0], 1 );
                CREATE_CAM( 14, ref l_U129[1] );
                SET_CAM_POS( l_U129[1], -424.03570000, 352.02680000, 12.03420000 );
                SET_CAM_ROT( l_U129[1], -5.86560000, 0.00000000, 91.29420000 );
                SET_CAM_FOV( l_U129[1], 28.20000000 );
                SET_CAM_ACTIVE( l_U129[1], 1 );
                CREATE_CAM( 14, ref l_U129[2] );
                SET_CAM_POS( l_U129[2], -424.38640000, 352.19270000, 11.85730000 );
                SET_CAM_ROT( l_U129[2], -4.09620000, 0.00000000, 91.45260000 );
                SET_CAM_FOV( l_U129[2], 28.20000000 );
                SET_CAM_ACTIVE( l_U129[2], 1 );
                CREATE_CAM( 14, ref l_U129[3] );
                SET_CAM_POS( l_U129[3], -424.73720000, 352.35860000, 11.68050000 );
                SET_CAM_ROT( l_U129[3], -2.32690000, 0.00000000, 91.61110000 );
                SET_CAM_FOV( l_U129[3], 28.20000000 );
                SET_CAM_ACTIVE( l_U129[3], 1 );
                CREATE_CAM( 25, ref l_U128 );
                SET_CAM_SPLINE_DURATION( l_U128, 10000 );
                SET_CAM_SPLINE_SPEED_GRAPH( l_U128, 0 );
                SET_CAM_SPLINE_SPEED_CONSTANT( l_U128, 0 );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[0] );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[1] );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[2] );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[3] );
                SET_CAM_ACTIVE( l_U128, 1 );
                SET_CAM_PROPAGATE( l_U128, 1 );
                break;
                case 3:
                CREATE_CAM( 14, ref l_U129[0] );
                SET_CAM_POS( l_U129[0], -428.30220000, 355.23270000, 12.17430000 );
                SET_CAM_ROT( l_U129[0], -2.31690000, 0.00000000, 170.04330000 );
                SET_CAM_FOV( l_U129[0], 24.90000000 );
                SET_CAM_ACTIVE( l_U129[0], 1 );
                CREATE_CAM( 14, ref l_U129[1] );
                SET_CAM_POS( l_U129[1], -428.47680000, 355.27590000, 12.17430000 );
                SET_CAM_ROT( l_U129[1], -2.31690000, 0.00000000, 170.28690000 );
                SET_CAM_FOV( l_U129[1], 24.90000000 );
                SET_CAM_ACTIVE( l_U129[1], 1 );
                CREATE_CAM( 14, ref l_U129[2] );
                SET_CAM_POS( l_U129[2], -428.65140000, 355.31910000, 12.17430000 );
                SET_CAM_ROT( l_U129[2], -2.31690000, 0.00000000, 170.53050000 );
                SET_CAM_FOV( l_U129[2], 24.90000000 );
                SET_CAM_ACTIVE( l_U129[2], 1 );
                CREATE_CAM( 14, ref l_U129[3] );
                SET_CAM_POS( l_U129[3], -428.82600000, 355.36230000, 12.17430000 );
                SET_CAM_ROT( l_U129[3], -2.31690000, 0.00000000, 170.77410000 );
                SET_CAM_FOV( l_U129[3], 24.90000000 );
                SET_CAM_ACTIVE( l_U129[3], 1 );
                CREATE_CAM( 25, ref l_U128 );
                SET_CAM_SPLINE_DURATION( l_U128, 10000 );
                SET_CAM_SPLINE_SPEED_GRAPH( l_U128, 0 );
                SET_CAM_SPLINE_SPEED_CONSTANT( l_U128, 0 );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[0] );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[1] );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[2] );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[3] );
                SET_CAM_ACTIVE( l_U128, 1 );
                SET_CAM_PROPAGATE( l_U128, 1 );
                break;
            }
            break;
            case 5:
            switch (l_U411)
            {
                case 0:
                CREATE_CAM( 14, ref l_U129[0] );
                SET_CAM_POS( l_U129[0], -433.25390000, 351.67830000, 13.21420000 );
                SET_CAM_ROT( l_U129[0], -21.84900000, 0.00000000, -86.41860000 );
                SET_CAM_FOV( l_U129[0], 45.30000000 );
                SET_CAM_ACTIVE( l_U129[0], 1 );
                CREATE_CAM( 14, ref l_U129[1] );
                SET_CAM_POS( l_U129[1], -432.72290000, 351.43800000, 13.10930000 );
                SET_CAM_ROT( l_U129[1], -21.23230000, 0.00000000, -79.31570000 );
                SET_CAM_FOV( l_U129[1], 45.30000000 );
                SET_CAM_ACTIVE( l_U129[1], 1 );
                CREATE_CAM( 14, ref l_U129[2] );
                SET_CAM_POS( l_U129[2], -432.19200000, 351.19760000, 13.00440000 );
                SET_CAM_ROT( l_U129[2], -20.61560000, 0.00000000, -72.21290000 );
                SET_CAM_FOV( l_U129[2], 45.30000000 );
                SET_CAM_ACTIVE( l_U129[2], 1 );
                CREATE_CAM( 14, ref l_U129[3] );
                SET_CAM_POS( l_U129[3], -431.66100000, 350.95720000, 12.89960000 );
                SET_CAM_ROT( l_U129[3], -19.99890000, 0.00000000, -65.11000000 );
                SET_CAM_FOV( l_U129[3], 45.30000000 );
                SET_CAM_ACTIVE( l_U129[3], 1 );
                CREATE_CAM( 25, ref l_U128 );
                SET_CAM_SPLINE_DURATION( l_U128, 35000 );
                SET_CAM_SPLINE_SPEED_GRAPH( l_U128, 0 );
                SET_CAM_SPLINE_SPEED_CONSTANT( l_U128, 0 );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[0] );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[1] );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[2] );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[3] );
                SET_CAM_ACTIVE( l_U128, 1 );
                SET_CAM_PROPAGATE( l_U128, 1 );
                break;
                case 1:
                CREATE_CAM( 14, ref l_U129[0] );
                SET_CAM_POS( l_U129[0], -431.87230000, 352.12630000, 12.01250000 );
                SET_CAM_ROT( l_U129[0], -0.88290000, 0.00000000, -93.99190000 );
                SET_CAM_FOV( l_U129[0], 44.40000000 );
                SET_CAM_ACTIVE( l_U129[0], 1 );
                CREATE_CAM( 14, ref l_U129[1] );
                SET_CAM_POS( l_U129[1], -431.73430000, 351.94360000, 12.01010000 );
                SET_CAM_ROT( l_U129[1], -0.88290000, 0.00000000, -89.46051000 );
                SET_CAM_FOV( l_U129[1], 44.40000000 );
                SET_CAM_ACTIVE( l_U129[1], 1 );
                CREATE_CAM( 14, ref l_U129[2] );
                SET_CAM_POS( l_U129[2], -431.59630000, 351.76100000, 12.00780000 );
                SET_CAM_ROT( l_U129[2], -0.88290000, 0.00000000, -84.92910000 );
                SET_CAM_FOV( l_U129[2], 44.40000000 );
                SET_CAM_ACTIVE( l_U129[2], 1 );
                CREATE_CAM( 14, ref l_U129[3] );
                SET_CAM_POS( l_U129[3], -431.45830000, 351.57830000, 12.00550000 );
                SET_CAM_ROT( l_U129[3], -0.88290000, 0.00000000, -80.39770000 );
                SET_CAM_FOV( l_U129[3], 44.40000000 );
                SET_CAM_ACTIVE( l_U129[3], 1 );
                CREATE_CAM( 25, ref l_U128 );
                SET_CAM_SPLINE_DURATION( l_U128, 10000 );
                SET_CAM_SPLINE_SPEED_GRAPH( l_U128, 0 );
                SET_CAM_SPLINE_SPEED_CONSTANT( l_U128, 0 );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[0] );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[1] );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[2] );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[3] );
                SET_CAM_ACTIVE( l_U128, 1 );
                SET_CAM_PROPAGATE( l_U128, 1 );
                break;
                case 2:
                CREATE_CAM( 14, ref l_U129[0] );
                SET_CAM_POS( l_U129[0], -432.08210000, 351.30280000, 12.78550000 );
                SET_CAM_ROT( l_U129[0], -18.55970000, 0.00000000, -69.93251000 );
                SET_CAM_FOV( l_U129[0], 38.70000000 );
                SET_CAM_ACTIVE( l_U129[0], 1 );
                CREATE_CAM( 14, ref l_U129[1] );
                SET_CAM_POS( l_U129[1], -431.83160000, 351.14470000, 12.80980000 );
                SET_CAM_ROT( l_U129[1], -19.83620000, 0.00000000, -66.36260000 );
                SET_CAM_FOV( l_U129[1], 38.70000000 );
                SET_CAM_ACTIVE( l_U129[1], 1 );
                CREATE_CAM( 14, ref l_U129[2] );
                SET_CAM_POS( l_U129[2], -431.58120000, 350.98650000, 12.83410000 );
                SET_CAM_ROT( l_U129[2], -21.11270000, 0.00000000, -62.79270000 );
                SET_CAM_FOV( l_U129[2], 38.70000000 );
                SET_CAM_ACTIVE( l_U129[2], 1 );
                CREATE_CAM( 14, ref l_U129[3] );
                SET_CAM_POS( l_U129[3], -431.33070000, 350.82840000, 12.85840000 );
                SET_CAM_ROT( l_U129[3], -22.38920000, 0.00000000, -59.22280000 );
                SET_CAM_FOV( l_U129[3], 38.70000000 );
                SET_CAM_ACTIVE( l_U129[3], 1 );
                CREATE_CAM( 25, ref l_U128 );
                SET_CAM_SPLINE_DURATION( l_U128, 10000 );
                SET_CAM_SPLINE_SPEED_GRAPH( l_U128, 0 );
                SET_CAM_SPLINE_SPEED_CONSTANT( l_U128, 0 );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[0] );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[1] );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[2] );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[3] );
                SET_CAM_ACTIVE( l_U128, 1 );
                SET_CAM_PROPAGATE( l_U128, 1 );
                break;
                case 3:
                CREATE_CAM( 14, ref l_U129[0] );
                SET_CAM_POS( l_U129[0], -431.53870000, 349.39390000, 12.89060000 );
                SET_CAM_ROT( l_U129[0], -15.78340000, 0.00000000, -45.23790000 );
                SET_CAM_FOV( l_U129[0], 42.00000000 );
                SET_CAM_ACTIVE( l_U129[0], 1 );
                CREATE_CAM( 14, ref l_U129[1] );
                SET_CAM_POS( l_U129[1], -431.89200000, 349.72380000, 12.89060000 );
                SET_CAM_ROT( l_U129[1], -15.78340000, 0.00000000, -52.62890000 );
                SET_CAM_FOV( l_U129[1], 42.00000000 );
                SET_CAM_ACTIVE( l_U129[1], 1 );
                CREATE_CAM( 14, ref l_U129[2] );
                SET_CAM_POS( l_U129[2], -432.24540000, 350.05360000, 12.89060000 );
                SET_CAM_ROT( l_U129[2], -15.78340000, 0.00000000, -60.02000000 );
                SET_CAM_FOV( l_U129[2], 42.00000000 );
                SET_CAM_ACTIVE( l_U129[2], 1 );
                CREATE_CAM( 14, ref l_U129[3] );
                SET_CAM_POS( l_U129[3], -432.59870000, 350.38350000, 12.89060000 );
                SET_CAM_ROT( l_U129[3], -15.78340000, 0.00000000, -67.41100000 );
                SET_CAM_FOV( l_U129[3], 42.00000000 );
                SET_CAM_ACTIVE( l_U129[3], 1 );
                CREATE_CAM( 25, ref l_U128 );
                SET_CAM_SPLINE_DURATION( l_U128, 10000 );
                SET_CAM_SPLINE_SPEED_GRAPH( l_U128, 0 );
                SET_CAM_SPLINE_SPEED_CONSTANT( l_U128, 0 );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[0] );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[1] );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[2] );
                ADD_CAM_SPLINE_NODE( l_U128, l_U129[3] );
                SET_CAM_ACTIVE( l_U128, 1 );
                SET_CAM_PROPAGATE( l_U128, 1 );
                break;
            }
            break;
            case 6:
            CREATE_CAM( 14, ref l_U129[0] );
            SET_CAM_POS( l_U129[0], -430.40360000, 351.73540000, 12.09720000 );
            SET_CAM_ROT( l_U129[0], -0.85160000, 0.00000000, -84.45490000 );
            SET_CAM_FOV( l_U129[0], 36.60000000 );
            SET_CAM_ACTIVE( l_U129[0], 1 );
            CREATE_CAM( 14, ref l_U129[1] );
            SET_CAM_POS( l_U129[1], -431.13770000, 351.68500000, 12.35380000 );
            SET_CAM_ROT( l_U129[1], -6.17600000, 0.00000000, -84.07150000 );
            SET_CAM_FOV( l_U129[1], 36.60000000 );
            SET_CAM_ACTIVE( l_U129[1], 1 );
            CREATE_CAM( 14, ref l_U129[2] );
            SET_CAM_POS( l_U129[2], -431.87190000, 351.63460000, 12.61050000 );
            SET_CAM_ROT( l_U129[2], -11.50050000, 0.00000000, -83.68810000 );
            SET_CAM_FOV( l_U129[2], 36.60000000 );
            SET_CAM_ACTIVE( l_U129[2], 1 );
            CREATE_CAM( 14, ref l_U129[3] );
            SET_CAM_POS( l_U129[3], -432.60610000, 351.58420000, 12.86710000 );
            SET_CAM_ROT( l_U129[3], -16.82490000, 0.00000000, -83.30470000 );
            SET_CAM_FOV( l_U129[3], 36.60000000 );
            SET_CAM_ACTIVE( l_U129[3], 1 );
            CREATE_CAM( 25, ref l_U128 );
            SET_CAM_SPLINE_DURATION( l_U128, 35000 );
            SET_CAM_SPLINE_SPEED_GRAPH( l_U128, 0 );
            SET_CAM_SPLINE_SPEED_CONSTANT( l_U128, 0 );
            ADD_CAM_SPLINE_NODE( l_U128, l_U129[0] );
            ADD_CAM_SPLINE_NODE( l_U128, l_U129[1] );
            ADD_CAM_SPLINE_NODE( l_U128, l_U129[2] );
            ADD_CAM_SPLINE_NODE( l_U128, l_U129[3] );
            SET_CAM_ACTIVE( l_U128, 1 );
            SET_CAM_PROPAGATE( l_U128, 1 );
            break;
            case 7:
            CREATE_CAM( 14, ref l_U129[0] );
            SET_CAM_POS( l_U129[0], -432.63750000, 351.85130000, 12.26920000 );
            SET_CAM_ROT( l_U129[0], -9.14060000, 0.00000000, -87.00180000 );
            SET_CAM_FOV( l_U129[0], 35.70000000 );
            SET_CAM_ACTIVE( l_U129[0], 1 );
            CREATE_CAM( 14, ref l_U129[1] );
            SET_CAM_POS( l_U129[1], -432.00420000, 351.68860000, 12.44030000 );
            SET_CAM_ROT( l_U129[1], -10.45940000, 0.00000000, -84.71010000 );
            SET_CAM_FOV( l_U129[1], 35.70000000 );
            SET_CAM_ACTIVE( l_U129[1], 1 );
            CREATE_CAM( 14, ref l_U129[2] );
            SET_CAM_POS( l_U129[2], -431.37080000, 351.52590000, 12.61140000 );
            SET_CAM_ROT( l_U129[2], -11.77830000, 0.00000000, -82.41830000 );
            SET_CAM_FOV( l_U129[2], 35.70000000 );
            SET_CAM_ACTIVE( l_U129[2], 1 );
            CREATE_CAM( 14, ref l_U129[3] );
            SET_CAM_POS( l_U129[3], -430.73750000, 351.36310000, 12.78250000 );
            SET_CAM_ROT( l_U129[3], -13.09710000, 0.00000000, -80.12660000 );
            SET_CAM_FOV( l_U129[3], 35.70000000 );
            SET_CAM_ACTIVE( l_U129[3], 1 );
            CREATE_CAM( 25, ref l_U128 );
            SET_CAM_SPLINE_DURATION( l_U128, 6000 );
            SET_CAM_SPLINE_SPEED_GRAPH( l_U128, 0 );
            SET_CAM_SPLINE_SPEED_CONSTANT( l_U128, 0 );
            ADD_CAM_SPLINE_NODE( l_U128, l_U129[0] );
            ADD_CAM_SPLINE_NODE( l_U128, l_U129[1] );
            ADD_CAM_SPLINE_NODE( l_U128, l_U129[2] );
            ADD_CAM_SPLINE_NODE( l_U128, l_U129[3] );
            SET_CAM_ACTIVE( l_U128, 1 );
            SET_CAM_PROPAGATE( l_U128, 1 );
            break;
            case 8:
            CREATE_CAM( 14, ref l_U129[0] );
            SET_CAM_POS( l_U129[0], -430.47080000, 354.68760000, 12.96460000 );
            SET_CAM_ROT( l_U129[0], -17.36330000, 0.00000000, -110.32500000 );
            SET_CAM_FOV( l_U129[0], 45.00000000 );
            SET_CAM_ACTIVE( l_U129[0], 1 );
            CREATE_CAM( 14, ref l_U129[1] );
            SET_CAM_POS( l_U129[1], -430.47080000, 354.68760000, 12.96460000 );
            SET_CAM_ROT( l_U129[1], -16.90700000, 0.00000000, -126.17220000 );
            SET_CAM_FOV( l_U129[1], 45.00000000 );
            SET_CAM_ACTIVE( l_U129[1], 1 );
            CREATE_CAM( 14, ref l_U129[2] );
            SET_CAM_POS( l_U129[2], -430.47080000, 354.68760000, 12.96460000 );
            SET_CAM_ROT( l_U129[2], -16.45080000, 0.00000000, -142.01940000 );
            SET_CAM_FOV( l_U129[2], 45.00000000 );
            SET_CAM_ACTIVE( l_U129[2], 1 );
            CREATE_CAM( 14, ref l_U129[3] );
            SET_CAM_POS( l_U129[3], -430.47080000, 354.68760000, 12.96460000 );
            SET_CAM_ROT( l_U129[3], -15.99450000, 0.00000000, -157.86650000 );
            SET_CAM_FOV( l_U129[3], 45.00000000 );
            SET_CAM_ACTIVE( l_U129[3], 1 );
            CREATE_CAM( 25, ref l_U128 );
            SET_CAM_SPLINE_DURATION( l_U128, 35000 );
            SET_CAM_SPLINE_SPEED_GRAPH( l_U128, 0 );
            SET_CAM_SPLINE_SPEED_CONSTANT( l_U128, 0 );
            ADD_CAM_SPLINE_NODE( l_U128, l_U129[0] );
            ADD_CAM_SPLINE_NODE( l_U128, l_U129[1] );
            ADD_CAM_SPLINE_NODE( l_U128, l_U129[2] );
            ADD_CAM_SPLINE_NODE( l_U128, l_U129[3] );
            SET_CAM_ACTIVE( l_U128, 1 );
            SET_CAM_PROPAGATE( l_U128, 1 );
            break;
        }
        l_U112 = 1;
        ACTIVATE_SCRIPTED_CAMS( 1, 1 );
    }
    return;
}

void sub_90246()
{
    if (l_U412 < l_U426)
    {
        if (l_U607 > l_U413[l_U412])
        {
            l_U411++;
            l_U412++;
            l_U112 = 0;
        }
    }
    return;
}

void sub_93732(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, boolean bParam4, boolean bParam5, unknown uParam6, unknown uParam7)
{
    int iVar10;
    int iVar11;
    string sVar12;
    float fVar13;

    iVar10 = 4;
    iVar11 = 0;
    sVar12 = "Missamb_herc_male";
    fVar13 = 0.00000000;
    GENERATE_RANDOM_FLOAT( ref fVar13 );
    switch (g_U30190)
    {
        case 2:
        if (bParam4)
        {
            iVar11 = g_U30222;
        }
        else
        {
            iVar11 = g_U30223;
        }
        if (bParam5)
        {
            sVar12 = "Missamb_herc_female";
            iVar10 = 5;
            if (bParam4)
            {
                iVar11 = g_U30224;
            }
            else
            {
                iVar11 = g_U30225;
            }
        }
        CREATE_OBJECT_NO_OFFSET( -195381842, uParam0._fU0, uParam0._fU4, uParam0._fU8, ref l_U504[l_U486], 1 );
        SET_OBJECT_HEADING( l_U504[l_U486], uParam3 );
        SET_OBJECT_VISIBLE( l_U504[l_U486], 0 );
        SET_OBJECT_COLLISION( l_U504[l_U486], 0 );
        CREATE_CHAR( iVar10, iVar11, uParam0._fU0, uParam0._fU4, uParam0._fU8, ref l_U487[l_U486], 0 );
        SET_CHAR_HEADING( l_U487[l_U486], uParam3 );
        SET_ROOM_FOR_CHAR_BY_NAME( l_U487[l_U486], "Room_Bar" );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U487[l_U486], 1 );
        TASK_PLAY_ANIM_WITH_FLAGS_AND_START_PHASE( l_U487[l_U486], uParam6, sVar12, 1000, -1, 2064, fVar13 );
        ATTACH_PED_TO_OBJECT( l_U487[l_U486], l_U504[l_U486], 0, 0.00000000, 0.00000000, 1.00000000, 0.00000000, 0.00000000, 0, 0 );
        l_U486++;
        break;
        case 1: break;
    }
    return;
}

void sub_94472()
{
    int I;
    char[16] cVar3;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;

    if (NOT (DOES_WIDGET_GROUP_EXIST( l_U521 )))
    {
        l_U521 = CREATE_WIDGET_GROUP( "Dance Off" );
        ADD_WIDGET_TOGGLE( "Force no stage skip", ref l_U588 );
        ADD_WIDGET_TOGGLE( "Dump positions to temp", ref l_U589 );
        I = 0;
        for ( I = 0; I < 16; I++ )
        {
            StrCopy( ref cVar3, "spectator ", 16 );
            ConcatString(ref cVar3, I, 16);
            if (DOES_CHAR_EXIST( l_U487[I] ))
            {
                if (NOT (IS_CHAR_DEAD( l_U487[I] )))
                {
                    GET_CHAR_COORDINATES( l_U487[I], ref l_U522[I]._fU0, ref l_U522[I]._fU4, ref l_U522[I]._fU8 );
                    l_U522[I]._fU8--;
                    GET_CHAR_HEADING( l_U487[I], ref l_U571[I] );
                    CREATE_WIDGET_GROUP( ref cVar3 );
                    ADD_WIDGET_FLOAT_SLIDER( "pos x", ref l_U522[I]._fU0, -9999.90000000, 9999.90000000, 0.01000000 );
                    ADD_WIDGET_FLOAT_SLIDER( "pos y", ref l_U522[I]._fU4, -9999.90000000, 9999.90000000, 0.01000000 );
                    ADD_WIDGET_FLOAT_SLIDER( "pos z", ref l_U522[I]._fU8, -9999.90000000, 9999.90000000, 0.01000000 );
                    ADD_WIDGET_FLOAT_SLIDER( "heading", ref l_U571[I], 0.00000000, 360.00000000, 1.00000000 );
                    END_WIDGET_GROUP();
                }
            }
        }
        END_WIDGET_GROUP();
    }
    return;
}

void sub_108393(unknown uParam0)
{
    l_U413[l_U426] = uParam0;
    l_U426++;
    return;
}

void sub_108720(unknown uParam0, unknown uParam1, unknown uParam2)
{
    l_U663[l_U659] = uParam2;
    l_U609[l_U659] = uParam1;
    l_U634[l_U659] = uParam0;
    l_U659++;
    return;
}

void sub_110781()
{
    DELETE_WIDGET_GROUP( l_U521 );
    return;
}

void sub_110950()
{
    int I;

    I = 0;
    for ( I = 0; I <= 15; I++ )
    {
        if (DOES_CHAR_EXIST( l_U487[I] ))
        {
            if (NOT (IS_CHAR_DEAD( l_U487[I] )))
            {
                DETACH_PED( l_U487[I], 1 );
                DELETE_OBJECT( ref l_U504[I] );
                DELETE_CHAR( ref l_U487[I] );
            }
        }
    }
    return;
}

void sub_111083()
{
    g_U30251 = {0.00000000, 0.00000000, 0.00000000};
    g_U30254 = {0.00000000, 0.00000000, 0.00000000};
    g_U30230[2] = nil;
    g_U30230[1] = nil;
    g_U30230[0] = nil;
    return;
}

void sub_114178()
{
    l_U99 = 1;
    ACTIVATE_SCRIPTED_CAMS( 0, 0 );
    sub_2257();
    switch (g_U30190)
    {
        case 2:
        ACTIVATE_SCRIPTED_CAMS( 1, 1 );
        CREATE_CAM( 14, ref l_U129[0] );
        SET_CAM_POS( l_U129[0], -428.13550000, 352.96350000, 11.71540000 );
        SET_CAM_ROT( l_U129[0], -1.33600000, 0.00000000, 109.73770000 );
        SET_CAM_FOV( l_U129[0], 45.00000000 );
        SET_CAM_ACTIVE( l_U129[0], 1 );
        CREATE_CAM( 14, ref l_U129[1] );
        SET_CAM_POS( l_U129[1], -427.68920000, 353.12270000, 12.06190000 );
        SET_CAM_ROT( l_U129[1], -4.29990000, 0.00000000, 109.04160000 );
        SET_CAM_FOV( l_U129[1], 45.00000000 );
        SET_CAM_ACTIVE( l_U129[1], 1 );
        CREATE_CAM( 14, ref l_U129[2] );
        SET_CAM_POS( l_U129[2], -427.24290000, 353.28190000, 12.40840000 );
        SET_CAM_ROT( l_U129[2], -7.26380000, 0.00000000, 108.34560000 );
        SET_CAM_FOV( l_U129[2], 45.00000000 );
        SET_CAM_ACTIVE( l_U129[2], 1 );
        CREATE_CAM( 14, ref l_U129[3] );
        SET_CAM_POS( l_U129[3], -426.79660000, 353.44110000, 12.75490000 );
        SET_CAM_ROT( l_U129[3], -10.22770000, 0.00000000, 107.64950000 );
        SET_CAM_FOV( l_U129[3], 45.00000000 );
        SET_CAM_ACTIVE( l_U129[3], 1 );
        CREATE_CAM( 25, ref l_U128 );
        SET_CAM_SPLINE_DURATION( l_U128, 10000 );
        SET_CAM_SPLINE_SPEED_GRAPH( l_U128, 0 );
        SET_CAM_SPLINE_SPEED_CONSTANT( l_U128, 0 );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[0] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[1] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[2] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[3] );
        SET_CAM_ACTIVE( l_U128, 1 );
        SET_CAM_PROPAGATE( l_U128, 1 );
        break;
        case 0:
        sub_44635( 3 );
        break;
        case 1:
        sub_5921( -486.40100000, 147.78590000, 7.55610000, 10.20000000, 1 );
        ACTIVATE_SCRIPTED_CAMS( 1, 1 );
        CREATE_CAM( 14, ref l_U129[0] );
        SET_CAM_POS( l_U129[0], -487.68590000, 146.69980000, 7.10530000 );
        SET_CAM_ROT( l_U129[0], 13.65200000, -8.15040000, -37.70360000 );
        SET_CAM_FOV( l_U129[0], 18.00010000 );
        SET_CAM_ACTIVE( l_U129[0], 1 );
        CREATE_CAM( 14, ref l_U129[1] );
        SET_CAM_POS( l_U129[1], -487.95690000, 146.32300000, 6.99380000 );
        SET_CAM_ROT( l_U129[1], 13.39890000, -8.15880000, -35.34280000 );
        SET_CAM_FOV( l_U129[1], 18.00010000 );
        SET_CAM_ACTIVE( l_U129[1], 1 );
        CREATE_CAM( 14, ref l_U129[2] );
        SET_CAM_POS( l_U129[2], -488.22790000, 145.94620000, 6.88220000 );
        SET_CAM_ROT( l_U129[2], 13.14570000, -8.16720000, -32.98200000 );
        SET_CAM_FOV( l_U129[2], 18.00010000 );
        SET_CAM_ACTIVE( l_U129[2], 1 );
        CREATE_CAM( 14, ref l_U129[3] );
        SET_CAM_POS( l_U129[3], -488.49890000, 145.56940000, 6.77070000 );
        SET_CAM_ROT( l_U129[3], 12.89260000, -8.17560000, -30.62120000 );
        SET_CAM_FOV( l_U129[3], 18.00010000 );
        SET_CAM_ACTIVE( l_U129[3], 1 );
        CREATE_CAM( 25, ref l_U128 );
        SET_CAM_SPLINE_DURATION( l_U128, 10000 );
        SET_CAM_SPLINE_SPEED_GRAPH( l_U128, 0 );
        SET_CAM_SPLINE_SPEED_CONSTANT( l_U128, 0 );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[0] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[1] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[2] );
        ADD_CAM_SPLINE_NODE( l_U128, l_U129[3] );
        SET_CAM_ACTIVE( l_U128, 1 );
        SET_CAM_PROPAGATE( l_U128, 1 );
        break;
    }
    return;
}

